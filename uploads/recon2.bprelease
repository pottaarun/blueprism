<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>recon2</bpr:name>
    <bpr:release-notes />
    <bpr:created>2024-07-11 18:15:56Z</bpr:created>
    <bpr:package-id>36</bpr:package-id>
    <bpr:package-name>recon</bpr:package-name>
    <bpr:user-created-by>admin</bpr:user-created-by>
    <bpr:contents count="6">
        <process id="0687e2fd-0b26-4a1f-9758-345bb6ccadcb" name="Bank Reconciliation - Reconciliation Work" xmlns="http://www.blueprism.co.uk/product/process"><process name="Bank Reconciliation - Reconciliation Work" version="1.0" bpversion="7.3.0.9110" narrative="" byrefcollection="true" processrunningmessage="" disableversioning="false"><view><camerax>-148</camerax><cameray>39</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="- The file &quot;General Ledger.xlxs&quot; should be present in the predetermined folder (General Ledger File Path) and it should be in the format provided as an example" /><condition narrative="- The file &quot;Bank Statement.xlxs&quot; should be present in the predetermined folder (Bank Statement File Path) and it should be in the format provided as an example." /></preconditions><endpoint narrative="" /><subsheet subsheetid="199b68c7-7f65-4811-844f-549503f5660a" type="Normal" published="False"><name>Work Item Processing</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9797baea-9c2f-46a3-b1c9-3eae848eb504" type="Normal" published="False"><name>Load Excel in Collection</name><view><camerax>20</camerax><cameray>267</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="34d08770-0f05-4e84-8ba5-d1b081ed3773" type="Normal" published="False"><name>Load Bank Statement in Collection</name><view><camerax>20</camerax><cameray>-180</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d" type="Normal" published="False"><name>Consolidate Collection</name><view><camerax>27</camerax><cameray>315</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b5c89656-7527-4e54-865b-6201e84ad58d" type="Normal" published="False"><name>Compare</name><view><camerax>15</camerax><cameray>120</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1a7ce885-e91b-4cb4-a59c-7e8b16f52506" type="Normal" published="False"><name>Create Results</name><view><camerax>27</camerax><cameray>180</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b749d60a-bded-4d36-b099-3627ed699606" type="Normal" published="False"><name>Populate Queue</name><view><camerax>27</camerax><cameray>135</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d31d1c11-61ad-4c49-91a4-44bbf0bf0725" type="Normal" published="False"><name>Mark Item As Completed</name><view><camerax>0</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="30a66a72-d51e-464f-89e3-f40b54998601" name="Start" type="Start"><display x="-180" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dc659691-7aa5-4f0f-b000-0b3b9a9390d9</onsuccess></stage><stage stageid="8b6eaa66-766c-4d2a-a0d1-cc6ab7e4f32d" name="Stage1" type="ProcessInfo"><display x="-405" y="-120" w="180" h="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="62aec640-1920-44e6-8b1e-be6a9725cec8" name="Mark Item As Completed" type="SubSheetInfo"><subsheetid>d31d1c11-61ad-4c49-91a4-44bbf0bf0725</subsheetid><narrative>Marks the current work queue item as complete</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6047b42e-0003-4ddb-8ba3-d3607d6ce770" name="Start" type="Start"><subsheetid>d31d1c11-61ad-4c49-91a4-44bbf0bf0725</subsheetid><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>126538a7-7404-4369-8cdd-056490ecc46c</onsuccess></stage><stage stageid="86bb4f43-18d4-43dd-9bf5-b8902e21521c" name="Mark Completed" type="Action"><subsheetid>d31d1c11-61ad-4c49-91a4-44bbf0bf0725</subsheetid><narrative>Marks the item as completed, by updating the Completed timestamp and setting Locked to null. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /></inputs><onsuccess>7f3bfe56-9180-4254-8d9c-ee9ab331b39a</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Completed" /></stage><stage stageid="126538a7-7404-4369-8cdd-056490ecc46c" name="Set Status" type="Action"><subsheetid>d31d1c11-61ad-4c49-91a4-44bbf0bf0725</subsheetid><narrative>Updates the status field for the item. The status field can be used to flag what has been done in a process so far. If a process encounters an exception, this information can be used to skip to the parts of the process not yet done for the item next time it is worked. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.

This action will also reset the Attempts column to zero, because if the status updated the process should have successfully done something.</narrative><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /><input type="text" name="Status" narrative="The new status - 255 characters maximum." expr="&quot;Completed&quot;" /></inputs><onsuccess>86bb4f43-18d4-43dd-9bf5-b8902e21521c</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Update Status" /></stage><stage stageid="7f3bfe56-9180-4254-8d9c-ee9ab331b39a" name="End3" type="End"><subsheetid>d31d1c11-61ad-4c49-91a4-44bbf0bf0725</subsheetid><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a9123fda-6d02-4484-aaf0-14b9b85d6b97" name="Populate Queue" type="SubSheetInfo"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="-210" y="-150" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="275b91ea-8c22-44f7-804b-201f234f19b9" name="Start" type="Start"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="InputCollection" stage="Input Collection" /></inputs><onsuccess>ea479a64-b2ee-4352-b497-669bf791346a</onsuccess></stage><stage stageid="dc7df0cb-5182-477f-8c1e-181fcc08d09b" name="End" type="End"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="15" y="480" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fee70eb7-dda6-4069-bfec-62e1ea4809d8" name="Lock Token" type="Data"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="-180" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="318bacb1-b302-4f7b-b4e2-8cb1dd422e25" name="Lock Name" type="Data"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="-180" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">LockName1</initialvalue><private /><alwaysinit /></stage><stage stageid="1fe7d33e-bda4-42f2-8389-528c1ad42f60" name="Populate Queue Settings" type="Block"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="-255" y="-60" w="150" h="135" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ea479a64-b2ee-4352-b497-669bf791346a" name="Got Lock?" type="Decision"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Lock]" /><ontrue>eeec3c22-a00a-4301-ba60-ecc8a116ba22</ontrue><onfalse>30e6e9dd-dca0-47d6-b758-8260a5269a57</onfalse></stage><stage stageid="949d4522-7e6e-4e78-b4c0-6b5a82cc49ad" name="End5" type="End"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="225" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30e6e9dd-dca0-47d6-b758-8260a5269a57" name="Note6" type="Note"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><narrative>Another session is loading work</narrative><display x="120" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>949d4522-7e6e-4e78-b4c0-6b5a82cc49ad</onsuccess></stage><stage stageid="0bfa9daa-527c-47fb-8383-6cf663d9ee6c" name="Load Work Block" type="Block"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="-90" y="15" w="390" h="375" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bf23b5fb-a7eb-4f0b-a81c-45b0a4470209" name="Recover" type="Recover"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="255" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>2741e925-6743-4547-b72c-65c3a5ee6be4</onsuccess></stage><stage stageid="2741e925-6743-4547-b72c-65c3a5ee6be4" name="Release Lock" type="Action"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><narrative>Releases the lock(s) associated with the given name and token</narrative><display x="360" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Name" narrative="The name of the specific lock to be released. Default behaviour is to release all locks with the given token." expr="[Lock Name]" /><input type="text" name="Token" narrative="The token associated with the lock(s) to be released. Mandatory parameter." expr="[Lock Token]" /><input type="text" name="Comment" narrative="The comments to set on the lock(s)" expr="" /><input type="flag" name="All Sessions" narrative="True to release locks matching the specified constraints across all sessions; False to only release locks acquired in the current session. Default is False" expr="True" /></inputs><onsuccess>3088063b-55f9-4d06-944f-ea1edf0e1882</onsuccess><resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Release Lock" /></stage><stage stageid="3088063b-55f9-4d06-944f-ea1edf0e1882" name="Throw" type="Exception"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="435" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="8aa0e449-487a-4c7e-813b-5beef1d0bbf8" name="General Ledger File Path" type="Data"><display x="-390" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Demo\BankRec\General Ledger.xlsx</initialvalue><private /><alwaysinit /></stage><stage stageid="affccb5e-a0a3-4c13-b85c-51cbbd48b350" name="Bank Statement File Path" type="Data"><display x="-390" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Demo\BankRec\Bank Statement.xlsx</initialvalue><private /><alwaysinit /></stage><stage stageid="0120cfcc-0256-4054-87df-04b271e9bdd7" name="Load Excel in Collection" type="SubSheetInfo"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a4849964-8c52-4ae5-b128-3152dcfb23dd" name="Start" type="Start"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="-225" /><inputs><input type="text" name="Path" stage="Path" /><input type="text" name="StartCell" stage="StartCell" /><input type="text" name="Worksheet Name" stage="Worksheet Name" /></inputs><onsuccess>3c0c320d-7559-4e89-816d-fd17dad43012</onsuccess></stage><stage stageid="4058aa0d-75b4-4f39-aa4d-c4e810ef0017" name="End" type="End"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="555" /><outputs><output type="collection" name="ExcelContent" stage="Output Collection" /><output type="collection" name="FullExcelContent" stage="Full Excel Content Collection" /></outputs></stage><stage stageid="3c0c320d-7559-4e89-816d-fd17dad43012" name="Create Excel Instance" type="Action"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="-180" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="[Enable Events]" /></inputs><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="Handle" /></outputs><onsuccess>5d3c9cef-c502-4f9a-856e-151bc2439473</onsuccess><resource object="MS Excel VBO" action="Create Instance" /></stage><stage stageid="5d3c9cef-c502-4f9a-856e-151bc2439473" name="Show Excel" type="Action"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window displayed. The default of zero indicates the currently active instance." expr="[Handle]" /></inputs><onsuccess>99b7b403-6cc8-40b4-bc29-f541cda871f5</onsuccess><resource object="MS Excel VBO" action="Show" /></stage><stage stageid="0baa27ca-adf9-4541-8b30-a7af4c84931f" name="Enable Events" type="Data"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="-15" y="-180" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="80e9641c-dfb5-46ca-bc90-1517498608c1" name="Handle" type="Data"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="150" y="-180" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="99b7b403-6cc8-40b4-bc29-f541cda871f5" name="Open Workbook" type="Action"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="-90" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="File name" narrative="The path and name of the file which should be opened." expr="[Path]" /></inputs><outputs><output type="text" name="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="Workbook Name" /></outputs><onsuccess>bc542a69-a94d-4c0a-ad7c-57c540f846ae</onsuccess><resource object="MS Excel VBO" action="Open Workbook" /></stage><stage stageid="e50e4d93-e573-407c-a822-a5309ed67ee4" name="Excel Content" type="Collection"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="165" y="-45" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="60502daa-2e97-4618-b78c-2b3b7cc50730" name="Exit Excel" type="Action"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="0" /><onsuccess>1d1930ac-3cee-4df7-9d62-8752663e04e6</onsuccess><resource object="MS Excel VBO" action="Exit" /></stage><stage stageid="2a9e4ce2-817b-4f11-a15c-840362b990ee" name="End7" type="End"><display x="-60" y="180" /></stage><stage stageid="dc659691-7aa5-4f0f-b000-0b3b9a9390d9" name="Load General Ledger in Collection" type="SubSheet"><display x="-180" y="-135" /><inputs><input type="text" name="Path" expr="[General Ledger File Path]" /><input type="text" name="StartCell" expr="" /><input type="text" name="Worksheet Name" expr="[GL Worksheet Name]" /></inputs><outputs><output type="collection" name="ExcelContent" stage="GL Collection" /><output type="collection" name="FullExcelContent" stage="Full GL Content Collection" /></outputs><onsuccess>afe23376-fec1-45ee-8e0b-f39ae3468cfb</onsuccess><processid>9797baea-9c2f-46a3-b1c9-3eae848eb504</processid></stage><stage stageid="45c9af64-60e2-4956-ae82-edcc8b38819e" name="Workbook Name" type="Data"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="165" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc542a69-a94d-4c0a-ad7c-57c540f846ae" name="Get Worksheet as Collection" type="Action"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="-45" /><outputs><output type="collection" name="Data" narrative="The data output" stage="Excel Content" /></outputs><onsuccess>60502daa-2e97-4618-b78c-2b3b7cc50730</onsuccess><resource object="MS Excel VBO" action="Get Worksheet As Collection (Fast)" /></stage><stage stageid="edb30583-d12e-45e4-9d9b-28b37b6b92ab" name="Path" type="Data"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="165" y="-225" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0ba381c8-0dfb-4aa7-9825-2fccb382e2f5" name="StartCell" type="Data"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="315" y="-225" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11d231f8-cb55-4805-ac76-209efaedc8b6" name="GL Collection" type="Collection"><display x="-390" y="180" w="120" h="30" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="Ref#" type="text" /><field name="Check#" type="text" /><field name="Amount" type="number" /></collectioninfo></stage><stage stageid="a0d675e4-6bfd-480c-976f-db0189378ef4" name="Load Bank Statement in Collection" type="SubSheet"><display x="-180" y="30" /><inputs><input type="text" name="Path" expr="[Bank Statement File Path]" /><input type="text" name="StartCell" expr="" /><input type="text" name="Worksheet Name" expr="[BS Worksheet Name]" /></inputs><outputs><output type="collection" name="ExcelContent" stage="BS Collection" /><output type="collection" name="FullExcelContent" stage="Full BS Content Collection" /></outputs><onsuccess>a6315d77-5e58-446c-9011-4f62e04abe35</onsuccess><processid>34d08770-0f05-4e84-8ba5-d1b081ed3773</processid></stage><stage stageid="c6481c73-9dc3-4bfe-9faf-b408a33062a9" name="BS Collection" type="Collection"><display x="-390" y="315" w="120" h="30" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="f6b9b1e6-e2fa-4b4c-b80d-2b04d09f9e9b" name="Worksheet Name" type="Data"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="240" y="-225" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bab27ee6-aebb-498f-92b2-912e6cde5ec9" name="GL Worksheet Name" type="Data"><display x="-390" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">General Ledger Report</initialvalue><private /><alwaysinit /></stage><stage stageid="a1202f71-091d-421c-8859-a6ae3845c19d" name="BS Worksheet Name" type="Data"><display x="-390" y="285" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Bank Statement</initialvalue><private /><alwaysinit /></stage><stage stageid="a44280e2-eff1-4be0-86a5-5c66ffbdb625" name="Consolidate Collection" type="SubSheetInfo"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="-225" y="-105" w="150" h="90" /></stage><stage stageid="8e0afd82-e784-4eff-ab07-061bb2ce227b" name="Start" type="Start"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="15" y="-135" /><inputs><input type="collection" name="Collection to Consolidate" stage="Collection to Consolidate" /></inputs><onsuccess>03b630a4-1f00-484e-9e2e-9ebd08522404</onsuccess></stage><stage stageid="1e454062-dc21-4f3e-9320-a52fc58cd0b1" name="End" type="End"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="15" y="615" /><outputs><output type="collection" name="Consolidated Collection" stage="Consolidated Collection" /></outputs></stage><stage stageid="6c374a44-48dc-49d8-acf3-f040d20ff352" name="Collection to Consolidate" type="Collection"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="-135" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Ref#" type="text" /><field name="Check#" type="text" /><field name="Amount" type="number" /></collectioninfo></stage><stage stageid="56cfccc7-50ab-4157-aa56-2e9fb22aa819" name="Consolidated Collection" type="Collection"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="195" y="90" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Ref#" type="text" /><field name="Check#" type="text" /><field name="Amount" type="number" /></collectioninfo></stage><stage stageid="40437438-a68f-41ed-b99b-306908384493" name="Loop Start1" type="LoopStart"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="15" y="-45" /><onsuccess>0b36850e-03e2-4a05-b8e1-0a311d6d4795</onsuccess><groupid>f443b749-19e1-42de-b3e1-a39afbd163f8</groupid><looptype>ForEach</looptype><loopdata>Collection to Consolidate</loopdata></stage><stage stageid="ea57e2d7-6f7a-46ec-bfd5-6039a6c5a4a1" name="Loop End1" type="LoopEnd"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="15" y="570" /><onsuccess>1e454062-dc21-4f3e-9320-a52fc58cd0b1</onsuccess><groupid>f443b749-19e1-42de-b3e1-a39afbd163f8</groupid></stage><stage stageid="bbde1511-dcdb-43ec-9da3-adf673d6b56c" name="Temp Collection" type="Collection"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="195" y="0" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Ref#" type="text" /><field name="Check#" type="text" /><field name="Amount" type="number" /></collectioninfo></stage><stage stageid="d55b0622-9507-4f0a-af13-94965663da57" name="Copy Collection" type="Action"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="45" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection to Consolidate&quot;" /><input type="number" name="Start Row" narrative="The index of the first row to copy. The index is from 0 to N-1 (where N is the total number of rows in the collection)." expr="0" /><input type="number" name="End Row" narrative="The index of the last row to copy. The index is from 0 to N-1 (where N is the total number of rows in the collection)." expr="[Number of rows]-1" /></inputs><outputs><output type="collection" name="Result" narrative="A collection which contains the rows copied from the input collection" stage="Temp Collection" /></outputs><onsuccess>f751bf18-7357-4ee3-9417-c1f0a97eff92</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Copy Rows" /></stage><stage stageid="afe23376-fec1-45ee-8e0b-f39ae3468cfb" name="Consolidate GL Collection" type="SubSheet"><display x="-180" y="-90" /><inputs><input type="collection" name="Collection to Consolidate" expr="[GL Collection]" /></inputs><outputs><output type="collection" name="Consolidated Collection" stage="GL Collection" /></outputs><onsuccess>09a21a6a-2d21-43ad-9866-42447f0c8040</onsuccess><processid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</processid></stage><stage stageid="efc52247-aff8-400c-82b4-45bf7f7ee481" name="Reset Temp Collection" type="Action"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="0" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Temp Collection&quot;" /></inputs><onsuccess>d55b0622-9507-4f0a-af13-94965663da57</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Remove All Rows" /></stage><stage stageid="03b630a4-1f00-484e-9e2e-9ebd08522404" name="Get number of rows" type="Action"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="15" y="-90" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection to Consolidate&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Number of rows" /></outputs><onsuccess>40437438-a68f-41ed-b99b-306908384493</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="c5405537-8d69-4254-bba6-18b0dbab49ca" name="Number of rows" type="Data"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="-90" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1d1930ac-3cee-4df7-9d62-8752663e04e6" name="Loop Start2" type="LoopStart"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="45" /><onsuccess>bda5599c-c3ee-4dc2-840b-6660802c8de2</onsuccess><groupid>81bc1508-afae-482c-8e05-b65c7b1757b4</groupid><looptype>ForEach</looptype><loopdata>Excel Content</loopdata></stage><stage stageid="fad87cef-cae6-4c55-abb5-e5e852aedcdb" name="Loop End2" type="LoopEnd"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="510" /><onsuccess>4058aa0d-75b4-4f39-aa4d-c4e810ef0017</onsuccess><groupid>81bc1508-afae-482c-8e05-b65c7b1757b4</groupid></stage><stage stageid="3c9db068-1526-404e-9c7c-422f6ab45f7b" name="Output Collection" type="Collection"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="150" y="90" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Ref#" type="text" /><field name="Check#" type="text" /><field name="Amount" type="number" /></collectioninfo></stage><stage stageid="dd84ca7e-62a5-4b77-ab4e-3743b2a5b6bc" name="Add empty Row to Output Collection" type="Action"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="90" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Output Collection&quot;" /></inputs><onsuccess>acdf9b55-ef05-46bc-9c11-b9805d00fcd9</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="acdf9b55-ef05-46bc-9c11-b9805d00fcd9" name="Set Ref#" type="Calculation"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="135" /><onsuccess>dbf26a1d-4614-4e02-90ab-839e112fd171</onsuccess><calculation expression="[Excel Content.Column2]" stage="Output Collection.Ref#" /></stage><stage stageid="dbf26a1d-4614-4e02-90ab-839e112fd171" name="Set Check#" type="Calculation"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="180" /><onsuccess>131eb9ff-1e26-4161-ad38-a1683ef40eea</onsuccess><calculation expression="[Excel Content.Column3]" stage="Output Collection.Check#" /></stage><stage stageid="9640472d-bbda-4d2b-b6b7-e2242aad4b77" name="Set Amount#" type="Calculation"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="375" /><onsuccess>94ba1ee3-f9fe-4680-9ac2-7d75a0b17264</onsuccess><calculation expression="[Credit] - [Debit]" stage="Output Collection.Amount" /></stage><stage stageid="7b0b0541-97e6-40a0-b82c-20fa423c360b" name="Debit" type="Data"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="255" y="225" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d98aab6f-9f31-4d07-a672-82ef54c2821f" name="Credit" type="Data"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="255" y="315" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="67edb712-91a4-40f7-a6dd-e0f8ade26533" name="Set Debit" type="Calculation"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="165" y="225" /><onsuccess>28a1c644-6743-4bbd-ad04-06c16fae63a1</onsuccess><calculation expression="ToNumber(Replace([Excel Content.Column5], &quot;$&quot;, &quot; &quot;)) " stage="Debit" /></stage><stage stageid="131eb9ff-1e26-4161-ad38-a1683ef40eea" name="Empty Debit Field?" type="Decision"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="225" /><decision expression="Len(Trim([Excel Content.Column5]))=0" /><ontrue>a6487549-58d9-4603-b635-30e9ce1512e9</ontrue><onfalse>67edb712-91a4-40f7-a6dd-e0f8ade26533</onfalse></stage><stage stageid="a6487549-58d9-4603-b635-30e9ce1512e9" name="Set Debit 0" type="Calculation"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="-15" y="225" /><onsuccess>87d3ad0f-4d90-416c-9d06-0f12dd76a773</onsuccess><calculation expression="0" stage="Debit" /></stage><stage stageid="87d3ad0f-4d90-416c-9d06-0f12dd76a773" name="Anchor4" type="Anchor"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="-15" y="270" w="10" h="10" /><onsuccess>89f5d89e-be10-4e24-8b2c-461a577b0ceb</onsuccess></stage><stage stageid="89f5d89e-be10-4e24-8b2c-461a577b0ceb" name="Anchor5" type="Anchor"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="270" w="10" h="10" /><onsuccess>3081fcba-5252-4913-b107-2408168ecb63</onsuccess></stage><stage stageid="28a1c644-6743-4bbd-ad04-06c16fae63a1" name="Anchor6" type="Anchor"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="165" y="270" w="10" h="10" /><onsuccess>89f5d89e-be10-4e24-8b2c-461a577b0ceb</onsuccess></stage><stage stageid="3081fcba-5252-4913-b107-2408168ecb63" name="Empty Credit Field?" type="Decision"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="315" /><decision expression="Len(Trim([Excel Content.Column6]))=0" /><ontrue>935d90ef-563b-4f1c-8676-0ff3c0af3bda</ontrue><onfalse>39afd3db-08ab-4194-b794-1706e41b2c20</onfalse></stage><stage stageid="935d90ef-563b-4f1c-8676-0ff3c0af3bda" name="Set Credit 0" type="Calculation"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="-15" y="315" /><onsuccess>e0f17c27-3795-48b0-8b68-96ad1c6f7d57</onsuccess><calculation expression="0" stage="Credit" /></stage><stage stageid="39afd3db-08ab-4194-b794-1706e41b2c20" name="Set Credit" type="Calculation"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="165" y="315" /><onsuccess>5e31c62e-44a5-4c72-a6d7-32f35aaca30f</onsuccess><calculation expression="ToNumber(Replace([Excel Content.Column6], &quot;$&quot;, &quot; &quot;)) " stage="Credit" /></stage><stage stageid="e0f17c27-3795-48b0-8b68-96ad1c6f7d57" name="Anchor7" type="Anchor"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="-15" y="345" w="10" h="10" /><onsuccess>a9883757-1c44-47c5-a239-a28aa0f038e5</onsuccess></stage><stage stageid="a9883757-1c44-47c5-a239-a28aa0f038e5" name="Anchor8" type="Anchor"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="345" w="10" h="10" /><onsuccess>9640472d-bbda-4d2b-b6b7-e2242aad4b77</onsuccess></stage><stage stageid="5e31c62e-44a5-4c72-a6d7-32f35aaca30f" name="Anchor9" type="Anchor"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="165" y="345" w="10" h="10" /><onsuccess>a9883757-1c44-47c5-a239-a28aa0f038e5</onsuccess></stage><stage stageid="f751bf18-7357-4ee3-9417-c1f0a97eff92" name="Add empty Row to Consolidated Collection" type="Action"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="90" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Consolidated Collection&quot;" /></inputs><onsuccess>9a74a299-1e72-4595-b5a1-da1c835052b3</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="9a74a299-1e72-4595-b5a1-da1c835052b3" name="Set Ref#" type="Calculation"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="135" /><onsuccess>b25f5001-c0cd-4096-b860-72d4658246a4</onsuccess><calculation expression="[Collection to Consolidate.Ref#]" stage="Consolidated Collection.Ref#" /></stage><stage stageid="b25f5001-c0cd-4096-b860-72d4658246a4" name="Set Check#" type="Calculation"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="180" /><onsuccess>b845efc9-0689-4150-b776-3a210c1fa3b3</onsuccess><calculation expression="[Collection to Consolidate.Check#]" stage="Consolidated Collection.Check#" /></stage><stage stageid="6b49f7e7-453b-4a04-9a2d-24a18de232ae" name="Loop Start3" type="LoopStart"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="315" /><onsuccess>486bb82b-d414-4217-99c7-7a9f5a7d03d6</onsuccess><groupid>feb825f4-e534-40ca-88bb-a6cb77172fad</groupid><looptype>ForEach</looptype><loopdata>Temp Collection</loopdata></stage><stage stageid="3eb44d65-5a2b-4d72-9acf-e2724bdf6469" name="Loop End3" type="LoopEnd"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="450" /><onsuccess>81026b81-0074-4fc1-a433-1d8d6e64414f</onsuccess><groupid>feb825f4-e534-40ca-88bb-a6cb77172fad</groupid></stage><stage stageid="6582fcf2-6070-48ac-ba05-59f75895842e" name="Anchor2" type="Anchor"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="570" w="10" h="10" /><onsuccess>ea57e2d7-6f7a-46ec-bfd5-6039a6c5a4a1</onsuccess></stage><stage stageid="3441d0e8-c5cb-445e-9312-6f56f41a4405" name="Consolidated Amount" type="Data"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="195" y="225" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b845efc9-0689-4150-b776-3a210c1fa3b3" name="Set Consolidated Amount to 0" type="Calculation"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="225" /><onsuccess>156b1a0b-ac5b-4582-a043-c7d8a5d801db</onsuccess><calculation expression="0" stage="Consolidated Amount" /></stage><stage stageid="156b1a0b-ac5b-4582-a043-c7d8a5d801db" name="Ref# = &quot;&quot;" type="Decision"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="270" /><decision expression="[Consolidated Collection.Ref#]=&quot;&quot;" /><ontrue>8e5ab36b-a6b3-44a1-b0d8-750134c933b8</ontrue><onfalse>6b49f7e7-453b-4a04-9a2d-24a18de232ae</onfalse></stage><stage stageid="0b36850e-03e2-4a05-b8e1-0a311d6d4795" name="Anchor3" type="Anchor"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="-45" w="10" h="10" /><onsuccess>efc52247-aff8-400c-82b4-45bf7f7ee481</onsuccess></stage><stage stageid="625a0907-3b55-4359-9c6a-891d42be64e6" name="Set Consolidated Amount to Amount" type="Calculation"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="15" y="345" /><onsuccess>ea57e2d7-6f7a-46ec-bfd5-6039a6c5a4a1</onsuccess><calculation expression="[Collection to Consolidate.Amount]" stage="Consolidated Collection.Amount" /></stage><stage stageid="8e5ab36b-a6b3-44a1-b0d8-750134c933b8" name="Note8" type="Note"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><narrative>If Ref# is empty, then it is a check</narrative><display x="15" y="270" /><onsuccess>625a0907-3b55-4359-9c6a-891d42be64e6</onsuccess></stage><stage stageid="641d3fdf-c78c-44b4-b0c1-62d4a6771a6a" name="Same Ref#?" type="Decision"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="165" y="360" /><decision expression="[Temp Collection.Ref#] = [Consolidated Collection.Ref#]" /><ontrue>134d2a86-bde8-4696-9b74-55b6dc8d38da</ontrue><onfalse>a0336e1b-2e54-4ad1-bb61-742249b629fe</onfalse></stage><stage stageid="134d2a86-bde8-4696-9b74-55b6dc8d38da" name="Add amount" type="Calculation"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="165" y="405" /><onsuccess>04502d96-0ca3-432d-af08-5f9ef9f0310c</onsuccess><calculation expression="[Consolidated Amount] + [Temp Collection.Amount]" stage="Consolidated Amount" /></stage><stage stageid="486bb82b-d414-4217-99c7-7a9f5a7d03d6" name="Anchor1" type="Anchor"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="165" y="315" w="10" h="10" /><onsuccess>641d3fdf-c78c-44b4-b0c1-62d4a6771a6a</onsuccess></stage><stage stageid="04502d96-0ca3-432d-af08-5f9ef9f0310c" name="Anchor10" type="Anchor"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="165" y="450" w="10" h="10" /><onsuccess>3eb44d65-5a2b-4d72-9acf-e2724bdf6469</onsuccess></stage><stage stageid="a0336e1b-2e54-4ad1-bb61-742249b629fe" name="Anchor11" type="Anchor"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="360" w="10" h="10" /><onsuccess>3eb44d65-5a2b-4d72-9acf-e2724bdf6469</onsuccess></stage><stage stageid="81026b81-0074-4fc1-a433-1d8d6e64414f" name="Set Consolidated Amount to Amount" type="Calculation"><subsheetid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</subsheetid><display x="105" y="510" /><onsuccess>6582fcf2-6070-48ac-ba05-59f75895842e</onsuccess><calculation expression="[Consolidated Amount]" stage="Consolidated Collection.Amount" /></stage><stage stageid="a6315d77-5e58-446c-9011-4f62e04abe35" name="Consolidate BS Collection" type="SubSheet"><display x="-180" y="75" /><inputs><input type="collection" name="Collection to Consolidate" expr="[BS Collection]" /></inputs><outputs><output type="collection" name="Consolidated Collection" stage="BS Collection" /></outputs><onsuccess>de684d33-22f2-4d23-ac9d-632dfa50fe02</onsuccess><processid>5d721bd0-6cb5-45d4-91a0-f8a09ba26e2d</processid></stage><stage stageid="1f6c1c80-6c15-4f66-a88e-e3ef8c43f53c" name="Bank Statement" type="Block"><narrative>Bank Statement</narrative><display x="-225" y="0" w="90" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="dc859180-0559-40cf-89b5-4cad9501343c" name="General Ledger" type="Block"><narrative>General Ledger</narrative><display x="-225" y="-165" w="90" h="150" /><font family="Segoe UI" size="10" style="Regular" color="33CCCC" /></stage><stage stageid="3fb74bf1-9f26-4186-906a-ba24550e59b4" name="Input Collection" type="Collection"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="105" y="-105" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Ref#" type="text" /><field name="Check#" type="text" /><field name="Amount" type="number" /></collectioninfo></stage><stage stageid="eeec3c22-a00a-4301-ba60-ecc8a116ba22" name="Loop Start4" type="LoopStart"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="15" y="45" /><onsuccess>904ecf2b-49da-4311-911d-680e4e6871fc</onsuccess><groupid>2e885d50-b267-4eb3-b583-f7dfa78abd66</groupid><looptype>ForEach</looptype><loopdata>Input Collection</loopdata></stage><stage stageid="1441ccbe-3377-4aa6-8a3d-49335c7bb0fb" name="Loop End4" type="LoopEnd"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="15" y="360" /><onsuccess>dc7df0cb-5182-477f-8c1e-181fcc08d09b</onsuccess><groupid>2e885d50-b267-4eb3-b583-f7dfa78abd66</groupid></stage><stage stageid="0b6b9229-55c6-4714-b23c-67b5f738381b" name="Single item Collection" type="Collection"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="105" y="135" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Key" type="text" /><field name="Ref#" type="text" /><field name="Check#" type="text" /><field name="Amount" type="number" /></collectioninfo><initialvalue><singlerow /><row><field name="Key" type="text" value="" /><field name="Ref#" type="text" value="" /><field name="Check#" type="text" value="" /><field name="Amount" type="number" value="" /></row></initialvalue></stage><stage stageid="9b357340-7977-4dc5-a123-ccb440516510" name="Copy single item" type="MultipleCalculation"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="15" y="135" /><onsuccess>c54a3889-6156-4a76-93ea-74fcfd14ef01</onsuccess><steps><calculation expression="[ItemKey]" stage="Single item Collection.Key" /><calculation expression="[Input Collection.Ref#]" stage="Single item Collection.Ref#" /><calculation expression="[Input Collection.Check#]" stage="Single item Collection.Check#" /><calculation expression="[Input Collection.Amount]" stage="Single item Collection.Amount" /></steps></stage><stage stageid="c54a3889-6156-4a76-93ea-74fcfd14ef01" name="Set in queue" type="Action"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><narrative>Check if an item with the given key is already in the queue</narrative><display x="15" y="180" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue to check" expr="&quot;S1 General Ledger&quot;" /><input type="text" name="Key" narrative="The key to check." expr="[ItemKey]" /><input type="flag" name="Include Pending" narrative="Check any items in the queue which are currently awaiting being worked. This will include any deferred items which have a deferral date in the past and any locked items. Optional - Default is True" expr="True" /><input type="flag" name="Include Deferred" narrative="Check any items in the queue which are currently deferred to a later date. Optional - Default is True" expr="False" /><input type="flag" name="Include Completed" narrative="Check any items in the queue which are completed. Optional - Default is True" expr="False" /><input type="flag" name="Include Terminated" narrative="Check any items in the queue which have been fully terminated. Optional - Default is True" expr="False" /></inputs><outputs><output type="collection" name="Item IDs" narrative="The Item IDs which represent the work items found with the given key" stage="" /><output type="flag" name="Result" narrative="True if an item with the given key is in the queue, False otherwise." stage="In queue" /></outputs><onsuccess>e1aef583-4f26-4fef-8605-c7974aea1489</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Is Item In Queue" /></stage><stage stageid="c1425db2-91c9-4c64-bf28-1603db6c125e" name="ItemKey" type="Data"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="105" y="90" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="904ecf2b-49da-4311-911d-680e4e6871fc" name="Set Key" type="Calculation"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="15" y="90" /><onsuccess>9b357340-7977-4dc5-a123-ccb440516510</onsuccess><calculation expression="[Input Collection.Ref#] &amp; &quot; -- &quot; &amp; [Input Collection.Check#]" stage="ItemKey" /></stage><stage stageid="32061de8-6e4f-4507-a93a-be1075eb4216" name="In queue" type="Data"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="90" y="180" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1aef583-4f26-4fef-8605-c7974aea1489" name="Item in queue?" type="Decision"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="15" y="225" /><decision expression="[In queue]" /><ontrue>3c90472f-d644-4d35-9c74-f6cdb11c37fc</ontrue><onfalse>77506cf5-ab4c-4025-a1c9-ca2130b50743</onfalse></stage><stage stageid="02ca57b5-88b2-4030-8a56-cb5511fc0d68" name="Add to queue" type="Action"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><display x="90" y="270" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue to add items to" expr="&quot;S1 General Ledger&quot;" /><input type="collection" name="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Single item Collection]" /><input type="datetime" name="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="" /><input type="text" name="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="" /></inputs><outputs><output type="collection" name="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="" /></outputs><onsuccess>c20ac45d-f568-4fbc-b270-ebcdd9255e27</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="77506cf5-ab4c-4025-a1c9-ca2130b50743" name="Anchor12" type="Anchor"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="90" y="225" w="10" h="10" /><onsuccess>02ca57b5-88b2-4030-8a56-cb5511fc0d68</onsuccess></stage><stage stageid="c20ac45d-f568-4fbc-b270-ebcdd9255e27" name="Anchor13" type="Anchor"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="90" y="315" w="10" h="10" /><onsuccess>3c90472f-d644-4d35-9c74-f6cdb11c37fc</onsuccess></stage><stage stageid="3c90472f-d644-4d35-9c74-f6cdb11c37fc" name="Anchor14" type="Anchor"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="15" y="315" w="10" h="10" /><onsuccess>1441ccbe-3377-4aa6-8a3d-49335c7bb0fb</onsuccess></stage><stage stageid="09a21a6a-2d21-43ad-9866-42447f0c8040" name="Populate Queue" type="SubSheet"><display x="-180" y="-45" /><inputs><input type="collection" name="InputCollection" expr="[GL Collection]" /></inputs><onsuccess>a0d675e4-6bfd-480c-976f-db0189378ef4</onsuccess><processid>b749d60a-bded-4d36-b099-3627ed699606</processid></stage><stage stageid="d87f5f4c-9a87-4791-8c4a-e08e8db616b0" name="Compare" type="SubSheetInfo"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9b5c8767-3295-46d1-a362-1e773a43712e" name="Start" type="Start"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="15" y="-120" /><inputs><input type="collection" name="Bank Statement Collection" stage="Bank Statement Collection" /></inputs><onsuccess>fa444e6d-7f66-48c5-a9fb-11bdcb108cdf</onsuccess></stage><stage stageid="b548e923-281f-42b5-9753-25ddac6764ff" name="End" type="End"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="15" y="345" /></stage><stage stageid="1fc39108-64b6-4246-8f1d-bae7c6a43435" name="Bank Statement Collection" type="Collection"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="105" y="-120" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Ref#" type="text" /><field name="Check#" type="text" /><field name="Amount" type="number" /></collectioninfo></stage><stage stageid="40f5e388-2de6-42fe-b0c5-5dc435cc99c3" name="Loop Start5" type="LoopStart"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="15" y="0" /><onsuccess>4062f0d8-eb45-4962-810f-d6596326a1fe</onsuccess><groupid>9d85493b-3f07-4742-82ee-c632c40fb904</groupid><looptype>ForEach</looptype><loopdata>Bank Statement Collection</loopdata></stage><stage stageid="cf72a798-fe7d-429d-a4c5-520a00eb6a01" name="Loop End5" type="LoopEnd"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="15" y="225" /><onsuccess>cb90d3b2-18c1-4b82-bb27-82d059aefd7f</onsuccess><groupid>9d85493b-3f07-4742-82ee-c632c40fb904</groupid></stage><stage stageid="ae11a507-402b-4a33-9277-513a9c3c18dd" name="Found item?" type="Data"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="90" y="-60" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4062f0d8-eb45-4962-810f-d6596326a1fe" name="Same Ref#?" type="Decision"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="15" y="60" /><decision expression="[Item Data.Ref#]&lt;&gt;&quot;&quot; AND [Item Data.Ref#] = [Bank Statement Collection.Ref#]" /><ontrue>39de7464-1317-44fe-839d-958d18cd2a36</ontrue><onfalse>76fbe176-d75d-4e47-9643-9037ab1d9de1</onfalse></stage><stage stageid="999d5012-b0cf-4bd6-a711-7fe6cbaae28d" name="Same Ref Amount?" type="Decision"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="195" y="60" /><decision expression="[Item Data.Amount] = [Bank Statement Collection.Amount]" /><ontrue>461d67ba-06b9-475f-a7d7-1644adcd078d</ontrue><onfalse>979c8fa5-e89e-48d4-b169-91ca8f580312</onfalse></stage><stage stageid="770b6a16-cb93-4eb2-b07a-afe74eeab75b" name="Anchor15" type="Anchor"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="15" y="165" w="10" h="10" /><onsuccess>cf72a798-fe7d-429d-a4c5-520a00eb6a01</onsuccess></stage><stage stageid="461d67ba-06b9-475f-a7d7-1644adcd078d" name="Anchor16" type="Anchor"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="195" y="165" w="10" h="10" /><onsuccess>770b6a16-cb93-4eb2-b07a-afe74eeab75b</onsuccess></stage><stage stageid="979c8fa5-e89e-48d4-b169-91ca8f580312" name="Ref AmountDiffers" type="Exception"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="300" y="60" w="90" h="30" /><exception type="Comparison failed" detail="&quot;Ref# &quot; &amp; [Item Data.Ref#] &amp; &quot; amount differs &quot; &amp; [Item Data.Amount] &amp; &quot; vs &quot; &amp; [Bank Statement Collection.Amount]" /></stage><stage stageid="76fbe176-d75d-4e47-9643-9037ab1d9de1" name="Same Check#?" type="Decision"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="15" y="120" /><decision expression="[Item Data.Check#]&lt;&gt;&quot;&quot; AND [Item Data.Check#] = [Bank Statement Collection.Check#]" /><ontrue>d9eaf273-b004-495b-a64c-96ab3b19f152</ontrue><onfalse>770b6a16-cb93-4eb2-b07a-afe74eeab75b</onfalse></stage><stage stageid="f8a7b0d0-1dd4-41e9-91f4-f91f77938297" name="Same Check Amount?" type="Decision"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="-165" y="120" /><decision expression="[Item Data.Amount] = [Bank Statement Collection.Amount]" /><ontrue>8f8eade2-198a-47c1-a07d-6e47a2705802</ontrue><onfalse>74a1f709-112e-49dc-b196-b2fb2d126afd</onfalse></stage><stage stageid="74a1f709-112e-49dc-b196-b2fb2d126afd" name="Check Amount Differs" type="Exception"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="-270" y="120" w="90" h="30" /><exception type="Comparison failed" detail="&quot;Check# &quot; &amp; [Item Data.Check#] &amp; &quot; amount differs GL &quot; &amp; [Item Data.Amount] &amp; &quot; vs Bank Statement &quot; &amp; [Bank Statement Collection.Amount]" /></stage><stage stageid="8f8eade2-198a-47c1-a07d-6e47a2705802" name="Anchor19" type="Anchor"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="-165" y="165" w="10" h="10" /><onsuccess>770b6a16-cb93-4eb2-b07a-afe74eeab75b</onsuccess></stage><stage stageid="4ec045fb-93aa-4a1a-ad2d-b7b5a56feba4" name="Create Results" type="SubSheetInfo"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="539ca967-43a6-43a1-b7ba-4e175994cdc3" name="Start" type="Start"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="15" y="-165" /><inputs><input type="text" name="Ref#" stage="Ref#" /><input type="text" name="Check#" stage="Check#" /><input type="text" name="Exception details" stage="Exception details" /><input type="collection" name="GL Details Collection" stage="GL Details" /><input type="collection" name="BS Details Collection" stage="BS Details" /></inputs><onsuccess>639ddb9a-eb32-4c89-b5a3-f3e0f1512cb1</onsuccess></stage><stage stageid="60df3211-08a4-4bff-abdb-b8e97e1b514e" name="End" type="End"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="285" y="360" /></stage><stage stageid="231f88bb-805b-47f3-be8e-ed95524e3b43" name="Subject" type="Data"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="90" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1cfa32ed-48bd-48ef-b44c-4ae210792dd4" name="E-mail body" type="Data"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="165" y="-45" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">email body</initialvalue><private /><alwaysinit /></stage><stage stageid="caba3e2b-7ae5-4f44-bf6c-469f4dad5fea" name="Recipients" type="Data"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="240" y="-45" /><datatype>text</datatype><initialvalue xml:space="preserve">SEDemo@blueprism.com</initialvalue><private /><alwaysinit /></stage><stage stageid="695d119e-dba9-48a6-917d-50e298aef29d" name="Ref#" type="Data"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="90" y="-165" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9b95130-6517-4e68-a093-41aaa1b56f7f" name="Check#" type="Data"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="150" y="-165" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca7ba6c7-6542-4b02-85d3-4f1cc56b1fe9" name="Exception details" type="Data"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="210" y="-165" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f36b3c56-658a-4432-8abe-c3ee477b8cdb" name="Full Excel Content Collection" type="Collection"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="165" y="465" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Line #" type="text" /><field name="Posting/Date" type="text" /><field name="Ref#/Confirm#" type="text" /><field name="Description" type="text" /><field name="Debit" type="text" /><field name="Credit" type="text" /><field name="Check#" type="text" /></collectioninfo></stage><stage stageid="15a2d77a-eec2-46bf-a945-7ec2a0bea866" name="Set Full Excel Collection" type="MultipleCalculation"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="465" /><onsuccess>fad87cef-cae6-4c55-abb5-e5e852aedcdb</onsuccess><steps><calculation expression="[Excel Content.ABC Company Account Sample GL]" stage="Full Excel Content Collection.Line #" /><calculation expression="[Excel Content.Column1]" stage="Full Excel Content Collection.Posting/Date" /><calculation expression="[Excel Content.Column2]" stage="Full Excel Content Collection.Ref#/Confirm#" /><calculation expression="[Excel Content.Column3]" stage="Full Excel Content Collection.Check#" /><calculation expression="[Excel Content.Column4]" stage="Full Excel Content Collection.Description" /><calculation expression="[Excel Content.Column5]" stage="Full Excel Content Collection.Debit" /><calculation expression="[Excel Content.Column6]" stage="Full Excel Content Collection.Credit" /></steps></stage><stage stageid="94ba1ee3-f9fe-4680-9ac2-7d75a0b17264" name="Add empty Row to Full Excel Content Collection" type="Action"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="75" y="420" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Full Excel Content Collection&quot;" /></inputs><onsuccess>15a2d77a-eec2-46bf-a945-7ec2a0bea866</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="8b0adb68-5fd1-41c0-a3f9-b1e4ffdcfa12" name="Full GL Content Collection" type="Collection"><display x="-390" y="210" w="120" h="30" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="Line #" type="text" /><field name="Posting/Date" type="text" /><field name="Ref#/Confirm#" type="text" /><field name="Description" type="text" /><field name="Debit" type="text" /><field name="Credit" type="text" /><field name="Check#" type="text" /></collectioninfo></stage><stage stageid="7be0639b-6894-4c0a-9347-db2911ad4a1b" name="Full BS Content Collection" type="Collection"><display x="-390" y="345" w="120" h="30" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="Line #" type="text" /><field name="Posting/Date" type="text" /><field name="Ref#/Confirm#" type="text" /><field name="Description" type="text" /><field name="Debit" type="text" /><field name="Credit" type="text" /><field name="Check#" type="text" /></collectioninfo></stage><stage stageid="315528fb-8787-45a0-abfe-54faa40d5e86" name="GL Details" type="Collection"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="285" y="-165" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Line #" type="text" /><field name="Posting/Date" type="text" /><field name="Ref#/Confirm#" type="text" /><field name="Description" type="text" /><field name="Debit" type="text" /><field name="Credit" type="text" /><field name="Check#" type="text" /></collectioninfo></stage><stage stageid="19b424a2-e629-4a67-9df8-2400d7ef3549" name="BS Details" type="Collection"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="375" y="-165" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Line #" type="text" /><field name="Posting/Date" type="text" /><field name="Ref#/Confirm#" type="text" /><field name="Description" type="text" /><field name="Debit" type="text" /><field name="Credit" type="text" /><field name="Check#" type="text" /></collectioninfo></stage><stage stageid="8a2bc180-883b-40cc-9864-7649a77feb44" name="Set e-mail body" type="Calculation"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="15" y="-30" /><onsuccess>1294eb05-a485-4054-96d6-e0c5c1eab7e1</onsuccess><calculation expression="&quot;Blue Prism Bank Reconciliation Digital Worker found the following discrepancy between the General Ledger and the Bank Account Statement: &quot;  &amp; NewLine()&#xA;&amp;  [Exception details] &amp; NewLine()&#xA;" stage="E-mail body" /></stage><stage stageid="1294eb05-a485-4054-96d6-e0c5c1eab7e1" name="Loop Start6" type="LoopStart"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="15" y="30" /><onsuccess>98c2af92-1ded-44a4-b8ba-96822d830fe4</onsuccess><groupid>82b4a302-6b21-4769-9d57-b8fb4e730408</groupid><looptype>ForEach</looptype><loopdata>GL Details</loopdata></stage><stage stageid="7c4ec569-1ec1-4349-818b-20381c0f6cdb" name="Loop End6" type="LoopEnd"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="15" y="225" /><onsuccess>67d5656b-c7bf-4ca2-93b2-1ea5777f07b5</onsuccess><groupid>82b4a302-6b21-4769-9d57-b8fb4e730408</groupid></stage><stage stageid="98c2af92-1ded-44a4-b8ba-96822d830fe4" name="Ref# or Check# matches" type="Decision"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="15" y="90" /><decision expression="([Ref#] &lt;&gt; &quot;&quot; AND [Ref#] = [GL Details.Ref#/Confirm#]) OR ([Check#] &lt;&gt; &quot;&quot; AND [Check#] = [GL Details.Check#])" /><ontrue>2de36568-5ec3-4c9f-98ae-198e6ece2f6c</ontrue><onfalse>12cd6db6-6bf8-4821-b0e9-eb0ea07ccfdc</onfalse></stage><stage stageid="2de36568-5ec3-4c9f-98ae-198e6ece2f6c" name="Add GL line" type="Calculation"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="15" y="135" /><onsuccess>c7e62d67-f784-435b-aeb5-be557c21f5fc</onsuccess><calculation expression="[E-mail body] &amp; NewLine() &#xA;&amp; &quot; GL record: &quot;  &amp; NewLine()&#xA;&amp; &quot; Line # &quot; &amp; [GL Details.Line #] &amp; NewLine() &#xA;&amp; &quot; Date: &quot; &amp; [GL Details.Posting/Date] &amp; NewLine() &#xA;&amp; &quot; Ref# &quot; &amp; [GL Details.Ref#/Confirm#]  &amp; NewLine() &#xA;&amp; &quot; Check# &quot; &amp; [GL Details.Check#]  &amp; NewLine() &#xA;&amp; &quot; Description: &quot; &amp; [GL Details.Description] &amp; NewLine() &#xA;&amp; &quot; Debit: &quot; &amp; [GL Details.Debit]  &amp; NewLine() &#xA;&amp; &quot; Credit: &quot; &amp; [GL Details.Credit] &amp; NewLine() &amp; NewLine()&#xA;" stage="E-mail body" /></stage><stage stageid="c7e62d67-f784-435b-aeb5-be557c21f5fc" name="Anchor21" type="Anchor"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="15" y="180" w="10" h="10" /><onsuccess>7c4ec569-1ec1-4349-818b-20381c0f6cdb</onsuccess></stage><stage stageid="eaeab768-099b-4aca-8080-13937801454a" name="Anchor22" type="Anchor"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="-45" y="180" w="10" h="10" /><onsuccess>c7e62d67-f784-435b-aeb5-be557c21f5fc</onsuccess></stage><stage stageid="12cd6db6-6bf8-4821-b0e9-eb0ea07ccfdc" name="Anchor23" type="Anchor"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="-45" y="90" w="10" h="10" /><onsuccess>eaeab768-099b-4aca-8080-13937801454a</onsuccess></stage><stage stageid="b896bc6c-ede1-48cc-9b8f-d4e57b2d8fce" name="Add GL lines to e-mail body" type="Block"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="-75" y="0" w="180" h="255" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="812ac62a-e7cb-4025-ad66-2b58d9902395" name="Loop Start7" type="LoopStart"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="285" y="30" /><onsuccess>f34690bb-35ad-4cfd-a5f0-b95f75d93e75</onsuccess><groupid>85745ff5-7c35-4aaa-9b6c-42bfc2642f8f</groupid><looptype>ForEach</looptype><loopdata>BS Details</loopdata></stage><stage stageid="1b1e9095-8594-49da-9334-a02a7d97e25f" name="Loop End7" type="LoopEnd"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="285" y="225" /><onsuccess>04d2e00e-072b-40e4-84ab-10398490a4b7</onsuccess><groupid>85745ff5-7c35-4aaa-9b6c-42bfc2642f8f</groupid></stage><stage stageid="f34690bb-35ad-4cfd-a5f0-b95f75d93e75" name="Ref# or Check# matches" type="Decision"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="285" y="90" /><decision expression="([Ref#] &lt;&gt; &quot;&quot; AND [Ref#] = [BS Details.Ref#/Confirm#]) OR ([Check#] &lt;&gt; &quot;&quot; AND [Check#] = [BS Details.Check#])" /><ontrue>be9f2d70-0559-4280-ade6-f905993ec4b7</ontrue><onfalse>ac327332-c89c-4357-bd70-e310b54685eb</onfalse></stage><stage stageid="be9f2d70-0559-4280-ade6-f905993ec4b7" name="Add BS line" type="Calculation"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="285" y="135" /><onsuccess>aedcda47-0ca6-4ae8-b38f-c088e69f3703</onsuccess><calculation expression="[E-mail body] &amp; NewLine() &#xA;&amp; &quot; BS record: &quot; &amp; NewLine()&#xA;&amp; &quot; Line # &quot; &amp; [BS Details.Line #] &amp; NewLine() &#xA;&amp; &quot; Date: &quot; &amp; [BS Details.Posting/Date] &amp; NewLine() &#xA;&amp; &quot; Ref# &quot; &amp; [BS Details.Ref#/Confirm#]  &amp; NewLine() &#xA;&amp; &quot; Check# &quot; &amp; [BS Details.Check#]  &amp; NewLine() &#xA;&amp; &quot; Description: &quot; &amp; [BS Details.Description] &amp; NewLine() &#xA;&amp; &quot; Debit: &quot; &amp; [BS Details.Debit]  &amp; NewLine() &#xA;&amp; &quot; Credit: &quot; &amp; [BS Details.Credit] &amp; NewLine() &amp; NewLine()&#xA;" stage="E-mail body" /></stage><stage stageid="ac327332-c89c-4357-bd70-e310b54685eb" name="Anchor23" type="Anchor"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="225" y="90" w="10" h="10" /><onsuccess>b7a1eab2-64e9-466e-91a7-6fabf4adc6dc</onsuccess></stage><stage stageid="b7a1eab2-64e9-466e-91a7-6fabf4adc6dc" name="Anchor24" type="Anchor"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="225" y="180" w="10" h="10" /><onsuccess>aedcda47-0ca6-4ae8-b38f-c088e69f3703</onsuccess></stage><stage stageid="aedcda47-0ca6-4ae8-b38f-c088e69f3703" name="Anchor25" type="Anchor"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="285" y="180" w="10" h="10" /><onsuccess>1b1e9095-8594-49da-9334-a02a7d97e25f</onsuccess></stage><stage stageid="67d5656b-c7bf-4ca2-93b2-1ea5777f07b5" name="Anchor26" type="Anchor"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="135" y="225" w="10" h="10" /><onsuccess>624d5e13-e529-4f98-8c20-f2f5d1457957</onsuccess></stage><stage stageid="624d5e13-e529-4f98-8c20-f2f5d1457957" name="Anchor27" type="Anchor"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="135" y="30" w="10" h="10" /><onsuccess>812ac62a-e7cb-4025-ad66-2b58d9902395</onsuccess></stage><stage stageid="fd7c4fbe-4ccd-44c2-bc7f-c2f25c038b17" name="Add BS lines to e-mail body" type="Block"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="195" y="0" w="180" h="255" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="639ddb9a-eb32-4c89-b5a3-f3e0f1512cb1" name="Set Subject" type="Calculation"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="15" y="-105" /><onsuccess>8a2bc180-883b-40cc-9864-7649a77feb44</onsuccess><calculation expression="&quot;BP Robot : Discrepancy detected between General Ledger and Bank Account Statement - Review required&quot;" stage="Subject" /></stage><stage stageid="ab4eeae7-af96-478b-9666-8f57d988501d" name="Process Settings" type="Block"><display x="-465" y="15" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="39de7464-1317-44fe-839d-958d18cd2a36" name="Set Found item = True" type="Calculation"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="105" y="60" /><onsuccess>999d5012-b0cf-4bd6-a711-7fe6cbaae28d</onsuccess><calculation expression="True" stage="Found item?" /></stage><stage stageid="d9eaf273-b004-495b-a64c-96ab3b19f152" name="Set Found item = True" type="Calculation"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="-75" y="120" /><onsuccess>f8a7b0d0-1dd4-41e9-91f4-f91f77938297</onsuccess><calculation expression="True" stage="Found item?" /></stage><stage stageid="cb90d3b2-18c1-4b82-bb27-82d059aefd7f" name="Found item?" type="Decision"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="15" y="285" /><decision expression="[Found item?]" /><ontrue>b548e923-281f-42b5-9753-25ddac6764ff</ontrue><onfalse>31b07ecc-04e7-426d-b348-963bde224843</onfalse></stage><stage stageid="3fcd62bb-5cb9-4320-9b5f-0c6ce3ed717d" name="Ref# not found" type="Exception"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="270" y="285" w="90" h="30" /><exception type="Comparison failed" detail="&quot;Ref# &quot; &amp; [Item Data.Ref#] &amp; &quot; on General Ledger not found in Bank Statement&quot;" /></stage><stage stageid="31b07ecc-04e7-426d-b348-963bde224843" name="Is Ref#?" type="Decision"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="105" y="285" /><decision expression="[Item Data.Ref#]&lt;&gt;&quot;&quot;" /><ontrue>3fcd62bb-5cb9-4320-9b5f-0c6ce3ed717d</ontrue><onfalse>5f398bdf-5e2f-4db0-b724-b8727f4630da</onfalse></stage><stage stageid="8e6ad894-e4ea-4b8d-910d-1d6a35ca40f5" name="Ref# not found" type="Exception"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="270" y="330" w="90" h="30" /><exception type="Comparison failed" detail="&quot;Check# &quot; &amp; [Item Data.Check#] &amp; &quot; on General Ledger not found in Bank Statement&quot;" /></stage><stage stageid="5f398bdf-5e2f-4db0-b724-b8727f4630da" name="Anchor28" type="Anchor"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="105" y="330" w="10" h="10" /><onsuccess>88da4987-7a64-434f-9571-87cb18946e35</onsuccess></stage><stage stageid="88da4987-7a64-434f-9571-87cb18946e35" name="Note1" type="Note"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><narrative>It's a check</narrative><display x="165" y="330" /><onsuccess>8e6ad894-e4ea-4b8d-910d-1d6a35ca40f5</onsuccess></stage><stage stageid="fa444e6d-7f66-48c5-a9fb-11bdcb108cdf" name="Set Found Item = False" type="Calculation"><subsheetid>b5c89656-7527-4e54-865b-6201e84ad58d</subsheetid><display x="15" y="-60" /><onsuccess>40f5e388-2de6-42fe-b0c5-5dc435cc99c3</onsuccess><calculation expression="False" stage="Found item?" /></stage><stage stageid="765aa877-ec1a-4873-9eeb-493581330f99" name="Add a Line " type="Decision"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="-90" y="45" /><decision expression="[Excel Content.ABC Company Account Sample GL] =&quot;1&quot;" /><ontrue>22411733-c94b-4e09-a828-b94a94e1a31b</ontrue><onfalse>b08308c5-fa06-4bfe-ad3e-a0d8ca5b20b8</onfalse></stage><stage stageid="8abf7718-eb8c-4fce-b25c-5755e6f0e94b" name="Anchor29" type="Anchor"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="-90" y="510" w="10" h="10" /><onsuccess>fad87cef-cae6-4c55-abb5-e5e852aedcdb</onsuccess></stage><stage stageid="b08308c5-fa06-4bfe-ad3e-a0d8ca5b20b8" name="Anchor30" type="Anchor"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="-90" y="210" w="10" h="10" /><onsuccess>8abf7718-eb8c-4fce-b25c-5755e6f0e94b</onsuccess></stage><stage stageid="e9e2b551-f4fe-462b-8392-38a7e6e323de" name="1st Line" type="Data"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="-105" y="-180" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="bda5599c-c3ee-4dc2-840b-6660802c8de2" name="Did we get to the First Line ?" type="Decision"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="-15" y="45" /><decision expression="[1st Line]" /><ontrue>3146f221-4944-406d-91fe-ff94aadf99d0</ontrue><onfalse>765aa877-ec1a-4873-9eeb-493581330f99</onfalse></stage><stage stageid="22411733-c94b-4e09-a828-b94a94e1a31b" name="Is it now first line ?" type="Calculation"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="-165" y="45" /><onsuccess>9d34ca7b-76ce-4a23-bdc3-c577eb581d54</onsuccess><calculation expression="True" stage="1st Line" /></stage><stage stageid="9d34ca7b-76ce-4a23-bdc3-c577eb581d54" name="Anchor31" type="Anchor"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><display x="-165" y="210" w="10" h="10" /><onsuccess>b08308c5-fa06-4bfe-ad3e-a0d8ca5b20b8</onsuccess></stage><stage stageid="4b18bf9f-0a85-49b4-9eb7-dc41f7d8ca96" name="Lock" type="Data"><subsheetid>b749d60a-bded-4d36-b099-3627ed699606</subsheetid><display x="-195" y="45" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="ec91c88f-5a2a-413f-a25d-bed6b2fe22d5" name="Load Excel in Collection" type="SubSheetInfo"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9d7d88a5-6aea-4b0c-bebf-ca2b495a2a81" name="Start" type="Start"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="-225" /><inputs><input type="text" name="Path" stage="Path" /><input type="text" name="StartCell" stage="StartCell" /><input type="text" name="Worksheet Name" stage="Worksheet Name" /></inputs><onsuccess>163d991b-034d-463a-b108-a2d4c0c30120</onsuccess></stage><stage stageid="a163d485-b057-40ca-953b-5245ba276ce1" name="End" type="End"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="645" /><outputs><output type="collection" name="ExcelContent" stage="Output Collection" /><output type="collection" name="FullExcelContent" stage="Full Excel Content Collection" /></outputs></stage><stage stageid="163d991b-034d-463a-b108-a2d4c0c30120" name="Create Excel Instance" type="Action"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="-180" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="[Enable Events]" /></inputs><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="Handle" /></outputs><onsuccess>54c8328f-dd22-4821-aabf-499bd1a5ba92</onsuccess><resource object="MS Excel VBO" action="Create Instance" /></stage><stage stageid="54c8328f-dd22-4821-aabf-499bd1a5ba92" name="Show Excel" type="Action"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window displayed. The default of zero indicates the currently active instance." expr="[Handle]" /></inputs><onsuccess>c8148f05-a5ac-4b16-9544-c6ec6c3a58dc</onsuccess><resource object="MS Excel VBO" action="Show" /></stage><stage stageid="a5d566ea-85b1-46cf-97f7-5b083aab3a48" name="Enable Events" type="Data"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="-15" y="-180" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5665ea9a-8447-4070-8dc1-a0366c2d25b1" name="Handle" type="Data"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="150" y="-180" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c8148f05-a5ac-4b16-9544-c6ec6c3a58dc" name="Open Workbook" type="Action"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="-90" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="File name" narrative="The path and name of the file which should be opened." expr="[Path]" /></inputs><outputs><output type="text" name="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="Workbook Name" /></outputs><onsuccess>243eae04-b2ab-4df1-be72-7ad54a809cd1</onsuccess><resource object="MS Excel VBO" action="Open Workbook" /></stage><stage stageid="c9440a09-77ff-4e9e-ba9f-5349610f4db3" name="Excel Content" type="Collection"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="165" y="-45" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="37a5738e-54d8-4d05-b2ee-aa9b4b0d7184" name="Exit Excel" type="Action"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="0" /><onsuccess>b32323a6-17d7-4579-8631-a98a29b09ac7</onsuccess><resource object="MS Excel VBO" action="Exit" /></stage><stage stageid="78c7a754-38f1-4d40-a8d0-2fca86a7cf72" name="Workbook Name" type="Data"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="165" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="243eae04-b2ab-4df1-be72-7ad54a809cd1" name="Get Worksheet as Collection" type="Action"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="-45" /><outputs><output type="collection" name="Data" narrative="The data output" stage="Excel Content" /></outputs><onsuccess>37a5738e-54d8-4d05-b2ee-aa9b4b0d7184</onsuccess><resource object="MS Excel VBO" action="Get Worksheet As Collection (Fast)" /></stage><stage stageid="3daf403c-4d4b-4e86-a11c-bde7b3ea6d6a" name="Path" type="Data"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="165" y="-225" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c87e005e-3430-4db7-9185-409f288671ea" name="StartCell" type="Data"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="315" y="-225" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5071332d-e777-40cc-b12c-ae1527ebda20" name="Worksheet Name" type="Data"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="240" y="-225" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b32323a6-17d7-4579-8631-a98a29b09ac7" name="Loop Start2" type="LoopStart"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="45" /><onsuccess>4f49b4cc-f289-4128-98f4-5caf399e4d2f</onsuccess><groupid>7d4be5cd-1a57-4a2b-99a3-93ff5acc9fa7</groupid><looptype>ForEach</looptype><loopdata>Excel Content</loopdata></stage><stage stageid="0936e6ce-9e41-4380-bfc1-27638bc0cc86" name="Loop End2" type="LoopEnd"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="585" /><onsuccess>a163d485-b057-40ca-953b-5245ba276ce1</onsuccess><groupid>7d4be5cd-1a57-4a2b-99a3-93ff5acc9fa7</groupid></stage><stage stageid="8c46365d-fefb-41d0-ac66-9af4a9ddad92" name="Output Collection" type="Collection"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="150" y="90" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Ref#" type="text" /><field name="Check#" type="text" /><field name="Amount" type="number" /></collectioninfo></stage><stage stageid="2be6ea9b-aeb8-4e75-ba8c-7f23fd20ee27" name="Add empty Row to Output Collection" type="Action"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="90" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Output Collection&quot;" /></inputs><onsuccess>e778c070-e788-4e0d-a6d8-888693c5ba05</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="e778c070-e788-4e0d-a6d8-888693c5ba05" name="Set Ref#" type="Calculation"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="135" /><onsuccess>60028368-4dee-49a0-a3d7-64f0eef1281b</onsuccess><calculation expression="[Excel Content.Column2]" stage="Output Collection.Ref#" /></stage><stage stageid="60028368-4dee-49a0-a3d7-64f0eef1281b" name="Set Check#" type="Calculation"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="180" /><onsuccess>6fd4fcc5-323d-4759-8de2-33c7e05036c6</onsuccess><calculation expression="[Excel Content.Column3]" stage="Output Collection.Check#" /></stage><stage stageid="d644c0dd-341d-4f04-8c82-7e9f12d2fb15" name="Set Amount#" type="Calculation"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="405" /><onsuccess>e6caa8b8-7676-47de-a9a9-8af8bb99e8aa</onsuccess><calculation expression="[Credit] - [Debit]" stage="Output Collection.Amount" /></stage><stage stageid="3a2441a8-1c39-4347-b6d5-fdf4c8584f30" name="Debit" type="Data"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="255" y="225" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="340dd8a5-cee8-4e89-8930-12d9638c2d54" name="Credit" type="Data"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="255" y="315" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0307a49c-937d-48db-aeb8-caf7b68bd697" name="Set Debit" type="Calculation"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="165" y="225" /><onsuccess>ac85efa3-6cdd-4e9c-a755-4aa5fd9ed72a</onsuccess><calculation expression="ToNumber(Replace([Excel Content.Column5], &quot;$&quot;, &quot; &quot;)) " stage="Debit" /></stage><stage stageid="6fd4fcc5-323d-4759-8de2-33c7e05036c6" name="Empty Debit Field?" type="Decision"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="225" /><decision expression="Len(Trim([Excel Content.Column5]))=0" /><ontrue>7e5693c2-e7f9-46a5-9e59-87666144d52b</ontrue><onfalse>0307a49c-937d-48db-aeb8-caf7b68bd697</onfalse></stage><stage stageid="7e5693c2-e7f9-46a5-9e59-87666144d52b" name="Set Debit 0" type="Calculation"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="-15" y="225" /><onsuccess>880dceb7-2898-4a44-b494-a9b3662e7e72</onsuccess><calculation expression="0" stage="Debit" /></stage><stage stageid="880dceb7-2898-4a44-b494-a9b3662e7e72" name="Anchor4" type="Anchor"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="-15" y="270" w="10" h="10" /><onsuccess>80daf993-344c-48af-bcd2-5da290aa993b</onsuccess></stage><stage stageid="80daf993-344c-48af-bcd2-5da290aa993b" name="Anchor5" type="Anchor"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="270" w="10" h="10" /><onsuccess>5538299f-1ad0-4889-88b0-e1b35c498556</onsuccess></stage><stage stageid="ac85efa3-6cdd-4e9c-a755-4aa5fd9ed72a" name="Anchor6" type="Anchor"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="165" y="270" w="10" h="10" /><onsuccess>80daf993-344c-48af-bcd2-5da290aa993b</onsuccess></stage><stage stageid="5538299f-1ad0-4889-88b0-e1b35c498556" name="Empty Credit Field?" type="Decision"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="315" /><decision expression="Len(Trim([Excel Content.Column6]))=0" /><ontrue>de59b242-13e6-48a2-b74c-cf86b55a6506</ontrue><onfalse>d870274c-8ce3-4338-8006-46520e63e5f2</onfalse></stage><stage stageid="de59b242-13e6-48a2-b74c-cf86b55a6506" name="Set Credit 0" type="Calculation"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="-15" y="315" /><onsuccess>73ed54b4-e62c-47a5-9122-0a8fe82d320f</onsuccess><calculation expression="0" stage="Credit" /></stage><stage stageid="d870274c-8ce3-4338-8006-46520e63e5f2" name="Set Credit" type="Calculation"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="165" y="315" /><onsuccess>e90919d1-e1c8-48b8-be44-9c3eaedd5437</onsuccess><calculation expression="ToNumber(Replace([Excel Content.Column6], &quot;$&quot;, &quot; &quot;)) " stage="Credit" /></stage><stage stageid="73ed54b4-e62c-47a5-9122-0a8fe82d320f" name="Anchor7" type="Anchor"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="-15" y="360" w="10" h="10" /><onsuccess>1b34a17b-26d6-4005-b015-a1634893ba76</onsuccess></stage><stage stageid="1b34a17b-26d6-4005-b015-a1634893ba76" name="Anchor8" type="Anchor"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="360" w="10" h="10" /><onsuccess>d644c0dd-341d-4f04-8c82-7e9f12d2fb15</onsuccess></stage><stage stageid="e90919d1-e1c8-48b8-be44-9c3eaedd5437" name="Anchor9" type="Anchor"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="165" y="360" w="10" h="10" /><onsuccess>1b34a17b-26d6-4005-b015-a1634893ba76</onsuccess></stage><stage stageid="edd11f26-6b6c-4c97-90cc-a031ee7e98e3" name="Full Excel Content Collection" type="Collection"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="165" y="465" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Line #" type="text" /><field name="Posting/Date" type="text" /><field name="Ref#/Confirm#" type="text" /><field name="Description" type="text" /><field name="Debit" type="text" /><field name="Credit" type="text" /><field name="Check#" type="text" /></collectioninfo></stage><stage stageid="d4fc137e-d896-42d0-8125-e24fe9a1c230" name="Set Full Excel Collection" type="MultipleCalculation"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="525" /><onsuccess>0936e6ce-9e41-4380-bfc1-27638bc0cc86</onsuccess><steps><calculation expression="[Excel Content.ABC Company Bank Statement]" stage="Full Excel Content Collection.Line #" /><calculation expression="[Excel Content.Column1]" stage="Full Excel Content Collection.Posting/Date" /><calculation expression="[Excel Content.Column2]" stage="Full Excel Content Collection.Ref#/Confirm#" /><calculation expression="[Excel Content.Column3]" stage="Full Excel Content Collection.Check#" /><calculation expression="[Excel Content.Column4]" stage="Full Excel Content Collection.Description" /><calculation expression="[Excel Content.Column5]" stage="Full Excel Content Collection.Debit" /><calculation expression="[Excel Content.Column6]" stage="Full Excel Content Collection.Credit" /></steps></stage><stage stageid="e6caa8b8-7676-47de-a9a9-8af8bb99e8aa" name="Add empty Row to Full Excel Content Collection" type="Action"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="75" y="465" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Full Excel Content Collection&quot;" /></inputs><onsuccess>d4fc137e-d896-42d0-8125-e24fe9a1c230</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="350c7081-35f9-4731-96b2-96f1a1a89267" name="Add a Line " type="Decision"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="-90" y="45" /><decision expression="[Excel Content.ABC Company Bank Statement] =&quot;1&quot;" /><ontrue>2eade5cb-bd63-4876-8d58-3fbe5fb8f120</ontrue><onfalse>99931b3b-dfc7-4bcb-9b63-a1a36e934433</onfalse></stage><stage stageid="369c1c56-dc39-45e4-848c-7264078a048e" name="Anchor29" type="Anchor"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="-90" y="585" w="10" h="10" /><onsuccess>0936e6ce-9e41-4380-bfc1-27638bc0cc86</onsuccess></stage><stage stageid="99931b3b-dfc7-4bcb-9b63-a1a36e934433" name="Anchor30" type="Anchor"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="-90" y="210" w="10" h="10" /><onsuccess>369c1c56-dc39-45e4-848c-7264078a048e</onsuccess></stage><stage stageid="d07c991b-29d0-4df0-b09a-bc8ede031e4b" name="1st Line" type="Data"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="-105" y="-180" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4f49b4cc-f289-4128-98f4-5caf399e4d2f" name="Did we get to the First Line ?" type="Decision"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="-15" y="45" /><decision expression="[1st Line]" /><ontrue>2be6ea9b-aeb8-4e75-ba8c-7f23fd20ee27</ontrue><onfalse>350c7081-35f9-4731-96b2-96f1a1a89267</onfalse></stage><stage stageid="2eade5cb-bd63-4876-8d58-3fbe5fb8f120" name="Is it now first line ?" type="Calculation"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="-165" y="45" /><onsuccess>be9bd5f1-324c-45a1-8a4b-548903aa09ed</onsuccess><calculation expression="True" stage="1st Line" /></stage><stage stageid="be9bd5f1-324c-45a1-8a4b-548903aa09ed" name="Anchor31" type="Anchor"><subsheetid>34d08770-0f05-4e84-8ba5-d1b081ed3773</subsheetid><display x="-165" y="210" w="10" h="10" /><onsuccess>99931b3b-dfc7-4bcb-9b63-a1a36e934433</onsuccess></stage><stage stageid="04d2e00e-072b-40e4-84ab-10398490a4b7" name="Type Text into Word Document" type="Action"><subsheetid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</subsheetid><display x="285" y="300" /><inputs><input type="text" name="text" expr="[E-mail body]" /><input type="text" name="documentname" expr="" /><input type="number" name="handle" expr="" /></inputs><onsuccess>60df3211-08a4-4bff-abdb-b8e97e1b514e</onsuccess><resource object="MS Word VBO" action="Type Text" /></stage><stage stageid="aaeb3049-97cd-4ce8-8edf-f5f8e3342db0" name="Create Word Instance" type="Action"><display x="-60" y="-135" /><outputs><output type="number" name="handle" stage="" /></outputs><onsuccess>2a08e8ee-385f-43df-8a75-0d918a05ed1f</onsuccess><resource object="MS Word VBO" action="Create Instance" /></stage><stage stageid="fbb3884d-ba4b-45a6-a124-98d1f7103589" name="Create Document" type="Action"><display x="-60" y="-45" /><inputs><input type="number" name="handle" expr="" /></inputs><outputs><output type="text" name="documentname" stage="" /></outputs><onsuccess>ff1e3be2-515b-4131-8ff4-997c15e19900</onsuccess><resource object="MS Word VBO" action="Create Document" /></stage><stage stageid="2a08e8ee-385f-43df-8a75-0d918a05ed1f" name="Show Word" type="Action"><display x="-60" y="-90" /><inputs><input type="number" name="handle" expr="" /></inputs><onsuccess>fbb3884d-ba4b-45a6-a124-98d1f7103589</onsuccess><resource object="MS Word VBO" action="Show" /></stage><stage stageid="415583a1-18b0-42ef-b004-5137248c2c69" name="Save Word Document" type="Action"><display x="-60" y="45" /><inputs><input type="text" name="File Name" expr="&quot;C:\Demo\BankRec\Results.docx&quot;" /><input type="text" name="documentname" expr="" /><input type="number" name="handle" expr="" /></inputs><outputs><output type="text" name="documentname" stage="" /></outputs><onsuccess>ef295485-91d6-4d2d-afd3-84428578a80c</onsuccess><resource object="MS Word VBO" action="Save As" /></stage><stage stageid="ef295485-91d6-4d2d-afd3-84428578a80c" name="Close Word" type="Action"><display x="-60" y="90" /><inputs><input type="number" name="handle" expr="" /><input type="text" name="documentname" expr="" /></inputs><onsuccess>85a8b38e-cde6-4aa6-9927-0b305e39e945</onsuccess><resource object="MS Word VBO" action="Close" /></stage><stage stageid="85a8b38e-cde6-4aa6-9927-0b305e39e945" name="Exit Word" type="Action"><display x="-60" y="135" /><inputs><input type="number" name="handle" expr="" /></inputs><onsuccess>2a9e4ce2-817b-4f11-a15c-840362b990ee</onsuccess><resource object="MS Word VBO" action="Exit" /></stage><stage stageid="381f0b43-7bb3-4f7c-b46f-db1c471894e1" name="Work Item Processing" type="SubSheetInfo"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e9e779c6-6d16-4dad-b02e-4146f8c7d6fe" name="Start" type="Start"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="15" y="-105" /><onsuccess>f1984538-e035-48df-909d-5cfec8f15d96</onsuccess></stage><stage stageid="6f370cf6-aa76-4b0f-9c93-f46158740b00" name="End" type="End"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="15" y="60" /></stage><stage stageid="f1984538-e035-48df-909d-5cfec8f15d96" name="Get Next Item" type="Action"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue" expr="&quot;S1 General Ledger&quot;" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Item ID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="Item Data" /><output type="text" name="Status" narrative="The status of the item." stage="Item Status" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="Item Attempts" /></outputs><onsuccess>331152b6-0bcb-4e44-910d-4d9d0388f8e7</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="331152b6-0bcb-4e44-910d-4d9d0388f8e7" name="Got Item?" type="Decision"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="15" y="0" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Item ID]&lt;&gt;&quot;&quot;" /><ontrue>ff2e870d-aa02-4eee-8428-eace480440fa</ontrue><onfalse>6f370cf6-aa76-4b0f-9c93-f46158740b00</onfalse></stage><stage stageid="ff2e870d-aa02-4eee-8428-eace480440fa" name="Compare" type="SubSheet"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="120" y="0" /><inputs><input type="collection" name="Bank Statement Collection" expr="[BS Collection]" /></inputs><onsuccess>1126514f-9b2c-4cc8-b2c3-860b78e70368</onsuccess><processid>b5c89656-7527-4e54-865b-6201e84ad58d</processid></stage><stage stageid="1126514f-9b2c-4cc8-b2c3-860b78e70368" name="Mark Item As Completed" type="SubSheet"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="210" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3505bdf5-6472-4b72-91c6-669c480e47fa</onsuccess><processid>d31d1c11-61ad-4c49-91a4-44bbf0bf0725</processid></stage><stage stageid="3505bdf5-6472-4b72-91c6-669c480e47fa" name="Anchor17" type="Anchor"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="210" y="-60" w="10" h="10" /><onsuccess>f1984538-e035-48df-909d-5cfec8f15d96</onsuccess></stage><stage stageid="7d88694e-1d80-4ede-a663-2dec08a2b5f1" name="Block2" type="Block"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="75" y="-30" w="90" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a9764e3c-bc96-48fd-820a-18555c00ad29" name="Recover1" type="Recover"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="120" y="45" /><onsuccess>5bb85311-a9b6-4a1d-8d1e-1323a6b91f9d</onsuccess></stage><stage stageid="48461b5a-ac41-4df1-beb1-55d0b86cad55" name="Anchor18" type="Anchor"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="255" y="-60" w="10" h="10" /><onsuccess>3505bdf5-6472-4b72-91c6-669c480e47fa</onsuccess></stage><stage stageid="5202567e-4d28-4ac1-bd75-cbb5a8392e21" name="Resume" type="Resume"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="120" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>2cc4024a-66c4-45d9-8ddf-69421d68dc07</onsuccess></stage><stage stageid="9e5137cf-424c-430e-953a-1c233b38c368" name="Anchor20" type="Anchor"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="255" y="150" w="10" h="10" /><onsuccess>77c97bab-c730-4090-a0ae-e0a86a3177ec</onsuccess></stage><stage stageid="77c97bab-c730-4090-a0ae-e0a86a3177ec" name="Mark Item as Exception" type="Action"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><narrative>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="255" y="75" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /><input type="text" name="Exception Reason" narrative="A description of the reason for the exception" expr="[Exception Detail]" /><input type="flag" name="Retry" narrative="Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried" expr="False" /><input type="flag" name="Keep Locked" narrative="Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False" expr="False" /></inputs><outputs><output type="text" name="New Item ID" narrative="The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried." stage="" /></outputs><onsuccess>48461b5a-ac41-4df1-beb1-55d0b86cad55</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Exception" /></stage><stage stageid="5bb85311-a9b6-4a1d-8d1e-1323a6b91f9d" name="Set Exception details" type="Calculation"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="120" y="90" /><onsuccess>5202567e-4d28-4ac1-bd75-cbb5a8392e21</onsuccess><calculation expression="ExceptionDetail()" stage="Exception Detail" /></stage><stage stageid="2cc4024a-66c4-45d9-8ddf-69421d68dc07" name="Create Results" type="SubSheet"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="195" y="150" /><inputs><input type="text" name="Ref#" expr="[Item Data.Ref#]" /><input type="text" name="Check#" expr="[Item Data.Check#]" /><input type="text" name="Exception details" expr="[Exception Detail]" /><input type="collection" name="GL Details Collection" expr="[Full GL Content Collection]" /><input type="collection" name="BS Details Collection" expr="[Full BS Content Collection]" /></inputs><onsuccess>9e5137cf-424c-430e-953a-1c233b38c368</onsuccess><processid>1a7ce885-e91b-4cb4-a59c-7e8b16f52506</processid></stage><stage stageid="cd197606-7efa-4d68-af41-39123e62f94a" name="Item ID" type="Data"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="-180" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="60594929-00da-4afd-9296-d10337f44d96" name="Item Data" type="Collection"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="-180" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="Check#" type="text" /><field name="Amount" type="number" /><field name="Key" type="text" /><field name="Ref#" type="text" /></collectioninfo></stage><stage stageid="46bceb67-8352-4092-bb42-bb8b2e3bf64c" name="Item Status" type="Data"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="-180" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="9e85a07e-9cd7-4976-8a7f-00e4bb76b4f7" name="Item Attempts" type="Data"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="-180" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="b6445429-8543-42fd-825e-813562cf84ec" name="Block1" type="Block"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-45" w="120" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ff1e3be2-515b-4131-8ff4-997c15e19900" name="Work Item Processing" type="SubSheet"><loginhibit onsuccess="true" /><display x="-60" y="0" /><onsuccess>415583a1-18b0-42ef-b004-5137248c2c69</onsuccess><processid>199b68c7-7f65-4811-844f-549503f5660a</processid></stage><stage stageid="4530b2b2-88e7-4ea1-a9be-6938fd68c6c9" name="Exception Detail" type="Data"><subsheetid>199b68c7-7f65-4811-844f-549503f5660a</subsheetid><display x="-180" y="165" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="145b347f-7329-4a7c-95e7-93efcae6e5d3" name="General Ledger" type="Block"><loginhibit onsuccess="true" /><display x="-465" y="120" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="33CCCC" /></stage><stage stageid="10711bc0-1543-4f30-a02a-0e2043451d58" name="Bank Statement" type="Block"><loginhibit onsuccess="true" /><display x="-465" y="255" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="eb2c6c7b-e80a-404f-b812-62392f3abd24" name="Output" type="Block"><loginhibit onsuccess="true" /><display x="-105" y="-165" w="90" h="375" /><font family="Segoe UI" size="10" style="Regular" color="800080" /></stage><stage stageid="de684d33-22f2-4d23-ac9d-632dfa50fe02" name="Anchor32" type="Anchor"><loginhibit onsuccess="true" /><display x="-120" y="75" w="10" h="10" /><font family="Segoe UI" size="10" style="Regular" color="800080" /><onsuccess>e4dc658a-0615-4f62-804f-d68aa24a2a72</onsuccess></stage><stage stageid="e4dc658a-0615-4f62-804f-d68aa24a2a72" name="Anchor33" type="Anchor"><loginhibit onsuccess="true" /><display x="-120" y="-135" w="10" h="10" /><font family="Segoe UI" size="10" style="Regular" color="800080" /><onsuccess>aaeb3049-97cd-4ce8-8edf-f5f8e3342db0</onsuccess></stage><stage stageid="3146f221-4944-406d-91fe-ff94aadf99d0" name="Anchor34" type="Anchor"><subsheetid>9797baea-9c2f-46a3-b1c9-3eae848eb504</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="90" w="10" h="10" /><font family="Segoe UI" size="10" style="Regular" color="800080" /><onsuccess>dd84ca7e-62a5-4b77-ab4e-3743b2a5b6bc</onsuccess></stage></process></process>
        <object id="66085a0f-6bf6-45e2-b5ed-6345f014f05b" name="MS Excel VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="MS Excel VBO" version="4.2.37" bpversion="7.3.0.9110" narrative="The VBO replacement for the Common Automation Excel business object" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>4fb79801-5007-4059-9d5d-02760911734e</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><endpoint narrative="&#xD;&#xA;" /><subsheet subsheetid="ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67651307-0389-47bf-ae8d-fd94364e808f" type="Normal" published="True"><name>Remove Blank Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="492548e8-2fa5-473e-9061-df8326d46e4c" type="Normal" published="False"><name>CheckInstanceHandle</name><view><camerax>-54</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9f7a4a91-68c9-4871-bb65-417e96cc4ad1" type="Normal" published="False"><name>CheckInstanceAndWorkbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="41a07606-d51b-4fe3-a076-7a77a4ca2cde" type="Normal" published="False"><name>CheckFileExists</name><view><camerax>-22</camerax><cameray>-32</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="99e648cc-a136-471c-8424-19071c0fd9e7" type="Normal" published="True"><name>Create Instance</name><view><camerax>-60</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ec281dc5-ed57-4b8b-9bf5-212e314657aa" type="Normal" published="True"><name>Open Instance</name><view><camerax>209</camerax><cameray>-94</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ad81501-44a1-48ab-94fd-9b2c35ed20b8" type="Normal" published="True"><name>Attach</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2b3544ad-af96-4f40-9b50-16dfbe0600f1" type="Normal" published="True"><name>Attach to workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ec3006a-6553-4526-b522-32526c4aa3cc" type="Normal" published="True"><name>Close Instance</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4fb11e41-83d8-461d-8c0d-04cdd2f670e2" type="Normal" published="True"><name>Release Instance</name><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc33871a-9aec-4a29-b811-3ab205ddf41e" type="Normal" published="True"><name>Exit</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="feb8ce9f-299e-4152-85a1-354a5f9d995c" type="Normal" published="True"><name>Close All Instances</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="859e3c31-acbc-48dd-8535-ef2ce9385d70" type="Normal" published="True"><name>Set Current Instance</name><view><camerax>-36</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="69db5cf5-4908-49c7-9027-8f48e26e5b27" type="Normal" published="True"><name>Set Events Enabled</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="268628ce-c0f3-492a-be5c-87b432e16d1d" type="Normal" published="True"><name>Show</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef10421c-e1ff-4227-b367-c53059a6766d" type="Normal" published="True"><name>Hide</name><view><camerax>-62</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="73b8ddb4-b679-4697-b3c4-79ce833a9456" type="Normal" published="True"><name>Create Workbook</name><view><camerax>-81</camerax><cameray>-204</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2fb01e3f-e275-43bc-83eb-579001da335b" type="Normal" published="True"><name>Open Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6632ed99-8751-4c2a-ad00-3cc016300e08" type="Normal" published="True"><name>Activate Workbook</name><view><camerax>-137</camerax><cameray>-75</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6e7cb0ad-5910-4065-aab2-2919726bae39" type="Normal" published="True"><name>Save Workbook</name><view><camerax>-44</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="76d598ed-b254-4c1e-8004-d4f2928b1450" type="Normal" published="True"><name>Save Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="21a53e34-8128-41cb-ad73-17250758ff23" type="Normal" published="True"><name>Save Workbook As</name><view><camerax>-64</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="81b9e5cd-a91d-4a33-bc23-1602c5fe878f" type="Normal" published="True"><name>Save Current Workbook As</name><view><camerax>-135</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ccaae8b-c06f-45c8-8772-835218881458" type="Normal" published="True"><name>Close Workbook</name><view><camerax>-232</camerax><cameray>110</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c" type="Normal" published="True"><name>Close Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ddb3c741-0c59-4ac8-a260-258fb8eb1674" type="Normal" published="True"><name>Is Read Only</name><view><camerax>-91</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="733c2840-8162-465a-a8f2-7d023087c369" type="Normal" published="True"><name>Activate Worksheet</name><view><camerax>-132</camerax><cameray>-106</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f78a5f80-c2d5-4e9b-ae08-a56fb8007b18" type="Normal" published="True"><name>Create Worksheet</name><view><camerax>-120</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="37a2442f-8e22-4749-8b44-4ef2980f28a6" type="Normal" published="True"><name>Delete Worksheet</name><view><camerax>16</camerax><cameray>25</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="79b9bf7c-222d-4cc3-adc8-5bb337fa6d72" type="Normal" published="True"><name>Move Worksheet</name><view><camerax>51</camerax><cameray>96</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="da83b3dd-0312-4b53-9732-e3f8e29c561f" type="Normal" published="True"><name>Copy and Paste Worksheet Range</name><view><camerax>0</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30" type="Normal" published="True"><name>Get Worksheet As Collection</name><view><camerax>43</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e58a482d-f349-4f40-9b03-a903156ce1b5" type="Normal" published="True"><name>Get Worksheet As Collection (Fast)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="92799072-140a-4621-89cd-2da12475dcda" type="Normal" published="True"><name>Get Worksheet as Collection Offset</name><view><camerax>64</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e" type="Normal" published="True"><name>Get Worksheet Range As Collection</name><view><camerax>147</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f743df98-2e69-4559-89b6-32ef6637618d" type="Normal" published="True"><name>Split Worksheet</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="becd6faa-f5c0-4d3a-a48a-cb54d3aa8909" type="Normal" published="True"><name>Get Worksheet Names</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67" type="Normal" published="True"><name>Get Worksheet Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="510b0ce5-bf46-43a1-86a4-72877f427e6f" type="Normal" published="True"><name>Get Worksheet Position</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eacc4634-9985-4a1d-9773-8f79928708ee" type="Normal" published="True"><name>Worksheet Exists</name><view><camerax>105</camerax><cameray>81</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc139ac7-b971-481e-9528-b1521ae9fc92" type="Normal" published="True"><name>Get Number Of Rows</name><view><camerax>8</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed502669-4207-4c88-895d-8c58ec321578" type="Normal" published="True"><name>Go To Cell</name><view><camerax>-6</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b0b877cd-07ce-4df1-a63b-89fa4d315c4c" type="Normal" published="True"><name>Go To Next Cell</name><view><camerax>-180</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c" type="Normal" published="True"><name>Get Active Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0b5de6c6-ed9a-443d-95b8-142dd521120e" type="Normal" published="True"><name>Find Next Empty Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eaafa766-b0ce-4891-8e6e-de12d6283ae0" type="Normal" published="True"><name>Go To Next Empty Cell Left</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2d4c80d-3058-4d60-8e96-7b9b12f9ae58" type="Normal" published="True"><name>Go To Next Empty Cell Right</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5a78c1a5-e339-4f76-9203-d180bee31770" type="Normal" published="True"><name>Go To Next Empty Cell Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="82492075-b486-413c-9bd4-05eba466843e" type="Normal" published="True"><name>Go To Next Empty Cell Down</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5698ca16-b00d-4d62-9d9b-e76e8295b556" type="Normal" published="True"><name>Set Cell Value</name><view><camerax>55</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0dbe03a0-e259-47ab-bee7-7dec41ae32e7" type="Normal" published="True"><name>Write Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0e031661-2f5e-4cb2-949b-97babe59ff81" type="Normal" published="True"><name>Get Cell Value</name><view><camerax>0</camerax><cameray>-4</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d96215cc-750e-4616-8852-1d4d44a9f21b" type="Normal" published="True"><name>Get Active Cell Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="17f8ab72-203a-42d4-a59b-a073ccd57bb0" type="Normal" published="True"><name>Get Formatted Cell Value</name><view><camerax>-54</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c" type="Normal" published="True"><name>Format Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9b535bfc-4f80-4d7c-88b5-49b941688030" type="Normal" published="True"><name>Format Current Cell</name><view><camerax>0</camerax><cameray>-28</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="39374841-edab-4ea9-86d9-5f2fff3f1a5f" type="Normal" published="True"><name>Set Window Size</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="904eeb0d-e6a2-408b-99b5-621307252585" type="Normal" published="True"><name>Set Window Location</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d4998c94-d432-4713-81a5-e902535089c6" type="Normal" published="True"><name>Set Window State</name><view><camerax>-11</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9147cb85-5c6f-4a47-adcf-ab472d5a0b5a" type="Normal" published="True"><name>Select</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a" type="Normal" published="True"><name>Delete</name><view><camerax>188</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="659749b0-1f00-4e33-956d-6be6172a8739" type="Normal" published="True"><name>Insert</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="71ebd060-a411-45fc-8f39-132eb3e5ff79" type="Normal" published="True"><name>Copy</name><view><camerax>98</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5eee765d-c84b-493f-9132-f6a27f296d0e" type="Normal" published="True"><name>Cut</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="035d5ed0-2f39-46ca-80c1-b0127418dc9e" type="Normal" published="True"><name>Paste</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2c59601b-2b70-4c97-a218-0abf1bf7463a" type="Normal" published="True"><name>Write To Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c37e9923-b729-471b-80b1-7d44113ca618" type="Normal" published="True"><name>Protect Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7316eded-6aed-4d1d-9eeb-64fbbb8e53a0" type="Normal" published="True"><name>Hide Worksheet</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e62b9c20-62f8-4d28-8f19-de7610e56e1e" type="Normal" published="True"><name>Hide Other Worksheets</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1487aa65-ac8a-44e9-a6e9-8b16b4be5199" type="Normal" published="True"><name>Import CSV</name><view><camerax>0</camerax><cameray>88</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="8f886cd8-eef6-485f-b9f3-0086c90eecdb" name="Start" type="Start"><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d0d87ebb-154d-4756-8b89-d2d5445479ae</onsuccess></stage><stage stageid="d0d87ebb-154d-4756-8b89-d2d5445479ae" name="End" type="End"><loginhibit /><display x="0" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="13efd9ee-454d-4e73-a19d-91a25c412087" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Windows.Forms.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Collections.Generic</import><import>System.IO</import><import>Microsoft.VisualBasic</import><import>System.Windows.Forms</import><import>System.Data</import><import>System.Diagnostics</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[
' External functions used to make sure the excel instances are exited and processes killed
Declare Function EndTask Lib "user32.dll" (ByVal hWnd As IntPtr) As Integer
Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
	   (ByVal lpClassName As String, ByVal lpWindowName As String) As IntPtr
Declare Function GetWindowThreadProcessId Lib "user32.dll" _
	   (ByVal hWnd As IntPtr, ByRef lpdwProcessId As Integer) As Integer
Declare Function SetLastError Lib "kernel32.dll" (ByVal dwErrCode As Integer) As IntPtr

' The 'active' instance of excel.
' This is updated on any access of an instance (either adding a new
' instance or getting one)
'
Private CurrentInstance As Object

' Map of instances keyed against the handles which represent them.
'
Private HandleMap As Dictionary(Of Integer, Object)

' Map of handles keyed against the instances they represent.
' Here to ensure we don't assign multiple handles to a single
' instance and bring about a memory leak
'
Private InstanceMap As Dictionary(Of Object, Integer)

' Constructor - this just initialises the collections which map
' the excel instances to handles and vice versa.
Public Sub New()

	Me.HandleMap = New Dictionary(Of Integer, Object)()
	Me.InstanceMap = New Dictionary(Of Object, Integer)()

End Sub

' Gets the handle for a given instance
'
' If the instance is not yet held, then it is added to the 
' 	map and a handle is assigned to it. It is also set as the
' 	'current' instance, accessed with a handle of zero in the
' 	below methods.
'
' Either way, the handle which identifies the instance is returned
'
' @param Instance The instance for which a handle is required
'
' @return The handle of the instance
Protected Function GetHandle(Instance As Object) As Integer

	If Instance Is Nothing Then
		Throw New ArgumentNullException("Tried to add an empty instance")
	End If

	' Check if we already have this instance - if so, return it.
	If InstanceMap.ContainsKey(Instance) Then
		CurrentInstance = Instance
		Return InstanceMap(Instance)
	End If

	Dim key as Integer
	For key = 1 to Integer.MaxValue
		If Not HandleMap.ContainsKey(key)
			HandleMap.Add(key, Instance)
			InstanceMap.Add(Instance, key)
			Me.CurrentInstance = Instance
			Return key
		End If
	Next key

End Function


' Gets the instance corresponding to the given handle, setting
' 	the instance as the 'current' instance for future calls
'
' A value of 0 will provide the 'current' instance, which
' 	is set each time an instance is added or accessed.
'
' This will return Nothing if the given handle does not
' correspond to a registered instance, or if the current
' instance was closed and the reference has not been updated.
'
' @param Handle The handle representing the instance required,
' 		or zero to get the 'current' instance.
Protected Function GetInstance(Handle As Integer) As Object

	Dim Instance As Object = Nothing
	
	If Handle = 0 Then
		If CurrentInstance Is Nothing Then
			' Special case - getting the current instance when the
			' instance is not set, try and get a current open instance.
			' If none there, create a new one and assign a handle as if
			' CreateInstance() had been called
		'	Try
		'		Instance = GetObject(,"Excel.Application")
		'	Catch ex as Exception ' Not running
		'		Instance = Nothing
		'	End Try
		'	If Instance Is Nothing Then
				Create_Instance(Handle)
				' Instance = CreateObject("Excel.Application")
				' Force the instance into the maps.
				' GetHandle(Instance)
				' CurrentInstance should now be set.
				' If it's not, we have far bigger problems
		'	End If
		End If
		Return CurrentInstance
	End If

	Instance = HandleMap(Handle)
	If Not Instance Is Nothing Then
		CurrentInstance = Instance
	End If
	Return Instance

End Function


' Close the instance with the given handle, not saving any work, making
' sure that it is removed from this VBO's collection of instances
'
' @param Handle The handle representing the instance to close
Protected Sub CloseInstance(Handle As Integer)
	CloseInstance(Handle, False)
End Sub

' Close the instance with the given handle, saving the work as specified.
'
' @param Handle The handle representing the instance
'
' @param SaveWorkbooks True to save the workbooks before quitting the instance,
' 		False to discard any changes
Protected Sub CloseInstance(Handle As Integer, SaveWorkbooks As Boolean)
	
	Dim Instance As Object = Nothing
	If Handle = 0 AndAlso CurrentInstance Is Nothing Then
		Throw New NullReferenceException("Tried to close nonexistent current instance")
	ElseIf Handle = 0 ' Current Instance - reset it
		Handle = GetHandle(CurrentInstance) ' We need the handle to remove from HandleMap
		Instance = CurrentInstance
		CurrentInstance = Nothing
	Else
		Instance = GetInstance(Handle)
	End If

	Me.HandleMap.Remove(Handle)
	Me.InstanceMap.Remove(Instance)

	Instance.DisplayAlerts = False ' Hide alerts
	
	' First close all the workbooks and the workbooks collection
	Dim wbs as Object = Instance.Workbooks
	If wbs IsNot Nothing Then
		For Each Workbook As Object In wbs
			Workbook.Close(SaveWorkbooks)
		Next
		wbs.Close()
	End If
	
	' Try quitting - sometimes this is enough
	Instance.Quit()
	
	' Try and force a com object release - this might quit excel for us.
	System.Runtime.InteropServices.Marshal.ReleaseComObject(Instance)

	' Now if the com object has released the RCW, we need to stop
	' We'll know because if we try and get the version and it fails
	' then the COM object has been cleaned up.
	' If so, end the proc now - we have to assume the instance is gone
	
	Dim Ver as Double = 0.0
	Try
		Ver = Val(Instance.Version)
	Catch ex as Exception
		' Not got the version - assuming cleared up
		Return
	Finally
		SetLastError(0) ' If any errors have occurred thus far, clear them
	End Try

	' Now it's the messy stuff to try and find the excel instance and nuke
	' it from orbit. It's the only way to be sure.

	' The window handle for the excel instance
	Dim hwnd As IntPtr = IntPtr.Zero
	' Later versions of excel expose the window handle
	If Val(Ver) >= 10 Then _
		hwnd = New IntPtr(CType(Instance.Parent.Hwnd, Integer))
		
	' If the window handle isn't set, must be an earlier version of excel
	' Use FindWindow to find the window with the GUID that we set in it on creation
	If IntPtr.Equals(hwnd, IntPtr.Zero) Then _
		hwnd = FindWindow(Nothing, Instance.Caption)
	
	' If the window handle is still zero, the instance must already be closed
	If Not IntPtr.Equals(hwnd, IntPtr.Zero) Then
	
        ' Get the process ID for the window we have
		Dim resp, procId as Integer
        resp = GetWindowThreadProcessId(hwnd, procId)
		
        If procId = 0 Then ' can’t get Process ID
            If EndTask(hwnd) = 0 Then ' EndTask returns a bool - 0 = False
				Throw New ApplicationException("Failed to close Excel Instance.")
			End If
        Else ' We have a process ID - use it to kill excel
			Dim proc As Process = Process.GetProcessById(procId)
			' Try clicking the 'X'
			proc.CloseMainWindow()
			proc.Refresh()

			If Not proc.HasExited Then
				proc.Kill()	' Last resort - kill it with fire
			End If	
		End If	
	End If

End Sub

' Creates a new workbook in the instance represented by the given handle
'
' @param Handle The handle of the instance on which the workbook should be held
'
' @return The workbook object that was created.
Protected Function NewWorkbook(Handle as Integer) As Object

	Dim wb as Object = GetInstance(handle).Workbooks.Add()

	' Create a new Worksheet?
	if wb.Worksheets.Count = 0 Then
		wb.Sheets.Add().Activate()
	Else ' Just use the first sheet
		wb.Sheets(1).Activate()
	End If
	
	Return wb
	
End Function

' Gets the workbook in the given instance with the given name.
'
' @param Handle The handle representing the instance which holds the workbook
'
' @param Name The name of the workbook on the instance
'
' @return The object representing the workbook defined
Protected Function GetWorkbook(Handle As Integer, Name as String) As Object

	Dim wb as Object = Nothing
	If String.IsNullOrEmpty(Name) Then
		wb = GetInstance(Handle).ActiveWorkbook
		If wb Is Nothing ' We need to create a deafult workbook
			wb = NewWorkbook(Handle)
		End If
		Return wb
	Else
		Return GetInstance(Handle).Workbooks(Name)
	End If

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one and return that
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @return The sheet object representing the sheet with the given name
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String) As Object

	Return GetWorksheet(Handle,WorkbookName,WorksheetName,True)

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one or return Nothing, depending on the given flag
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @param CreateIfNotExists True to create the worksheet if it doesn't
' 		exist; False to return Nothing if it doesn't exist.
'
' @return The sheet object representing the sheet required or Nothing
'		if no such sheet exists and CreateIfNotExists was False
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String, _
		CreateIfNotExists As Boolean) As Object

	Dim wb As Object = GetWorkbook(Handle, WorkbookName)
	
	If (String.IsNullOrEmpty(WorksheetName)) Then

		Dim ws as Object = wb.ActiveSheet
		If ws Is Nothing Then
			Return wb.Sheets.Add()
		Else
			Return ws
		End If

	Else
		Dim sheets as Object = wb.Sheets
		If sheets IsNot Nothing Then
			For Each sheet as Object in sheets
				If sheet.Name = WorksheetName Then _
					Return sheet
			Next
		End If
		' Didn't find the sheet...
		If CreateIfNotExists Then

			Dim sheet as Object = sheets.Add()
			sheet.Name = WorksheetName
			Return sheet

		End If
		' Nothing else we can do - return nowt
		Return Nothing

	End If

End Function

' Gets the next cell, relative to a given cell in a given direction
' Note that if the cell is at a boundary, then the same cell is returned.
'
' @param cell : The cell to use as a base cell
'
' @param strDir : one of "L", "R", "U", "D" representing a direction from
' 		the given cell to move in.
'
' @return : The cell object representing the 'next cell' 
Protected Function GetNextCell(cell as Object, strDir as String) As Object
	
	Try
		Select Case strDir
			Case "L"
				cell = cell.Offset(0,-1)
			Case "R"
				cell = cell.Offset(0,1)
			Case "U"
				cell = cell.Offset(-1,0)
			Case "D"
				cell = cell.Offset(1,0)
		End Select
	Catch ex As Exception
		' A COM Exception is thrown if the cell is at a boundary and the offset
		' would break that boundary
	End Try
	
	Return cell

End Function]]></code></stage><stage stageid="debd0d09-d7e8-4af4-b718-c69fd2d3db22" name="Clean Up" type="SubSheetInfo"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Closes all the instances that have been created / attached to using this business object.</narrative><display x="-180" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="74a37e04-8569-40b9-8cc7-55d419e6c658" name="Start" type="Start"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fedc107e-577b-47d9-a445-c3a3e66ef516</onsuccess></stage><stage stageid="d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba" name="End" type="End"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9864b229-3596-444e-afb1-b46efff51132" name="Create Workbook" type="SubSheetInfo"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><narrative>Creates a workbook on the specified instance, returning the resultant name.

Params:
- handle : Number : The handle identifying the instance on which the workbook should be required. The default of zero indicates the current instance.

Returns:
- Workbook Name : Text : The workbook name that Excel has granted to the new workbook. By default, Excel will call it "Book&lt;n&gt;" where &lt;n&gt; is a positive integer.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.</narrative><display x="-255" y="-300" w="330" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e4ba7053-63b7-4fa4-b64b-12309c5d3d51" name="Start" type="Start"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-390" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be created. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>852ff62f-6d2b-4031-b675-ec155fd88908</onsuccess></stage><stage stageid="1d707fac-863d-4281-b9d0-a65c74bf374c" name="End" type="End"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Workbook Name" narrative="The name of the workbook that Excel has created - this can be changed using the &quot;Save Workbook As&quot; action" stage="workbookname" /></outputs></stage><stage stageid="88aa07c9-ea21-42c6-80da-110e83fc2748" name="new" type="Note"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d7cd0bd3-f4fc-4acb-921b-97d3cff31998" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-195" y="30" w="300" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4ffe88be-5a6a-452e-a183-9d1b9e027326" name="Open Workbook" type="SubSheetInfo"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><narrative>Opens a workbook using the instance specified in the given handle, opening the book represented by the given filename.

Params :
- handle : Number : The handle to the instance in which the workbook should be opened. The default value of zero indicates the current instance.
- File name : Text : The path to the file which should be opened.

Outputs:
- Workbook Name : Text : The name of the workbook that Excel uses to identify it.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-255" y="-165" w="360" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="753ce277-ee09-4ee9-841b-827037917616" name="Start" type="Start"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-255" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The path and name of the file which should be opened." stage="filename" /></inputs><onsuccess>9e0df7e0-ab34-4a97-9f69-db66c88ff5f4</onsuccess></stage><stage stageid="18a306bf-d323-4c4e-83b5-4b226773161c" name="End" type="End"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="workbookname" /></outputs></stage><stage stageid="4d2c2635-39a5-41ce-8c67-49eb1db37d55" name="Save Workbook" type="SubSheetInfo"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><narrative>Saves the workbook using the current name as a filename.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be saved. The default of 0 indicates the current instance.
- Workbook Name : The name of the workbook to be saved. The default of empty indicates that the active workbook should be saved.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-135" w="420" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7c92f23e-cde4-457b-8a6e-2856cf88955e" name="Start" type="Start"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /></inputs><onsuccess>ab6f627b-d630-4bdd-b840-7aac26b5806f</onsuccess></stage><stage stageid="4c75715c-7a4a-491b-804f-261ee86fcd95" name="End" type="End"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cee07b01-63cb-4d6d-9cc4-d1868ae80a0a" name="Save Workbook As" type="SubSheetInfo"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>Save the given workbook using the given file name.

Params :
- handle : Number : The integer identifying the instance on which the workbook resides. Default (0) indicates the current instance
- Workbook Name : Text : The name of the workbook which should be saved. Default ("") indicates the active workbook.
- File name : Text : The path and name of the file to which the workbook should be saved.

Output :
- New Workbook Name : Text : The new name with which the workbook is identified within the excel instance.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-180" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4f79caf-dea6-4a9a-95f0-0c05bea8b485" name="End" type="End"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook within the instance." stage="newworkbookname" /></outputs></stage><stage stageid="8ff7cce5-b764-42f9-88ed-51eb82a178c0" name="Activate Worksheet" type="SubSheetInfo"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><narrative>Activates / Creates the worksheet specified by the given parameters 

Params:
- handle : Number : The instance handle;
- Workbook Name : Text : is the name of the workbook on which the sheet resides / should be created;
- Sheet name : Text : The name of the worksheet
- Create If Missing? : Flag : Indicates if the worksheet should be created if one with that name doesn't exist on the workbook - if missing, it will *not* create it.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the given worksheet did not exist on the specified workbook.</narrative><display x="-285" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ddfe7f54-b5c2-410a-8a5d-3c2b52de9550" name="End" type="End"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf681fff-ce18-4dcc-b190-da9870383e35" name="Delete Worksheet" type="SubSheetInfo"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><narrative>Deletes the specified worksheet from the workbook.

Params:
- handle : Number : The excel instance handle
- Workbook Name : Text : The name of the workbook
- Worksheet Name : Text : The name of the sheet to delete.
If the sheet doesn't exist, this will fail silently - ie. nothing will occur.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the named worksheet did not exist on the specified workbook, or if the active sheet was specified and there was no active sheet.</narrative><display x="-240" y="-135" w="360" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c23803d1-15b5-4976-9466-8fb2e49529d3" name="Go To Cell" type="SubSheetInfo"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><narrative>Activates the cell in the given workbook, identified by the given cell reference.

Params:
- handle : Number: The integer handle identifying the excel instance (0 represents 'active' instance)
- Cell Reference : Text : the cell reference to go to
NOTE - the active sheet in the instance is the one on which the cell is active</narrative><display x="-240" y="-135" w="360" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="717bb32a-6e60-4972-bdcb-10d6c7b769a0" name="Start" type="Start"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." stage="cellref" /></inputs><onsuccess>dc6f6efd-7724-48b0-8544-8f86f7bb1b8d</onsuccess></stage><stage stageid="f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8" name="End" type="End"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f9a7cb58-89e7-4295-be05-54454641b318" name="Set Cell Value" type="SubSheetInfo"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><narrative>Sets the specified cell's value to the given value.
This has the side-effect of setting the active cell to that which is specified here.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="15cc8816-ce32-4cb4-888f-7e42b5cbc653" name="Start" type="Start"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference on the speficied sheet identifying the cell which should be set." stage="cellref" /><input type="text" name="Value" narrative="The value to which the specified cell should be set." stage="value" /></inputs><onsuccess>f54da925-167d-4c17-b44c-1861acd36f9b</onsuccess></stage><stage stageid="3efecc12-e41e-4386-b852-2651ab750ecc" name="End" type="End"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="69459b62-2608-4fd7-a65e-40074b837222" name="Get Cell Value" type="SubSheetInfo"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><narrative>Gets the value of the specified cell - note that if the cell has some formatting set in it, this does *not* return the formatted value - See "Get Formatted Cell Value".
Note also that this has the side-effect of making the specified cell active.</narrative><display x="-195" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="232e4bda-508e-44c7-8adb-315ce0fab8af" name="CreateWorkbook" type="Code"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-225" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>1d707fac-863d-4281-b9d0-a65c74bf374c</onsuccess><code><![CDATA[
name = NewWorkbook(handle).Name]]></code></stage><stage stageid="6b5a2269-93b3-4e07-ae32-b53e1a63e772" name="filename" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1365c72e-7420-4330-a305-53b0408ec641" name="cellref" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f4cf65f-1932-4f8c-9902-00080ed74347" name="value" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50be384a-f88b-477b-9bff-ee76cd5684bc" name="Set Cell Value" type="Code"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="value" expr="[value]" /></inputs><onsuccess>3efecc12-e41e-4386-b852-2651ab750ecc</onsuccess><code><![CDATA[
	GetInstance(handle).ActiveCell.Value = value]]></code></stage><stage stageid="155a039e-a678-4192-866d-0a80004f7b1b" name="cellref" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="edbe4d75-3363-4d77-b489-87fb02980fdc" name="Select Cell" type="Code"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><onsuccess>f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8</onsuccess><code><![CDATA[
GetWorkbook(handle, "").ActiveSheet.Range(cellref,cellref).Activate()]]></code></stage><stage stageid="476742dd-c37f-49de-9eb5-1a66e5bcda17" name="handle" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f54da925-167d-4c17-b44c-1861acd36f9b" name="Go To Cell" type="SubSheet"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>50be384a-f88b-477b-9bff-ee76cd5684bc</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="e7dc5be6-9447-4f5a-b528-e3b4e6e92319" name="handle" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0b718057-0ae5-4c65-bb5a-d9a14ac2496a" name="handle" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3fe639e8-b4a0-4f50-886f-fb9c99ed04b2" name="Activate Workbook" type="SubSheetInfo"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><narrative>Activates the excel workbook identified by the given handle and name.

Params:
- handle : Number : The identifier of the instance which is holding the workbook; 0 (default) indicates the active instance
- Name : Text : The name of the workbook which should be activated

Exceptions:
- Invalid Input Parameter : If the worksheet name parameter is given
- Bad Handle : If the handle does not correspond to an Excel instance</narrative><display x="-240" y="-165" w="360" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8084bde3-efbe-44ec-a484-c9b07c3d0b78" name="Start" type="Start"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." stage="workbookname" /></inputs><onsuccess>6344b53e-9777-411e-bab1-aee5633bbc7d</onsuccess></stage><stage stageid="f8b84adb-3239-4125-af8d-4b1d02c950a6" name="End" type="End"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="05b66883-e53e-43f9-a4d8-baa1fb79f412" name="handle" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><display x="-240" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dc6f6efd-7724-48b0-8544-8f86f7bb1b8d" name="Activate Workbook" type="SubSheet"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>edbe4d75-3363-4d77-b489-87fb02980fdc</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="1c1bd122-21c0-4b17-92f4-e5459d7921c6" name="handle" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="5b35f9f6-e395-4e4b-8dc1-5b2e86b17fbe" name="Close Workbook" type="SubSheetInfo"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><narrative>Closes the specified workbook, saving changes if requested.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be closed. 0 indicates the current instance.
- Workbook Name : Text : The name of the workbook which should be closed. "" indicates the active workbook on the specified instance.
- Save Changes : Flag : True to save the changes (the equivalent of calling 'Save Workbook' before closing the workbook); False to discard any changes when closing the workbook.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-540" y="-30" w="450" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5f23862f-bb67-4712-ade2-d8d62befeb7b" name="End" type="End"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f308d1c5-88b0-455a-bff7-8163c95d1eab" name="Open Workbook" type="Code"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>6c2fa22d-1876-46b7-92eb-cf8343d0911f</onsuccess><code><![CDATA[
Dim wb as Object = GetInstance(handle).Workbooks.Open(filename)
name = wb.Name
wb.Activate()]]></code></stage><stage stageid="5d910335-0e44-4e14-8093-292d0737faee" name="handle" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7edfc788-b0ea-4933-ac22-6345453b8c6c" name="filename" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54e39cf8-9167-44e0-aea5-08d102a67f52" name="Create Instance" type="SubSheetInfo"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><narrative>Creates an instance of Excel, returning a handle with which it can be retrieved using the global object method : GetInstance(handle).</narrative><display x="-255" y="-120" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2eee0d2a-9595-449a-bbdc-8fb0c5153180" name="Close Instance" type="SubSheetInfo"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><narrative>Closes the instance represented by the given handle, saving the changes or not as specified.

Params:
- handle : Number : The handle identifying the instance that should be closed; The default of 0 will close the 'current active' instance - ie. the last one accessed. Note that following the 'current active' instance being closed, the current instance will not be set.
- Save Changes : Flag : True to save the instance's workbooks before closing; False to just close the instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-255" y="-150" w="390" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b394cfde-b1ec-4f16-b977-d1e1ffd337be" name="Start" type="Start"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be closed. Zero indicates the currently active instance." stage="handle" /><input type="flag" name="Save Changes" narrative="True to save the changes to the open workbooks on the instance, False to discard any changes. Default is False." stage="savechanges" /></inputs><onsuccess>b06ec4ea-540a-4321-a1f9-a645f288eb9e</onsuccess></stage><stage stageid="5d9b206b-bf58-47fe-806b-c2d6807d911e" name="End" type="End"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9798ad3a-b44f-4102-a9d1-0861103be2d8" name="Open Instance" type="SubSheetInfo"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><narrative>Opens a currently running instance of Excel.
If there is no instance of Excel currently running, this will create a new one.

Params:
- WorkbookName : Text : should correspond to the workbook which should be opened - an empty value will cause the first activated instance of Excel to be opened.

Returns:
- handle : Number : The numeric handle with which this instance can be identified</narrative><display x="-210" y="-195" w="270" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0d071afd-6ab3-43d1-ac0e-1951c7598b19" name="Start" type="Start"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-270" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." stage="workbookname" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" stage="Enable Events" /></inputs><onsuccess>a08aa147-8eee-4f21-a683-142cb1680af6</onsuccess></stage><stage stageid="754832af-1144-48ff-8ab0-bb6c86d3f78e" name="End" type="End"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs></stage><stage stageid="6a0587c3-1640-4af9-9199-62382cc11cdb" name="Start" type="Start"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>c642c278-2fc8-4504-826c-25e0281a26af</onsuccess></stage><stage stageid="d337a2cf-1121-4619-a1b1-f7f19bea974e" name="End" type="End"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="c642c278-2fc8-4504-826c-25e0281a26af" name="Create Instance" type="Code"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>a13edde2-3883-4007-9719-92f0e1009ddd</onsuccess><code><![CDATA[
Dim excel as Object = CreateObject("Excel.Application")

' Create a GUID with which we can kill the instance later
' if we have to play hardball to get rid of it.
excel.Caption = System.Guid.NewGuid().ToString().ToUpper()

handle = GetHandle(excel)]]></code></stage><stage stageid="56408aa5-2607-4026-bbb0-ee39b8c304be" name="handle" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb0ff5ea-0f21-4e70-a3b3-2eaf0baa3dc5" name="Set Current Instance" type="SubSheetInfo"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><narrative>Sets the "current active" instance to that specified.

Params:
- handle : Number : The handle of the instance that should be set as the current instance. The default of zero only has the effect of throwing an exception if no current instance is set, otherwise it's a no-op.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-135" w="330" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="773582ee-ed72-4483-9b24-9e4f66cf590e" name="Start" type="Start"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should be made the 'current' one. The default of zero indicates the current, er, 'current' one - ie. this action has no effect other than validating that there is a current instance." stage="handle" /></inputs><onsuccess>79986761-82ee-46d2-83d5-4e3375b886be</onsuccess></stage><stage stageid="b272722b-ab35-4a09-9082-3cc31a0999b5" name="End" type="End"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d7897c32-9be3-483a-bca8-3fee7d1af8b5" name="handle" type="Data"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3866da9-69bc-4edc-9173-0f9d0013190a" name="handle" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7e31a12c-4578-4202-b034-a306f3ee679d" name="Close Instance" type="Code"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="savechanges" expr="[savechanges]" /></inputs><onsuccess>5d9b206b-bf58-47fe-806b-c2d6807d911e</onsuccess><code><![CDATA[
Try
CloseInstance(handle, savechanges)
Catch ex as Exception
MessageBox.Show(ex.ToString())
End Try]]></code></stage><stage stageid="eaefcb8d-64bd-4782-a39c-6ea00bb157b2" name="CheckInstanceHandle" type="SubSheetInfo"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><narrative>Checks if the handle given can be used to access a valid instance.

This means that the handle is a non-zero value which represents a handle, or it is zero and a 'current instance' is set (current instance is set every time an instance is created or accessed using GetInstance() - it may be set to Nothing if an instance is closed).

- handle is the handle to check that it represents a valid instance

Exceptions:
- Bad Handle : If the given handle doesn't represent an instance</narrative><display x="-300" y="-120" w="390" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="19668af6-5fa9-48b7-9f6e-e2caf5795b69" name="Start" type="Start"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." stage="handle" /></inputs><onsuccess>34b692da-278c-4018-96ec-a9d03f696b43</onsuccess></stage><stage stageid="a4c8054c-d063-42e0-8063-c8972459baa3" name="End" type="End"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b06ec4ea-540a-4321-a1f9-a645f288eb9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7e31a12c-4578-4202-b034-a306f3ee679d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="34b692da-278c-4018-96ec-a9d03f696b43" name="Check Handle" type="Code"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="flag" name="HandleMissing" stage="HandleMissing" /></outputs><onsuccess>a7383095-97e9-4fa8-90e0-ad186e9df285</onsuccess><code><![CDATA[
' Just ensure that the handle references a valid instance
HandleMissing = (GetInstance(handle) is Nothing)]]></code></stage><stage stageid="1468c19b-a6a0-44e0-b096-5f325448f3fb" name="handle" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52d17605-ad90-4a36-aa9d-47e5418dba04" name="HandleMissing" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7383095-97e9-4fa8-90e0-ad186e9df285" name="Is Handle Missing?" type="Decision"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[HandleMissing]" /><ontrue>8b5e76e6-a81e-4377-b161-1bef1ff3d753</ontrue><onfalse>a4c8054c-d063-42e0-8063-c8972459baa3</onfalse></stage><stage stageid="8b5e76e6-a81e-4377-b161-1bef1ff3d753" name="Bad Instance Handle" type="Exception"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="135" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Bad Handle" detail="&quot;Handle: &quot; &amp; [handle] &amp; &quot; does not correspond to an Excel Instance&quot;" /></stage><stage stageid="79986761-82ee-46d2-83d5-4e3375b886be" name="CheckInstanceHandle" type="SubSheet"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>b272722b-ab35-4a09-9082-3cc31a0999b5</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2db56ca3-8def-419f-a3e3-ac8408915c69" name="Open Named Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="WorkbookName" expr="[workbookname]" /></inputs><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess><code><![CDATA[
	handle = GetHandle(GetObject(WorkbookName,"Excel.Application"))]]></code></stage><stage stageid="6e2accad-a08b-4b28-9551-f44a9a291607" name="handle" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe8e6a89-2552-4e75-9d44-72240a365783" name="workbookname" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a08aa147-8eee-4f21-a683-142cb1680af6" name="Is WorkbookName empty?" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim([workbookname])=&quot;&quot;" /><ontrue>aaa7ff33-69b5-4636-8766-e0556ee48bec</ontrue><onfalse>2db56ca3-8def-419f-a3e3-ac8408915c69</onfalse></stage><stage stageid="aaa7ff33-69b5-4636-8766-e0556ee48bec" name="Open Arbitrary Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="-210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess><code><![CDATA[
	handle = GetHandle(GetObject(,"Excel.Application"))]]></code></stage><stage stageid="fba0fa7c-4ed5-4652-b4ae-08770f5f3867" name="No Open Instances" type="Recover"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>59ebf811-1faf-4486-8630-6d2de19027f5</onsuccess></stage><stage stageid="df0b2b99-8c10-4cf4-9d2d-c3ccf515c960" name="Carry On, Bertram" type="Resume"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7fb1ba2f-64f1-417b-9b97-479efb954a9d</onsuccess></stage><stage stageid="a6205e66-5e1f-4360-86a2-8f1325751c3c" name="Create Instance" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="True" /></inputs><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs><onsuccess>df0b2b99-8c10-4cf4-9d2d-c3ccf515c960</onsuccess><processid>99e648cc-a136-471c-8424-19071c0fd9e7</processid></stage><stage stageid="852ff62f-6d2b-4031-b675-ec155fd88908" name="CheckInstanceHandle" type="SubSheet"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-300" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>232e4bda-508e-44c7-8adb-315ce0fab8af</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="59ebf811-1faf-4486-8630-6d2de19027f5" name="CheckType" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-165" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="ExceptionType()=&quot;Internal&quot;" /><ontrue>a6205e66-5e1f-4360-86a2-8f1325751c3c</ontrue><onfalse>567674ba-270a-4107-ada5-1dae59125522</onfalse></stage><stage stageid="567674ba-270a-4107-ada5-1dae59125522" name="RethrowException" type="Exception"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="555" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="9e0df7e0-ab34-4a97-9f69-db66c88ff5f4" name="CheckInstanceHandle" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-195" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>41c51e08-6c3e-4cbc-bc30-31936476aa7d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="4a034863-88fc-4111-a656-18471e002741" name="workbookname" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-240" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="366f8bd4-fafd-47cc-98a3-0afb7d697fe9" name="ActivateWorkbook" type="Code"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /></inputs><onsuccess>f8b84adb-3239-4125-af8d-4b1d02c950a6</onsuccess><code><![CDATA[
GetWorkbook(handle,name).Activate()]]></code></stage><stage stageid="e74de56c-16cf-4cd7-8ecf-fabdf05e7311" name="handle" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e45f2d66-35c1-40fd-a729-754cfabbb5ab" name="SaveWorkbook" type="Code"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>4c75715c-7a4a-491b-804f-261ee86fcd95</onsuccess><code><![CDATA[
Dim wb as Object = GetWorkbook(handle,workbookname)
Dim excel as Object = wb.Application
excel.DisplayAlerts = False
wb.Save()
excel.DisplayAlerts = True
]]></code></stage><stage stageid="8ba3f3c5-2585-44db-9393-a681e9ff1111" name="workbookname" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bc9d285-c937-4336-89b3-aa7acf379075" name="Start" type="Start"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /><input type="text" name="Filename" narrative="The full path and filename to which the workbook should be saved." stage="filename" /></inputs><onsuccess>7fa4c0ab-6c38-4a55-915a-48e7ce529979</onsuccess></stage><stage stageid="a6943793-fb0e-491c-bdc1-ccf04ee31e6d" name="workbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b526d9f-c7bd-4190-8c33-a6f5ad7982fa" name="SaveWorkbookAs" type="Code"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="text" name="newworkbookname" stage="workbookname" /></outputs><onsuccess>b4f79caf-dea6-4a9a-95f0-0c05bea8b485</onsuccess><code><![CDATA[
Dim wb as Object = GetWorkbook(handle,workbookname)
Dim excel as Object = wb.Application

excel.DisplayAlerts = False
wb.SaveAs(filename)
excel.DisplayAlerts = True

newworkbookname = wb.Name]]></code></stage><stage stageid="a7fd5308-fe75-448e-99ad-e104521ee580" name="CheckInstanceAndWorkbook" type="SubSheetInfo"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Checks the instance and workbook values, throwing an exception if they are invalid.

Params:
- instance : Number : The integer value representing an Excel instance. The default value of zero represents the last activated instance.
- Workbook Name : Text : The name of the workbook on the instance to check. An empty string represents the 'active' workbook.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-240" y="-150" w="360" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d69e69ce-7251-40e1-b779-c9951ee36cbb" name="Start" type="Start"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" stage="handle" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" stage="workbookname" /></inputs><onsuccess>16e7e153-e022-4c0b-9af2-ac69b52f855a</onsuccess></stage><stage stageid="bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d" name="End" type="End"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="16e7e153-e022-4c0b-9af2-ac69b52f855a" name="CheckInstanceHandle" type="SubSheet"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>d4997ba5-8e1f-4585-a093-376eb725f14d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118" name="Workbook Found?" type="Decision"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[workbookfound]" /><ontrue>bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d</ontrue><onfalse>62e3710c-2e7e-4507-a49b-0009b3585ba3</onfalse></stage><stage stageid="62e3710c-2e7e-4507-a49b-0009b3585ba3" name="Workbook Not Found" type="Exception"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Thrown when a workbook name was not found</narrative><display x="195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Workbook Not Found" detail="&quot;Workbook named: &quot; &amp; [workbookname] &amp; &quot; not found in instance: &quot; &amp; [handle]" /></stage><stage stageid="c3051222-78b2-48d6-9813-d71f854c5e81" name="handle" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6bcb687a-3390-4a83-8690-fba44345b1a8" name="workbookname" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba694738-8f03-4a1c-a7b1-d946dc55c028" name="workbookfound" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="d4997ba5-8e1f-4585-a093-376eb725f14d" name="CheckWorkbook" type="Code"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="flag" name="workbookfound" stage="workbookfound" /></outputs><onsuccess>b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118</onsuccess><code><![CDATA[
Try
	GetWorkbook(handle,workbookname)
	workbookfound = True
Catch ex as Exception
	If ex.Message.IndexOf("DISP_E_BADINDEX")<>-1 Then
		workbookfound = False
	Else
		Throw ex
	End If
End Try]]></code></stage><stage stageid="ab6f627b-d630-4bdd-b840-7aac26b5806f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e45f2d66-35c1-40fd-a729-754cfabbb5ab</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="7fa4c0ab-6c38-4a55-915a-48e7ce529979" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>8b526d9f-c7bd-4190-8c33-a6f5ad7982fa</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="d52e7a12-1a97-4bcf-9014-5a4ad93aa054" name="Close Workbook" type="Code"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /></inputs><onsuccess>5f23862f-bb67-4712-ade2-d8d62befeb7b</onsuccess><code><![CDATA[
Dim wb as Object = GetWorkbook(handle,name)
Dim app as Object = wb.Application

app.DisplayAlerts = False
wb.Close(False)
app.DisplayAlerts = True]]></code></stage><stage stageid="3a83f920-ccd5-4dc3-95ee-4c5a195c5191" name="handle" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7b233620-de4e-40ff-9a99-af09b1574d08" name="workbookname" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85080efc-4429-45d0-9248-dfcceaa60a27" name="Start" type="Start"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="-255" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be closed." stage="workbookname" /><input type="flag" name="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." stage="savedata" /></inputs><onsuccess>52c31124-7463-40b9-8d24-9ffebe12e167</onsuccess></stage><stage stageid="b481dbd1-022d-42b5-a2bc-5bfbbc233772" name="savedata" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-465" y="210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="52c31124-7463-40b9-8d24-9ffebe12e167" name="Save Data?" type="Decision"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[savedata]" /><ontrue>16f6c60c-721b-44be-9e97-b5b518e0f360</ontrue><onfalse>68e0d10e-5b8a-4ccb-a42b-67192ce2ede1</onfalse></stage><stage stageid="16f6c60c-721b-44be-9e97-b5b518e0f360" name="Save Workbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="[workbookname]" /></inputs><onsuccess>cf877504-31ed-4e77-b72f-b00469c37fc7</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="68e0d10e-5b8a-4ccb-a42b-67192ce2ede1" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="cf877504-31ed-4e77-b72f-b00469c37fc7" name="anchor1" type="Anchor"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="150" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess></stage><stage stageid="cdb03710-27a7-4412-964a-73e4b9bd1a07" name="noteybenny" type="Note"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><narrative>Note: CheckInstanceAndWorkbook is done as part of SaveWorkbook, so no need to do it again</narrative><display x="15" y="60" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f39e78b7-d81a-43de-af4f-ea3ce7a918a2" name="handle" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f02e77b-3ca1-40a7-a64b-35fdad519172" name="workbookname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6344b53e-9777-411e-bab1-aee5633bbc7d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>366f8bd4-fafd-47cc-98a3-0afb7d697fe9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="ba48be23-80aa-4b44-beef-dbc6a7fb5901" name="VerifyFileExists" type="SubSheetInfo"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><narrative>Checks if the given file exists.

Params:
- File name : Text : Path to the file to check

Exceptions:
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-210" y="-120" w="240" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c6df86d-8ca7-4778-adeb-2c570998768f" name="Start" type="Start"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" narrative="The filename to check to ensure it exists." stage="filename" /></inputs><onsuccess>e28c5aa8-d587-4390-843e-b97c32c2cdb8</onsuccess></stage><stage stageid="d465101e-fa27-4434-8413-515e331d1389" name="End" type="End"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8d315224-d32b-4a85-aae0-3ee4d3b98c9c" name="filename" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86877e71-923f-4480-9b41-a5a7f4dc60a5" name="fileexists" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e28c5aa8-d587-4390-843e-b97c32c2cdb8" name="File Exists?" type="Code"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="flag" name="fileexists" stage="fileexists" /></outputs><onsuccess>d43bfe27-76d7-4542-b7ad-ba696468713e</onsuccess><code><![CDATA[
fileexists = File.Exists(filename)]]></code></stage><stage stageid="d43bfe27-76d7-4542-b7ad-ba696468713e" name="Does File Exist?" type="Decision"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[fileexists]" /><ontrue>d465101e-fa27-4434-8413-515e331d1389</ontrue><onfalse>11a4a0e7-8810-493b-9409-df70ca4dc5b2</onfalse></stage><stage stageid="11a4a0e7-8810-493b-9409-df70ca4dc5b2" name="File Not Found" type="Exception"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="135" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="File Not Found" detail="&quot;File: &quot; &amp; [filename] &amp; &quot; does not exist or is not a file&quot;" /></stage><stage stageid="41c51e08-6c3e-4cbc-bc30-31936476aa7d" name="VerifyFileExists" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>f308d1c5-88b0-455a-bff7-8163c95d1eab</onsuccess><processid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</processid></stage><stage stageid="60533ca6-ea95-4425-b684-87e7517782aa" name="Start" type="Start"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." stage="createifmissing" /></inputs><onsuccess>b5d5c5b0-1e3b-438b-b988-6058174ec5ba</onsuccess></stage><stage stageid="63d363e1-c78b-4332-815c-06f9d6f7a7df" name="OpenWorksheet" type="Code"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="flag" name="createifmissing" expr="[createifmissing]" /></inputs><outputs><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>3a854b87-0e5a-46dd-8181-a58f97555aa8</onsuccess><code><![CDATA[
Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,createifmissing)
sheetexists = ws IsNot Nothing 
If sheetexists then ws.Activate()]]></code></stage><stage stageid="b5d5c5b0-1e3b-438b-b988-6058174ec5ba" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>63d363e1-c78b-4332-815c-06f9d6f7a7df</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="1dccafb3-fd07-4362-b343-e87c1a67e83e" name="worksheetname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b35d569-0eb2-4c01-bb88-e5f7c41bde81" name="End" type="End"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fab4ac4b-d2f7-4f1c-a0c3-d6dd0cd01f9b" name="handle" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="60f1e726-ab7f-437a-8bda-36148238d510" name="workbookname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13ac609e-b9ca-4a72-907c-d7656496f5ab" name="Start" type="Start"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be deleted resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet to be deleted. The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet to be deleted. The default empty value indicates the currently active worksheet." stage="worksheetname" /></inputs><onsuccess>5346c305-4024-4d1d-8806-c1b20f16c10d</onsuccess></stage><stage stageid="982dd82e-af43-49cb-a4b1-58da1ccfeb33" name="Delete Worksheet" type="Code"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="flag" name="sheetexisted" stage="sheetexisted" /></outputs><onsuccess>56c2259b-9d71-4364-bede-79b4af1e3e96</onsuccess><code><![CDATA[
Dim Inst As Object = GetInstance(handle)
Inst.DisplayAlerts = False

Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,False)
sheetexisted = ws IsNot Nothing
If sheetexisted Then ws.Delete()

Inst.DisplayAlerts = True]]></code></stage><stage stageid="5346c305-4024-4d1d-8806-c1b20f16c10d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>982dd82e-af43-49cb-a4b1-58da1ccfeb33</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="6ca6d1da-9270-43f8-89d4-c0ece0a353cb" name="worksheetname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae9d880b-4f92-4620-94e8-36d06f4e2181" name="Start" type="Start"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." stage="cellref" /></inputs><onsuccess>9a734ecf-7e58-4aa4-b7ff-5aa4494ec687</onsuccess></stage><stage stageid="ca24190a-a9cb-4c37-b5d2-78bcd838ef40" name="End" type="End"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="value" /></outputs></stage><stage stageid="b659eb08-bf67-463a-a8cc-556b152d8032" name="cellref" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="257d1cf8-2a6f-47d2-88ee-1d0a125cb27d" name="value" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a04a5ea1-798c-4659-ac77-0c966c305cba" name="Get Cell Value" type="Code"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>ca24190a-a9cb-4c37-b5d2-78bcd838ef40</onsuccess><code><![CDATA[
	Dim cellVal as String = GetInstance(handle).ActiveCell.Value
	value = IIf(cellVal Is Nothing, "", cellVal)]]></code></stage><stage stageid="39135f99-dd54-4a2b-bff2-555714753a6d" name="Go To Cell" type="SubSheet"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="c533ffd2-866d-4944-82be-7e6a6ede4c9a" name="handle" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3fe8fb5-4290-4e6e-8d8f-780f47e78d27" name="workbookname" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5a7dc88f-16d6-41f8-a4f1-4ca8921bf024" name="Get Worksheet As Collection" type="SubSheetInfo"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><narrative>Gets the current worksheet into a collection. This will read the worksheet and store the contents into the collection. The first row will be treated as the column names and will be used as the column names in the generated collection.

Params:
- handle : Number : The integer identifying the instance in which the worksheet resides. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook on which the sheet resides. Default ("") indicates the active workbook on the instance.
- Worksheet Name : Text : The name of the worksheet which is required as a collection. Default ("") indicates the active sheet within the workbook.

Output:
Data - Collection - The data from the worksheet.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the specified worksheet does not exist on the specified workbook.</narrative><display x="-285" y="-195" w="420" h="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf5b0880-2cac-4221-946a-e4e3d7f0bc99" name="End" type="End"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="worksheetcollection" /></outputs></stage><stage stageid="c42e68de-468d-4aac-bcd2-283b9f578565" name="handle" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ed8d683e-8efe-426c-8be6-85136cbdf337" name="workbookname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14362f26-4336-4848-adf6-2e710eb2a69d" name="Start" type="Start"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /></inputs><onsuccess>23c90658-57ef-456a-92fa-970b0161d0f8</onsuccess></stage><stage stageid="36a8c859-cf71-4b54-b7ed-317997b94589" name="GetWorksheetAsCollection" type="Code"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>b6d0da26-0322-4b43-b1d5-304466ff29fb</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname, False)

	' Do we have a sheet?
	sheetexists = ws IsNot Nothing
	' No sheet? No entry.
	If Not sheetexists Then Return

	ws.Activate()
	ws.UsedRange.Select()
	ws.UsedRange.Copy()

	Dim data As String = Clipboard.GetDataObject().GetData(DataFormats.Text, True)
	
	' The data split into rows
	Dim asRows() As String = Split(data, vbCrLf)
	
	Dim table As New DataTable()
	' Set a flag indicating the header row
	Dim isHeaderRow As Boolean = True
	
	For Each strRow As String In asRows
		If Not String.IsNullOrEmpty(strRow) Then
		
			Dim fields() As String = Split(strRow, vbTab)
			If isHeaderRow Then
			
				isHeaderRow = False
				For Each field As String in fields
					table.Columns.Add(field)
				Next
				
			Else

				Dim row as DataRow = table.NewRow()
				For i As Integer = 0 To fields.Length - 1
					If i < fields.Length Then
						row(i) = fields(i)
					Else
						row(i) = ""
					End If
				Next I
				table.Rows.Add(row)
				
			End If
				
		End If
		
	Next
	worksheetcollection = table]]></code></stage><stage stageid="23c90658-57ef-456a-92fa-970b0161d0f8" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>36a8c859-cf71-4b54-b7ed-317997b94589</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="51a0a405-79a5-4a53-9a36-a40b08481389" name="worksheetname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4c01041-da7a-4cd3-9990-a0a236064fa5" name="worksheetcollection" type="Collection"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-345" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9b8dd3a0-045b-4019-b977-8716d12d92c6" name="workbookname" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="-210" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ba94499-d376-4a0b-9486-f4bced0a6a23" name="Close All Instances" type="SubSheetInfo"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><narrative>Closes all instances of excel which have been opened by this business object, either through "Create Instance" or "Open Instance" and which have not been discarded through "Close Instance" or "Release Instance"</narrative><display x="-195" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e8745127-ee68-4c60-8b52-0b68e91835bf" name="Start" type="Start"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8f8060c8-cea7-41c9-93c1-b181ca345fa9</onsuccess></stage><stage stageid="85215f92-002d-4d9c-8fe7-652c149d0206" name="End" type="End"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8f8060c8-cea7-41c9-93c1-b181ca345fa9" name="CloseAllInstances" type="Code"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>85215f92-002d-4d9c-8fe7-652c149d0206</onsuccess><code><![CDATA[
Dim clone as Dictionary(Of Integer,Object) = _
	new Dictionary(Of Integer,Object)(HandleMap)

For Each Handle As Integer In clone.Keys
	CloseInstance(Handle,False)
Next]]></code></stage><stage stageid="15437c28-7f56-4c1b-b98a-769b875b9d57" name="Find Next Empty Cell" type="SubSheetInfo"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><narrative>Searches for the next empty cell in the direction given.
This can either activate that cell before returning, or just return the cell reference while leaving the active cell as it was.

Params:
- handle : Number : The integer handle identifying the Excel instance to use. The default of zero indicates the 'current' instance.
- Direction : Text : The direction in which to go, this should start with "U", "D", "L" or "R" (not case-sensitive) - the rest of the string is ignored, so you can use "Up", "DOWN" "left" and, indeed, "r"
- Activate Cell? : Flag : True to activate the found cell, False to just return the reference. Default is False.

Returns:
- Cell Reference : Text : The cell ID which represents the next empty cell in the required direction. This will be blank if no empty cell was found in the given direction.

Exceptions:
Invalid Direction Parameter : If the given direction parameter was invalid - ie. did not start with one of the (case-insensitive) letters "U", "D", "L" or "R".</narrative><display x="-300" y="-195" w="450" h="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d3707693-ef57-453a-b8b2-16e8d8aee39f" name="Start" type="Start"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." stage="direction" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." stage="activatecell" /></inputs><onsuccess>ea536eb5-62b7-4b15-b0b9-0c5415414692</onsuccess></stage><stage stageid="65e26d12-b37e-4df9-a00b-07340967e5b2" name="End" type="End"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs></stage><stage stageid="2d159e37-f93b-42db-b8a7-3ea3e5300c76" name="direction" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bf3a1953-80c7-4d24-92fe-1e6823202956" name="cellref" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea536eb5-62b7-4b15-b0b9-0c5415414692" name="Direction Valid?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><narrative>Direction must start with one of the following:
- U : Indicates 'up'
- D : Indicates 'down'
- L : Indicates 'left'
- R : Indicates 'right'
Any other value (including empty text) is invalid</narrative><display x="-15" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len(Trim([direction]))&gt;0 AND InStr(&quot;UDLR&quot;,Upper(Left(Trim([direction]),1)))&lt;&gt;0" /><ontrue>e8cca858-4b46-40a0-81fc-3112398c4a42</ontrue><onfalse>382555c6-554f-465d-bbac-43e5b0ec06ed</onfalse></stage><stage stageid="382555c6-554f-465d-bbac-43e5b0ec06ed" name="Invalid Direction Parameter" type="Exception"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="150" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Invalid Direction Parameter" detail="&quot;Direction: '&quot; &amp; [direction] &amp; &quot;' is invalid - it must start with 'U', 'D', 'L' or 'R' (up, down, left or right)&quot;" /></stage><stage stageid="e8cca858-4b46-40a0-81fc-3112398c4a42" name="FindEmptyCell" type="Code"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="direction" expr="[direction]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>a47f3c07-957d-4909-bc43-4c56e5f58ae6</onsuccess><code><![CDATA[
' The initial char of the direction (capitalised)
Dim strDir as String = direction.Trim().Substring(0,1).ToUpper()

' The excel instance
Dim excel as Object = GetInstance(handle)

' The excel enum representing the direction
' Note: setting to zero is just to nix a duff compiler warning
Dim dirn as Integer = 0

' xlDirection enum values from: 
' http://msdn.microsoft.com/en-us/library/bb241212.aspx

' Get the direction we need to go
Select Case strDir
	Case "U"
		dirn = -4162 ' Excel.XlDirection.xlToUp
	Case "D"
		dirn = -4121 ' Excel.XlDirection.xlToDown
	Case "L"
		dirn = -4159 ' Excel.XlDirection.xlToLeft
	Case "R"
		dirn = -4161 ' Excel.XlDirection.xlToRight
	Case Else
		Throw New ArgumentException("Invalid Direction: " & strDir)
End Select

Dim cell as Object = excel.ActiveCell

While True

	' First check the next one along - if that's blank then we're away..
	Dim nextCell as Object = GetNextCell(cell, strDir)

	' If the cell address is the same on moving - that indicates we're
	' at a limit (eg. 1st column going left, last row going down etc.)
	' Just return empty to indicate that there are no blank cells in
	' that direction.
	If cell.Address = nextCell.Address Then
		cellref = ""
		Return
	ElseIf nextCell.Value = Nothing Then ' We've found our blank
		cellref = nextCell.Address(False,False)
		Return
	End If
	
	cell = nextCell
	
	' Quick way (rather than plodding from one cell to the next)
	' is to effectively press the 'End' key - but this is highly
	' inconsistent in what it returns.
	' Go to the 'end' of the range - ie. the last filled cell
	' cell = cell.End(dirn)
	' Now we need to go one beyond, ie. to the next cell
	' cell = GetNextCell(cell, strDir)

End While
]]></code></stage><stage stageid="facf151b-ee72-46d1-b528-a921e6945048" name="handle" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c507994e-eb49-43c1-bf77-9bf7cf88e0e6" name="Get Formatted Cell Value" type="SubSheetInfo"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><narrative>Gets the formatted value of the desired cell. This will apply any formatting which is in place in the specified cell before outputting the value.</narrative><display x="-195" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c0ed8b3d-fb86-442b-959e-a601d2d5f84f" name="Start" type="Start"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance within which the cell is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose value is required. Note that a side-effect of this action is that the specified cell will become the active cell on the specified instance. An empty value indicates the currently active cell." stage="cellref" /></inputs><onsuccess>29427d7f-a2d9-4b65-b6c4-773881bd285d</onsuccess></stage><stage stageid="722e3ab7-97b7-4cd6-886e-53bf4ac022ec" name="End" type="End"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The formatted value at the given cell reference." stage="value" /></outputs></stage><stage stageid="1260d770-e90c-4ea2-9e64-e3442c7de787" name="cellref" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6618eccc-3c6e-4660-997c-5f9142e71dc8" name="value" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94dc11fe-505e-4544-a26b-80d3d88d0951" name="Get Cell Text" type="Code"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>722e3ab7-97b7-4cd6-886e-53bf4ac022ec</onsuccess><code><![CDATA[
	value = GetInstance(handle).ActiveCell.Text]]></code></stage><stage stageid="3e695c2e-2110-4655-ba2e-31a41f453383" name="handle" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d9fc29b1-af47-4caf-882b-d9fc56955a8b" name="Split Worksheet" type="SubSheetInfo"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><narrative>Splits the specified worksheet into separate workbooks, creating a new sheet on each one and copying a subset of rows across to it.

Params:
- handle : Number : The integer representing the Excel instance - 0 represents the 'active' excel instance.
- Rows per sheet : Number : The number of rows which should be copied into each separate workbook.
- Workbook Name : Text : The name of the workbook from which the sheet should be split. "" indicates the active workbook on the instance.
- Worksheet Name : Text : The name of the worksheet from which the data should be split. "" indicates the active worksheet on the instance.
- Path : Text : The directory in which the resultant workbooks should be saved.
- No Title Row : Flag : True to indicate that the first row should *not* be used as a title row and copied across each of the generated workbooks.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- File Not Found : If the given path did not exist or was not a directory</narrative><display x="-240" y="-180" w="510" h="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6" name="End" type="End"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="052dc2d6-2989-49fb-9dbd-d4db6e106c98" name="Start" type="Start"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows per worksheet" narrative="The number of rows which should appear in each worksheet. Zero indicates all rows." stage="rowspersheet" /><input type="text" name="Workbook Name" narrative="The name of the workbook within the specified instance which contains the sheet to be split. The default empty text indicates the currently active workbook within the specified instance should be used." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook to split - The default empty value indicates that the currently active sheet within the workbook should be used." stage="worksheetname" /><input type="flag" name="No Title Row" narrative="True to indicate that the rows should just be split across without using the first row as a title row (ie. as a list of column headers). False to indicate that the first row contains the column headers which should be replicated across all generated sheets." stage="notitle" /><input type="text" name="Path" narrative="The path to the directory in which the generated workbooks should be created. The files will be created with a name of &quot;{Workbook Name}_SECTION_nnnn&quot;, where nnnn is an number incrementing with each section generated." stage="path" /></inputs><onsuccess>ee1e1e11-a16a-4060-9ea0-0848320dfbaf</onsuccess></stage><stage stageid="3200e67b-1f79-4672-9828-e9e4438f565b" name="handle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="177b7483-8cfb-41a7-8644-e4fdc19ecf2a" name="rowspersheet" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd48b9ea-dee0-4b1a-a9bb-7c84a64fa132" name="workbookname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f865844-bba2-4377-8b24-5d089cbfb8c4" name="worksheetname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1e1e11-a16a-4060-9ea0-0848320dfbaf" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-225" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>359dbb2d-d57f-48c1-9c7f-1d22ef094036</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="359dbb2d-d57f-48c1-9c7f-1d22ef094036" name="Split Worksheet" type="Code"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="number" name="rowspersheet" expr="[rowspersheet]" /><input type="flag" name="notitle" expr="[notitle]" /><input type="text" name="path" expr="[path]" /></inputs><outputs><output type="flag" name="filefound" stage="filefound" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>5cb56c9a-aa29-4ed4-84e1-9a65976ba50f</onsuccess><code><![CDATA[Dim sheet as Object = GetWorksheet(handle,workbookname,worksheetname,False)

sheetexists = sheet IsNot Nothing
If Not sheetexists Then Return

Dim book as Object = sheet.Parent
Dim excel as Object = sheet.Application

Dim prefix as String = book.Name
If prefix.ToLower().EndsWith(".xls") Then
	prefix = prefix.Substring(0,prefix.Length - 4)
End If

If Not path.EndsWith("\") Then
	path += "\"
End If

filefound = Directory.Exists(path)
If Not filefound Then ' Might as well quit now 
	Return
End If

Dim lastCell as Object = sheet.Cells.Find("*", , , , , 2)			 'Excel.XlSearchDirection.xlPrevious=2
'loop through the worksheet in blocks of Numblines lines

' Force overwrites if the excel book already exists.
excel.DisplayAlerts = False ' Hide alerts

Dim loopCount as Integer = 0
For row as Integer = 1 To lastCell.Row-1 Step rowspersheet ' -1 to cope with total-rows = rowspersheet
	loopCount = loopCount + 1
	Dim newbook as Object = excel.Workbooks.Add
	If notitle Then
		'copy each block into the new worksheet
		sheet.Range(sheet.Cells(row, 1), sheet.Cells(loopCount * rowspersheet, sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
	Else
		'in here - so there must be a title row that needs copying to all the new worksheets
		If row = 1 Then
			'copy row 1-201 into new worksheet (including title row at #1)
			sheet.Range(sheet.Cells(row, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
		Else
			'copy title row into new worksheet
			sheet.Range(sheet.Cells(1, 1),sheet.Cells(1,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
			'next copy row iloop+1 to iloop+NumbLines into new worksheet (i.e. 202-401)
			sheet.Range(sheet.Cells(row + 1, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A2"))
		End If
	End If
	'close and save the new workbook
	newbook.Close(True, path & prefix & "_SECTION_" & (loopCount+1000).ToString().Substring(1) & ".xls")
Next]]></code></stage><stage stageid="cfd178fc-26e5-4e7c-b9f3-cb49ea4de27e" name="notitle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="acee6017-400e-44c3-8b07-611d7318fecf" name="path" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dec5f88-d7e5-4ad4-be54-8744dc5cac54" name="filefound" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="859597f9-d048-46a3-bf99-2f3f6588c2c5" name="Was file found?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[filefound]" /><ontrue>aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6</ontrue><onfalse>6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733</onfalse></stage><stage stageid="6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733" name="No Such Directory" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="File Not Found" detail="&quot;Directory : &quot; &amp; [path] &amp; &quot; does not exist or is not a directory&quot;" /></stage><stage stageid="e9c5ba22-79d3-4bd7-ae8f-3b36c06dd51e" name="Get Number Of Rows" type="SubSheetInfo"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><narrative>Actually, I've no idea whatsoever what this does.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="555b5c2d-9106-444b-9c96-f1ff4699a988" name="End" type="End"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Number of rows" narrative="The number of rows." stage="rowcount" /></outputs></stage><stage stageid="1c4aa0dc-e628-424b-8df8-eaf16dbd668d" name="Start" type="Start"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the number of rows is required. The default empty text value indicates the currently active sheet on the specified workbook." stage="worksheetname" /></inputs><onsuccess>35173317-eeae-482b-8a2a-ea46406fcb4f</onsuccess></stage><stage stageid="35173317-eeae-482b-8a2a-ea46406fcb4f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>aa3ba555-86e5-42ae-bdb5-b614c46bdaf9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="aa3ba555-86e5-42ae-bdb5-b614c46bdaf9" name="Count Rows" type="Code"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="number" name="rowcount" stage="rowcount" /></outputs><onsuccess>555b5c2d-9106-444b-9c96-f1ff4699a988</onsuccess><code><![CDATA[
' enum - Excel.XlSearchDirection.xlPrevious=2
rowcount = GetWorksheet(handle,workbookname,worksheetname).Cells.Find("*", , , , , 2).Row]]></code></stage><stage stageid="fbf7b5e7-f86b-48f0-8d2a-8658bcabfe72" name="handle" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ae17d409-d655-459f-a6fe-1c4ed04c7023" name="workbookname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f2032a3-62ce-48a2-b098-ed275a569931" name="worksheetname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ac9321b0-2209-4f44-bd1e-3876c05fc35f" name="rowcount" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1bb96d7-94f9-4570-85a9-f1bcff4f31ae" name="Is Read Only" type="SubSheetInfo"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><narrative>Checks if the given workbook is read only or not.

Params:
- handle : Number : The integer identifying the excel instance to check. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook to be checked. Default ("") indicates the active workbook on the given instance.

Output:
Read Only? : Flag : True to indicate that the workbook is read only; False to indicate that it is writable.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-300" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bb6cb4de-9a8f-424e-82d8-52d766ab5da5" name="Start" type="Start"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be checked resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook to test to see if it is read-only or not." stage="workbookname" /></inputs><onsuccess>91487aa9-0d65-4895-940d-c4fed2212eec</onsuccess></stage><stage stageid="1e8fe949-d784-437f-a724-b5003709f18c" name="End" type="End"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Read Only?" narrative="True to indicate that the specified workbook is read-only; False to indicate that it can be written to." stage="isreadonly" /></outputs></stage><stage stageid="cfa1438f-ab60-4810-a5b5-ede71fc7b700" name="handle" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="da3c5815-0a1f-4d3d-af8a-09e5f8a1d262" name="workbookname" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="91487aa9-0d65-4895-940d-c4fed2212eec" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e412638c-10ff-49e6-ae71-6b5c86f40ddb</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="b7057d73-acb5-4298-a652-5f91898d67d6" name="isreadonly" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-150" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e412638c-10ff-49e6-ae71-6b5c86f40ddb" name="Check Read Only" type="Code"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="flag" name="isreadonly" stage="isreadonly" /></outputs><onsuccess>1e8fe949-d784-437f-a724-b5003709f18c</onsuccess><code><![CDATA[
isreadonly = GetWorkbook(handle,workbookname).ReadOnly]]></code></stage><stage stageid="fedc107e-577b-47d9-a445-c3a3e66ef516" name="Close All Instances" type="SubSheet"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba</onsuccess><processid>feb8ce9f-299e-4152-85a1-354a5f9d995c</processid></stage><stage stageid="f6285d0d-f7fe-4987-96cf-4d0e27180f81" name="Show" type="SubSheetInfo"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><narrative>Shows a window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to show. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-105" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="865342da-5035-45ef-9902-c74ba855f521" name="Start" type="Start"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window displayed. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>6562ae8e-f16f-4f89-8787-7884cc6a57db</onsuccess></stage><stage stageid="565f4f77-b276-4735-9c18-000ce13946a7" name="End" type="End"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6562ae8e-f16f-4f89-8787-7884cc6a57db" name="CheckInstanceHandle" type="SubSheet"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7785ca63-e0a8-40c6-940b-0d9e73944b25</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="97a05e5a-864b-4413-8623-d939827e5c39" name="Hide" type="SubSheetInfo"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><narrative>Hides the window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to hide. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-120" w="360" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7785ca63-e0a8-40c6-940b-0d9e73944b25" name="ShowInstance" type="Code"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>565f4f77-b276-4735-9c18-000ce13946a7</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = True]]></code></stage><stage stageid="f65b17c8-19fe-4381-9b68-8909f6aa312d" name="handle" type="Data"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="11f4ca85-d053-4b2e-a46d-705fe87040c0" name="Start" type="Start"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window hidden. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>ebc908b3-4501-4500-9648-a35ebbabddda</onsuccess></stage><stage stageid="6106570f-43e1-4a42-9f67-c8f2522a910c" name="End" type="End"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ebc908b3-4501-4500-9648-a35ebbabddda" name="CheckInstanceHandle" type="SubSheet"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>1cc2d38f-3783-42f7-8b75-78243c367fb3</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="1cc2d38f-3783-42f7-8b75-78243c367fb3" name="HideInstance" type="Code"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>6106570f-43e1-4a42-9f67-c8f2522a910c</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = False]]></code></stage><stage stageid="11e05865-7edb-4526-b015-b4b5f725fbc4" name="handle" type="Data"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2e480365-7061-4a6c-81ea-380e5bd06ef7" name="Save Current Workbook As" type="SubSheetInfo"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><narrative>Save the current workbook using the given file name. This is the equivalent of calling the 'Save Workbook As' action with the default values for 'handle' (0) and 'Workbook Name' ("")

Params :
- File name : Text : The path and name of the file to which the workbook should be saved.

Output :
- New Workbook Name : Text : The new name with which the workbook is identified within the excel instance.</narrative><display x="-285" y="-150" w="360" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7e1a622f-6438-41c8-9b86-e0d93c8267cb" name="Start" type="Start"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance for which the current workbook which should be saved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The full path and file name to which the current workbook should be saved." stage="filename" /></inputs><onsuccess>ec111fc5-c308-4507-8b78-8fa3a8cfa136</onsuccess></stage><stage stageid="acb62e2e-bb38-4f8b-8ceb-61ec851d8986" name="End" type="End"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook." stage="newworkbookname" /></outputs></stage><stage stageid="c5eee5f9-2db2-4efb-8f47-46e98073dedb" name="filename" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec111fc5-c308-4507-8b78-8fa3a8cfa136" name="Save Workbook As" type="SubSheet"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="text" name="Filename" expr="[filename]" /></inputs><outputs><output type="text" name="New Workbook Name" stage="newworkbookname" /></outputs><onsuccess>acb62e2e-bb38-4f8b-8ceb-61ec851d8986</onsuccess><processid>21a53e34-8128-41cb-ad73-17250758ff23</processid></stage><stage stageid="09b432b9-8774-440c-8468-a5effa8bfe98" name="Exit" type="SubSheetInfo"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><narrative>Here for backward compatibility - exits the current instance of Excel without saving any changes.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4f9b1c2f-8b07-4ff1-95bc-12d1de8ec1a8" name="Start" type="Start"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fc97b188-f45e-46f4-a66e-f592917cabb1</onsuccess></stage><stage stageid="c6c7615b-e18b-42aa-9e83-88884e01e23b" name="End" type="End"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fc97b188-f45e-46f4-a66e-f592917cabb1" name="Close Instance" type="SubSheet"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="flag" name="Save Changes" expr="False" /></inputs><onsuccess>c6c7615b-e18b-42aa-9e83-88884e01e23b</onsuccess><processid>6ec3006a-6553-4526-b522-32526c4aa3cc</processid></stage><stage stageid="f441e8a4-9990-4a87-a011-cb9f6c56a3f3" name="Save Current Workbook" type="SubSheetInfo"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><narrative>Saves the current workbook using the workbook name as the file name.
This is the equivalent of calling the Save Workbook action with the default values for 'handle' (0) and 'Workbook Name' ("")

Exceptions: 
- Bad Handle : If there is no active instance.
- Workbook Not Found : If there is no active workbook on the instance.</narrative><display x="-270" y="-90" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ed1db4c8-9563-4f9f-9606-a26b934a1db5" name="Start" type="Start"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0d75fe69-c13e-4536-a444-0f915cb6844a</onsuccess></stage><stage stageid="097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e" name="End" type="End"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0d75fe69-c13e-4536-a444-0f915cb6844a" name="Save Workbook" type="SubSheet"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /></inputs><onsuccess>097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="4e15b86d-9a5b-40ce-babe-c9fb02cf8764" name="createifmissing" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="dabb4d29-516f-442c-b2da-32cc45ae4df3" name="Get Worksheet As Collection (Fast)" type="SubSheetInfo"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><narrative>Here for back-compatability. Should be considered deprecated and calls should be replaced by "Get Worksheet As Collection", but right now this gets the active worksheet on the active workbook in the current instance of Excel into a collection. It is the equivalent of calling GetWorksheet As Collection with all the default input values.

Output:
Data : Collection : The active sheet's data in a collection.</narrative><display x="-300" y="-120" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c9ce0be6-6a88-4147-aeb3-e8974bb74970" name="Start" type="Start"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a3308402-1446-47b9-9e40-cc105a30db14</onsuccess></stage><stage stageid="aa04eeb6-e87c-4392-b7d2-52e4eb0b28af" name="End" type="End"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The data output" stage="worksheetcollection" /></outputs></stage><stage stageid="98e74d10-88b7-40dd-b771-0a137c8d0665" name="worksheetcollection" type="Collection"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><display x="-210" y="-15" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a3308402-1446-47b9-9e40-cc105a30db14" name="Get Worksheet As Collection" type="SubSheet"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="text" name="Worksheet Name" expr="&quot;&quot;" /></inputs><outputs><output type="collection" name="Data" stage="worksheetcollection" /></outputs><onsuccess>aa04eeb6-e87c-4392-b7d2-52e4eb0b28af</onsuccess><processid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</processid></stage><stage stageid="078c6299-d93e-41b7-9a05-e26f0436b301" name="Format Cell" type="SubSheetInfo"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><narrative>Sets the number format at the given cell to that specified.
Oddly, this *doesn't* set the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="584cad36-fa91-4f11-83b7-4829f89f9a35" name="Start" type="Start"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." stage="cellref" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>6ed5e96a-3604-426e-b112-0be4f4f4b9a8</onsuccess></stage><stage stageid="59f040b8-35ab-48a1-8321-ab6d321172f4" name="cellref" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1867e11e-a153-4421-9512-848674ac9bea" name="format" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f19aada3-d5b7-49ca-8f65-824a0be6abea" name="handle" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bc1c92c3-d8fd-4e00-86eb-cf22a3331a93" name="Format Current Cell" type="SubSheetInfo"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><narrative>Sets a cell format for the currently active cell.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7fea1a9b-6cad-487c-a1d4-0b7a31c0b1e6" name="Start" type="Start"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>a8dd2eb1-5144-4f87-b5fc-87dc562df875</onsuccess></stage><stage stageid="936f31ef-fa8e-4960-aa8a-1653cc6d7de2" name="Get Active Cell" type="SubSheetInfo"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><narrative>Gets a reference to the currently active cell on the given instance.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4a8f71f-cdb8-4091-99f6-f127fb3ec48d" name="Start" type="Start"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>0f68d429-d637-41bc-ab1c-3890e4e57da6</onsuccess></stage><stage stageid="de4f91e6-efde-42cd-9efa-700811c74c15" name="End" type="End"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs></stage><stage stageid="3251089f-0682-4cd7-84d1-78fd6a3f68db" name="handle" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a88df339-9204-419b-9dd7-4553548f1dff" name="cellref" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f68d429-d637-41bc-ab1c-3890e4e57da6" name="CheckInstanceHandle" type="SubSheet"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>0749822c-e521-461c-a3cc-23f5a695980b</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="0749822c-e521-461c-a3cc-23f5a695980b" name="GetActiveCell" type="Code"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>de4f91e6-efde-42cd-9efa-700811c74c15</onsuccess><code><![CDATA[
cellref = GetInstance(handle).ActiveCell.Address(False,False)]]></code></stage><stage stageid="035e5e46-b65c-4bb5-8684-b433aa67ec7b" name="activatecell" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="a47f3c07-957d-4909-bc43-4c56e5f58ae6" name="Activate Cell?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[activatecell]" /><ontrue>e17eb74e-6764-4980-a96c-dd500de13181</ontrue><onfalse>65e26d12-b37e-4df9-a00b-07340967e5b2</onfalse></stage><stage stageid="e17eb74e-6764-4980-a96c-dd500de13181" name="Go To Cell" type="SubSheet"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>23c196fc-bba5-4cc0-8e36-c8d6db96e360</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="23c196fc-bba5-4cc0-8e36-c8d6db96e360" name="anchor2" type="Anchor"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>65e26d12-b37e-4df9-a00b-07340967e5b2</onsuccess></stage><stage stageid="5c445c44-609a-45b3-8c4a-ff4a670213df" name="Go To Next Empty Cell Left" type="SubSheetInfo"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><narrative>Activates the next empty cell that can be found on the left of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="75944053-c0d7-42b9-9231-b173e13066f5" name="Start" type="Start"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>10b0cef9-77af-42e0-b42e-6fc1870587a4</onsuccess></stage><stage stageid="63d50db2-a5f9-48a9-ae16-9a801712b53c" name="End" type="End"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="10b0cef9-77af-42e0-b42e-6fc1870587a4" name="Find Next Empty Cell" type="SubSheet"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;L&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>63d50db2-a5f9-48a9-ae16-9a801712b53c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="f6b88b10-a188-436b-830e-b7eaf783495c" name="handle" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6b1312d6-de01-4272-b3cd-765b4835a9f2" name="cellref" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ffa60dc-058f-4edc-9140-a43050494dee" name="Go To Next Empty Cell Right" type="SubSheetInfo"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><narrative>Activates the next empty cell that can be found on the right of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="78bf9f71-b3ba-4ef3-8142-08be21698287" name="Go To Next Empty Cell Up" type="SubSheetInfo"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><narrative>Activates the next empty cell that can be found above the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0a069347-2e66-4668-ab57-b59e6536c5d0" name="Go To Next Empty Cell Down" type="SubSheetInfo"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><narrative>Activates the next empty cell that can be found below the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b3b21101-6815-4f78-b7af-06f0a73a4070" name="Start" type="Start"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>782731b8-b7fb-4bec-8b35-b0438a5d8cec</onsuccess></stage><stage stageid="650fc617-bcbd-4d39-b835-748d94773ec6" name="End" type="End"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="782731b8-b7fb-4bec-8b35-b0438a5d8cec" name="Find Next Empty Cell" type="SubSheet"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;R&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>650fc617-bcbd-4d39-b835-748d94773ec6</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="56afae5f-81d8-4fdc-b521-cb4b99fac5c3" name="handle" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="347d2c28-0ea0-4ed0-95ce-14e5925f7193" name="cellref" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4636685a-21dc-420d-ae4b-e435f9861298" name="Start" type="Start"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>c01227ef-86b5-48c4-8cbc-6db80b1df2c6</onsuccess></stage><stage stageid="c7e480b2-caf7-430d-b419-49c70c452c4f" name="End" type="End"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="c01227ef-86b5-48c4-8cbc-6db80b1df2c6" name="Find Next Empty Cell" type="SubSheet"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;U&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>c7e480b2-caf7-430d-b419-49c70c452c4f</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="2d6e7e4e-d6f5-45b7-b4ae-33658d6d38fd" name="handle" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="287aee08-8696-49f9-b659-244e88067d0a" name="cellref" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4791458d-f683-4adf-ad1c-1591b3d2fab2" name="Start" type="Start"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>072dae62-8d0d-4522-904c-6d253988874d</onsuccess></stage><stage stageid="b90c78f9-6a37-4db4-b30f-ac96d30c730c" name="End" type="End"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="072dae62-8d0d-4522-904c-6d253988874d" name="Find Next Empty Cell" type="SubSheet"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;D&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>b90c78f9-6a37-4db4-b30f-ac96d30c730c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="c9e817ca-81d1-4d65-b9d1-27fe80445871" name="handle" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f9a80c2-fd03-43e2-a333-5f2c6b7ad0e2" name="cellref" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="febdcc05-5a8a-4445-a188-d0259dfd21a5" name="handle" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3" name="End" type="End"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="111cd676-ae8c-4b83-9bb1-5567fe0735bd" name="FormatCell" type="Code"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="format" expr="[format]" /><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3</onsuccess><code><![CDATA[
GetWorkbook(handle,Nothing).ActiveSheet.Range(cellref,cellref).NumberFormat = format]]></code></stage><stage stageid="6ed5e96a-3604-426e-b112-0be4f4f4b9a8" name="Activate Workbook" type="SubSheet"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>111cd676-ae8c-4b83-9bb1-5567fe0735bd</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="a8dd2eb1-5144-4f87-b5fc-87dc562df875" name="Get Active Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." expr="[handle]" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs><onsuccess>22a903ea-24b0-4f4b-ad3d-590aa6ab3d97</onsuccess><processid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</processid></stage><stage stageid="8480e1e0-5e73-4bec-bc84-ab2b4a5f43fa" name="cellref" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="120" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="22a903ea-24b0-4f4b-ad3d-590aa6ab3d97" name="Format Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." expr="[cellref]" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" expr="[format]" /></inputs><onsuccess>2776814b-74bd-42b3-b282-80a156b933cd</onsuccess><processid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</processid></stage><stage stageid="dc6c799a-7fa3-4623-9bf8-e966d530b67d" name="format" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2776814b-74bd-42b3-b282-80a156b933cd" name="End3" type="End"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="04fbbbb0-aba9-4518-8bc7-d26273986f9e" name="Set Window Size" type="SubSheetInfo"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><narrative>Sets the window size of the specified instance.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7a197c45-c253-4fb8-bed5-e01508e93824" name="Start" type="Start"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle specifying the instance on which the bounds should be changed." stage="handle" /><input type="number" name="Width" narrative="The width to which the instance's window should be set" stage="width" /><input type="number" name="Height" narrative="The height to which the instance's window should be set." stage="height" /></inputs><onsuccess>3d73ff94-84e6-4e12-947e-76d14884579c</onsuccess></stage><stage stageid="a952606a-38e1-4585-821a-7395c94d70cb" name="End" type="End"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d4c82574-5577-49e8-80a8-79a27ace5ffb" name="Set Window Location" type="SubSheetInfo"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><narrative>Moves the specified instance's window to the required location.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="67ee4120-06af-41a6-ae0a-629e1bd3bd05" name="Start" type="Start"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window location should be set." stage="handle" /><input type="number" name="X" narrative="The x co-ordinate to which the window should be moved." stage="x" /><input type="number" name="Y" narrative="The y co-ordinate to which the window should be moved." stage="y" /></inputs><onsuccess>3f663a38-1c01-438f-a02a-aa56ded74764</onsuccess></stage><stage stageid="5b24c512-8930-4c34-9083-7834083ab65c" name="End" type="End"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="129fe5f1-311c-4b58-964f-74b62d5f17ad" name="Set Window State" type="SubSheetInfo"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><narrative>Minimizes / maximizes / restores the window attached to the specified excel instance.

Exceptions:
Invalid Input Parameter : If the given state was not "normal" and did not start with either "min" or "max"</narrative><display x="-240" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="44e95a42-ad61-4e8d-af8a-aed037662ba8" name="Go To Next Cell" type="SubSheetInfo"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><narrative>Moves a specified number of rows and columns from the currently active cell and returns the new cell reference.
If the resultant cell reference is the same as the active cell before this action was called, this action has 'failed'. This is usually because the active cell is too close to a boundary.</narrative><display x="-330" y="-135" w="420" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a87664dd-017d-4b12-b9c3-7230d7910326" name="Start" type="Start"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows" narrative="The number of rows to navigate down. A negative value indicates that the action should navigate UP the required number of rows." stage="rows" /><input type="number" name="Columns" narrative="The number of columns to navigate to the right. A negative value indicates that the action should navigate to the left." stage="cols" /></inputs><onsuccess>fdbdccce-2959-40cb-b4b4-d53556dd97a1</onsuccess></stage><stage stageid="dcae25b1-7e8b-4ee2-9ffc-11aacd935154" name="Close Current Workbook" type="SubSheetInfo"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><narrative>Closes the current workbook on the current excel instance.
This is the equivalent of calling the 'Close Workbook' action with the default values for 'handle' (0) and 'Workbook Name' ("")</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8fccb8ba-397f-406d-a6cd-85cb3c09ba17" name="Start" type="Start"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5</onsuccess></stage><stage stageid="160a79e4-be77-47f7-b8f2-271a170a762f" name="End" type="End"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5" name="Close Workbook" type="SubSheet"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="flag" name="Save Data" expr="False" /></inputs><onsuccess>160a79e4-be77-47f7-b8f2-271a170a762f</onsuccess><processid>6ccaae8b-c06f-45c8-8772-835218881458</processid></stage><stage stageid="a9a3eac3-7c04-4983-9224-bbf490c75af1" name="handle" type="Data"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="00fbd16c-c443-4d2e-ae2a-4539f816c297" name="rows" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fa354e6-61e2-452d-b0c4-208150e9076d" name="cols" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50344da8-13a3-4d20-899b-bfd3b5507681" name="End" type="End"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the currently active cell after navigating the required number of rows / columns. If the action could not navigate the desired number of rows / columns (eg. the active cell is near a boundary), then the active cell will not have been change, and this cell reference will represent the same cell that was active before this action was initiated." stage="cellref" /></outputs></stage><stage stageid="30a3c6c6-5324-4fe2-a0b2-3026f1a5e379" name="GoToNextCell" type="Code"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="cols" expr="[cols]" /><input type="number" name="rows" expr="[rows]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>50344da8-13a3-4d20-899b-bfd3b5507681</onsuccess><code><![CDATA[
Dim Instance As Object = GetInstance(handle)

If Instance.ActiveCell Is Nothing Then
	Dim wb As Object = Instance.ActiveWorkBook 
	If wb IsNot Nothing Then
		Dim ws As Object = wb.ActiveSheet
		If ws IsNot Nothing Then
			ws.Range(1,1).Activate()
		Else
			Throw New Exception("There is no active worksheet")
		End If
	Else
		Throw New Exception("There is no active workbook")
	End If
Else
	Try
		Instance.ActiveCell.Offset(rows,cols).Activate()
	Catch ex As Exception
	End Try
End If
cellref = Instance.ActiveCell.Address(False,False)
]]></code></stage><stage stageid="fdbdccce-2959-40cb-b4b4-d53556dd97a1" name="Activate Workbook" type="SubSheet"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>30a3c6c6-5324-4fe2-a0b2-3026f1a5e379</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="5742c4d1-0b40-4dd9-8cf0-e66b9adeab4b" name="handle" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="437bf59c-d85b-45c9-8828-2e2c665afd10" name="cellref" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="105" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc5149d8-0c99-413a-81c8-ba9efc719cdc" name="handle" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a87fd94f-f26f-4c2e-bb67-1ae4c0bed939" name="width" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59a65ce5-cfb1-4190-8449-e4fb5ced121a" name="height" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d73ff94-84e6-4e12-947e-76d14884579c" name="CheckInstanceHandle" type="SubSheet"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>82380eea-db5c-47b3-9a94-2e19338cca95</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="82380eea-db5c-47b3-9a94-2e19338cca95" name="SetWindowSize" type="Code"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="height" expr="[height]" /><input type="number" name="width" expr="[width]" /></inputs><onsuccess>a952606a-38e1-4585-821a-7395c94d70cb</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Width = width
excel.Height = height]]></code></stage><stage stageid="8acfecd0-d6d9-4de0-ae9e-46922ed73111" name="x" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b68bc93f-161f-4d6f-825d-2d961690ca56" name="y" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="079ee65b-a90b-4ab6-81b5-801557c07fbf" name="handle" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3f663a38-1c01-438f-a02a-aa56ded74764" name="CheckInstanceHandle" type="SubSheet"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>12d30538-38bf-4f9b-a180-41d0b836854c</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="12d30538-38bf-4f9b-a180-41d0b836854c" name="SetWindowLocation" type="Code"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="x" expr="[x]" /><input type="number" name="y" expr="[y]" /></inputs><onsuccess>5b24c512-8930-4c34-9083-7834083ab65c</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Left = x
excel.Top = y]]></code></stage><stage stageid="016d76a7-6a95-485e-84f5-faa85a0c0712" name="Start" type="Start"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window state should be set." stage="handle" /><input type="text" name="State" narrative="The state of the window which is required. Should start with &quot;min&quot; (to minimize the window), &quot;max&quot; (to maximise the window) or it should equal &quot;normal&quot; (to restore the window). Anything else will result in an error." stage="state" /></inputs><onsuccess>0f8fc913-9174-4304-823f-d18ffae7217a</onsuccess></stage><stage stageid="ffe49fc1-13a2-4e84-a649-bd692ef7752a" name="End" type="End"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ca7b06cd-e6e3-42e1-8980-cb429796aa3b" name="handle" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3db578f3-47a7-4150-9ccc-6f9a16dbe73f" name="CheckInstanceHandle" type="SubSheet"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>458615b7-ea0b-4d96-9dce-87099d6e5950</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="458615b7-ea0b-4d96-9dce-87099d6e5950" name="SetWindowState" type="Code"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="state" expr="[state]" /></inputs><onsuccess>ffe49fc1-13a2-4e84-a649-bd692ef7752a</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

If state.ToLower().StartsWith("min") Then
	excel.WindowState = -4140
ElseIf state.ToLower().StartsWith("max") Then
	excel.WindowState = -4137
ElseIf state.ToLower() = "normal" Then
	excel.WindowState = -4143
End If]]></code></stage><stage stageid="4686174e-a845-4f2b-9a0a-70325a2df399" name="Valid State?" type="Decision"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><narrative>Checks if the given state is a valid value</narrative><display x="-30" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="StartsWith([state],&quot;max&quot;) or StartsWith([state],&quot;min&quot;) or [state]=&quot;normal&quot;" /><ontrue>3db578f3-47a7-4150-9ccc-6f9a16dbe73f</ontrue><onfalse>c0e54c49-a9fc-48c4-a54e-2b85581d4ba5</onfalse></stage><stage stageid="1537f595-55fc-4726-910a-1d5ef88bf7a4" name="state" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c0e54c49-a9fc-48c4-a54e-2b85581d4ba5" name="Invalid State Exception" type="Exception"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="135" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Invalid Input Parameter" detail="&quot;Invalid Window State Parameter : &quot; &amp; [state] &amp; &quot; - must start with 'min', 'max' or equal 'normal'&quot;" /></stage><stage stageid="9d0e19ce-07b8-4074-a34c-6186bcd3ca77" name="newworkbookname" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04e9d703-4b1c-4196-b1ff-7bf68a12faae" name="newworkbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>The new workbook name assigned by Excel after saving the book</narrative><display x="-135" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ab01750-1bb3-4299-add0-8a1d08f6bf41" name="handle" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f778bc6c-8cdd-4e56-80b8-b7cdb1fd11ae" name="Release Instance" type="SubSheetInfo"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><narrative>Removes an instance from this business object *without* closing or quitting it - after running this action, the instance in question will not be accessible by this object unless it is re-attached to using 'Open Instance'.

Params:
- handle : Number : The handle of the instance to be released. The default of 0 indicates the currently active instance. Note that following the current instance being released, the current instance will not be set.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-135" w="360" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="66fece2a-2c82-48bb-92fe-211ee6556a24" name="Start" type="Start"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be released. The default value of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1d0738a9-7841-446d-b3ed-1a4bafeccc1b</onsuccess></stage><stage stageid="dc556131-4dde-459f-9af8-8c854fcae760" name="End" type="End"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6da262c1-9a82-4bc8-9363-ede171f125e5" name="handle" type="Data"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><display x="-225" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1d0738a9-7841-446d-b3ed-1a4bafeccc1b" name="CheckInstanceHandle" type="SubSheet"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>2e67a2b9-10bf-4d4d-9bd9-db68edaf7662</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2e67a2b9-10bf-4d4d-9bd9-db68edaf7662" name="Release Instance" type="Code"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>dc556131-4dde-459f-9af8-8c854fcae760</onsuccess><code><![CDATA[
	Dim current as Object = CurrentInstance
	Dim inst as Object = GetInstance(handle) ' Careful - sets the 'current instance' to inst

	HandleMap.Remove(handle)
	InstanceMap.Remove(inst)

	If Object.ReferenceEquals(inst, current) Then
		CurrentInstance = Nothing
	Else
		CurrentInstance = current
	End If
]]></code></stage><stage stageid="0f04ef58-eacb-4204-ba2b-d073285c2be8" name="Note1" type="Note"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><narrative>Don't need to anything - a side-effect of the check is to set the current instance... makes it simple.</narrative><display x="150" y="-120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f0ee2a73-65b2-418e-8b77-6dc802046c5d" name="Attach" type="SubSheetInfo"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><narrative>Back-compatible link to 'Open Instance'. This opens the first running instance of Excel found and links to it in this object.

Returns:
- handle : Number : An integer with which the instance opened can be identified.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True</narrative><display x="-210" y="-120" w="240" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="92e3475b-ed7d-4ae1-940c-7eb554a7cea8" name="Start" type="Start"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>ba67509b-7301-4ce1-a467-e9970249b392</onsuccess></stage><stage stageid="c74db74c-8822-4391-8593-d9919e357a5b" name="End" type="End"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle which identifies the excel instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="f68ab231-3cbb-423e-84de-9103b9f971f4" name="handle" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba67509b-7301-4ce1-a467-e9970249b392" name="Open Instance" type="SubSheet"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="&quot;&quot;" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>c74db74c-8822-4391-8593-d9919e357a5b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="fa5aede4-db23-4781-8954-3baaf0fd0740" name="Attach to workbook" type="SubSheetInfo"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><narrative>Back compatible link to 'Open instance' - attaches to the excel instance containing the current workbook. Note that if the instance containing the workbook could not be found, a new instance will be created.

Params:
- File name : Text : The name of the file in the instance that should be opened.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True
Returns:
- handle : Number : The integer that can be used to reference this instance later.</narrative><display x="-195" y="-135" w="390" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="431ac081-4d84-414a-80dd-cb137dd67a73" name="Start" type="Start"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="60" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File name" narrative="The name of the file which should be opened" stage="filename" /><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>4a719c51-85b9-4750-9593-bf0e3166edfc</onsuccess></stage><stage stageid="ba3c2775-b5ac-44a8-be6b-05befaea619b" name="End" type="End"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle indentifying the instance opened. This can be used in subsequent actions to identify the instance." stage="handle" /></outputs></stage><stage stageid="0283fb0e-8dda-4956-b434-ea1d6c99e063" name="handle" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a719c51-85b9-4750-9593-bf0e3166edfc" name="Open Instance" type="SubSheet"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="[filename]" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>ba3c2775-b5ac-44a8-be6b-05befaea619b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="c99c412d-dbb6-4a6a-a7e2-9834a74052d0" name="filename" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a734ecf-7e58-4aa4-b7ff-5aa4494ec687" name="cellref empty?" type="Decision"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>bed65abf-b1ad-4f7e-83be-c8a96e3ea162</ontrue><onfalse>39135f99-dd54-4a2b-bff2-555714753a6d</onfalse></stage><stage stageid="bed65abf-b1ad-4f7e-83be-c8a96e3ea162" name="anchor3" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b98f8e72-e995-42a4-b3f9-df0acf2a5944</onsuccess></stage><stage stageid="b98f8e72-e995-42a4-b3f9-df0acf2a5944" name="anchor4" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess></stage><stage stageid="250bb1db-ca8e-4edb-b9a4-52fa39261823" name="Go To Cell" type="SubSheet"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="29427d7f-a2d9-4b65-b6c4-773881bd285d" name="cellref empty?" type="Decision"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>e743b184-cb2f-43cb-83c1-b99654286d3d</ontrue><onfalse>250bb1db-ca8e-4edb-b9a4-52fa39261823</onfalse></stage><stage stageid="e743b184-cb2f-43cb-83c1-b99654286d3d" name="anchor3" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dea637ce-5933-4805-94a4-f2bbd9b99d0b</onsuccess></stage><stage stageid="dea637ce-5933-4805-94a4-f2bbd9b99d0b" name="anchor4" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess></stage><stage stageid="bcf597f1-97f7-449c-8865-ff8ca139dd6c" name="Get Active Cell Value" type="SubSheetInfo"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><narrative>Gets the value of the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b69207e1-2811-4150-a61f-4746ef8489d4" name="Start" type="Start"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell whose value is required resides. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>af8aab5e-4539-4acc-a5cc-1bd632282587</onsuccess></stage><stage stageid="73e8408e-ff97-4d9f-b0e0-5a0e844b731c" name="End" type="End"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The (unformatted) value found at the specified cell." stage="Value" /></outputs></stage><stage stageid="af8aab5e-4539-4acc-a5cc-1bd632282587" name="Get Active Cell Value" type="SubSheet"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." expr="&quot;&quot;" /></inputs><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="Value" /></outputs><onsuccess>73e8408e-ff97-4d9f-b0e0-5a0e844b731c</onsuccess><processid>0e031661-2f5e-4cb2-949b-97babe59ff81</processid></stage><stage stageid="88d7196d-2443-4439-8261-6700e9673d0a" name="handle" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e4cdc61b-a1e1-461e-8d91-a98cd40a2c5a" name="Value" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="69cd13bc-f818-4a5b-be64-b6fb7de62c61" name="Create Worksheet" type="SubSheetInfo"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><narrative>Creates a new worksheet in the specified workbook with the given name. If a sheet with the given name already exists, this will activate that sheet.

Params:
- handle : Number : The number identifying the instance required.
- Workbook Name : Text : The name of the workbook to add it to. An empty string (the default) indicates the active workbook in the instance.
- Worksheet Name : Text : The name of the worksheet that is required. Note that if the name matches a worksheet already in the workbook a new worksheet will not be created, but that worksheet will be activated.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2a0c385f-fe76-4eb3-a36f-4936eb7ac84a" name="Start" type="Start"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet should be created. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet should be created - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /></inputs><onsuccess>89240340-492e-44ab-9fed-c64a6d3fffdf</onsuccess></stage><stage stageid="5d624e42-813e-467d-bda1-ebb3e410045c" name="End" type="End"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="89240340-492e-44ab-9fed-c64a6d3fffdf" name="Activate Worksheet" type="SubSheet"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="[workbookname]" /><input type="flag" name="Create If Missing?" expr="True" /><input type="text" name="Worksheet Name" expr="[worksheetname]" /></inputs><onsuccess>5d624e42-813e-467d-bda1-ebb3e410045c</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="ab7509fd-0572-44d9-9050-b9c9907c49ac" name="handle" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="544db1ef-b84c-403c-b4ee-de2d660ec253" name="worksheetname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df17296d-4f63-46cf-bcd9-4acd7eefed34" name="workbookname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="64089c9a-4a30-4db5-bf87-7ba017ba54e7" name="Write Collection" type="SubSheetInfo"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><narrative>Writes the given collection into the specified sheet.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a1ab274b-c2fb-47c7-94f8-292590df5765" name="Start" type="Start"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the specified collection should be written. The default of zero indicates the currently active instance." stage="handle" /><input type="collection" name="Collection" narrative="The collection containing the data which should be written to the worksheet." stage="collection" /><input type="text" name="Workbook Name" narrative="The name of the workbook within which the data should be written. The default empty value indicates the current workbook within the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the given data should be written. The default empty value indicates the current sheet within the specified workbook." stage="worksheetname" /><input type="text" name="Cell Reference" narrative="The reference at which the collection should be written." stage="cellref" /><input type="flag" name="Include Column Names" narrative="True to indicate that the column names from the collection should be written out as the first row; False to ignore the column names and just write out the data." stage="includecolnames" /></inputs><onsuccess>a3a318c6-e218-4e78-a818-1673f90541b3</onsuccess></stage><stage stageid="8819df51-0132-421d-baae-b24b5082f131" name="End" type="End"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="85afbd6d-2c6e-42f8-8e71-7858a8488167" name="handle" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc024959-b016-4b16-93a8-e230e4ab936d" name="collection" type="Collection"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="71e25266-b464-4b47-b6a7-c8a70cff7514" name="worksheetname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5f2a253-bee4-4ee0-9d8c-ab780265b5db" name="workbookname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98c5b0c8-0c25-4972-b9c8-6057e6841ce5" name="includecolnames" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3a318c6-e218-4e78-a818-1673f90541b3" name="Activate Worksheet" type="SubSheet"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookname]" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetname]" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>f2ebff4d-5325-45e8-945d-73006f5bd7ce</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="f2ebff4d-5325-45e8-945d-73006f5bd7ce" name="WriteColl" type="Code"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="cellref" expr="[cellref]" /><input type="collection" name="collection" expr="[collection]" /><input type="flag" name="includecolnames" expr="[includecolnames]" /></inputs><onsuccess>8819df51-0132-421d-baae-b24b5082f131</onsuccess><code><![CDATA[	' Get to the cell
	Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname)
	Dim origin as Object = ws.Range(cellref,cellref)
	Dim cell as Object = origin

	Dim colInd as Integer = 0, rowInd as Integer = 0 ' Offsets from the origin cell
	
	' Deal with the column names first
	If includecolnames Then
		For Each col as DataColumn in collection.Columns
			Try
				cell = origin.Offset(rowInd, colInd)
			Catch ex as Exception ' Hit the edge.
				Exit For
			End Try
			cell.Value = col.ColumnName
			colInd += 1
		Next
		rowInd += 1
	End If
	
	' Now for the data itself
	For Each row as DataRow in collection.Rows
		colInd = 0
		For Each col as DataColumn in collection.Columns
			Try
				cell = origin.Offset(rowInd, colInd)
			Catch ex as Exception ' Hit the edge.
				Exit For
			End Try
			'MessageBox.Show("RowOffset:" & rowInd & "; ColOffset:" & colInd & "; cell: " & cell.Address(False,False))
			cell.Value = row(col)
			colInd += 1
		Next
		rowInd+=1
	Next]]></code></stage><stage stageid="fb353c57-7a8c-4ccb-9428-94761a643715" name="cellref" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="add1def4-fc64-4534-bbb0-d3ac07611a85" name="anchor5" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>108c176a-92d1-4f50-b460-ac6a3f0dac25</onsuccess></stage><stage stageid="51d7d624-e8bf-42b7-afdd-8d090b584865" name="anchor6" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess></stage><stage stageid="4be7292e-9eb1-43f7-9e87-3ae906bd79ed" name="savechanges" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0f8fc913-9174-4304-823f-d18ffae7217a" name="state = Lower(state)" type="Calculation"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4686174e-a845-4f2b-9a0a-70325a2df399</onsuccess><calculation expression="Lower([state])" stage="state" /></stage><stage stageid="27e7ff80-4437-42a3-ba14-e499be5bc0e5" name="sheetexists" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-240" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a854b87-0e5a-46dd-8181-a58f97555aa8" name="Sheet Existed?" type="Decision"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>ddfe7f54-b5c2-410a-8a5d-3c2b52de9550</ontrue><onfalse>9bc52652-698b-46ca-ba0d-ebb170432963</onfalse></stage><stage stageid="9bc52652-698b-46ca-ba0d-ebb170432963" name="No Such Sheet" type="Exception"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="150" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b396c564-6c31-4c6f-be0a-0cc64f178a19" name="sheetexisted" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56c2259b-9d71-4364-bede-79b4af1e3e96" name="Sheet Existed?" type="Decision"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexisted]" /><ontrue>6b35d569-0eb2-4c01-bb88-e5f7c41bde81</ontrue><onfalse>091e0364-11db-49d4-8e94-8f5f9396fa9c</onfalse></stage><stage stageid="091e0364-11db-49d4-8e94-8f5f9396fa9c" name="No Such Sheet" type="Exception"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="150" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b6d0da26-0322-4b43-b1d5-304466ff29fb" name="Sheet Exists?" type="Decision"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>cf5b0880-2cac-4221-946a-e4e3d7f0bc99</ontrue><onfalse>7e8fce63-9130-4c0f-baea-ea8be793c57d</onfalse></stage><stage stageid="7e8fce63-9130-4c0f-baea-ea8be793c57d" name="No Such Sheet" type="Exception"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="165" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="286f9733-2a26-4c00-a7ff-7ac289086919" name="sheetexists" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5cb56c9a-aa29-4ed4-84e1-9a65976ba50f" name="Does sheet exist?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>859597f9-d048-46a3-bf99-2f3f6588c2c5</ontrue><onfalse>2b8672dd-8330-4c2d-a522-9f12c9e27ba2</onfalse></stage><stage stageid="2b8672dd-8330-4c2d-a522-9f12c9e27ba2" name="No Such Sheet" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="c50f1065-0989-47f5-aad4-c66396e462e0" name="sheetexists" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68b64b13-62f8-4431-94c4-62b7ff1f1c2c" name="Get Worksheet as Collection Offset" type="SubSheetInfo"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="164e0a2b-6c31-48ce-8172-7fb4edd3dbb3" name="End" type="End"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" stage="worksheetcollection" /></outputs></stage><stage stageid="0b6697a7-4aa1-4ec1-86db-bc41f3ca9d5e" name="handle" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2c25e33f-7af9-4998-8c1a-4029c0e2af9e" name="workbookname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee01090-4b0b-4e85-9643-1f3b40d182e2" name="Start" type="Start"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="Workbook Name" stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" stage="Start Cell" /><input type="flag" name="Use Header" stage="Use Header" /></inputs><onsuccess>8f50a819-e470-4c0e-97d5-08bd0f705682</onsuccess></stage><stage stageid="a755a822-d485-45ea-8d7d-426646b4aec0" name="GetWorksheetAsCollectionOffset" type="Code"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="15" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="flag" name="Use Header" expr="[Use Header]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>164e0a2b-6c31-48ce-8172-7fb4edd3dbb3</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname)
	ws.Activate()

	Dim cell as Object = ws.Range(Start_Cell)
	Dim r as Object = ws.UsedRange.Offset(cell.row-1,cell.column-1)
	r.Select()
	r.Copy()

	Dim data As String = Clipboard.GetDataObject().GetData(DataFormats.Text, True)
	
	' The data split into rows
	Dim asRows() As String = Split(data, vbCrLf)
	
	Dim table As New DataTable()
	' Set a flag indicating the header row
	Dim isHeaderRow As Boolean = Use_Header
	
	For Each strRow As String In asRows
		If Not String.IsNullOrEmpty(strRow) Then
		
			Dim fields() As String = Split(strRow, vbTab)
			If Not Use_Header Then
				Dim i As Integer
				For Each field As String in fields
					i += 1
					table.Columns.Add("Field" & i)
				Next
			End If
			If isHeaderRow Then
			
				isHeaderRow = False
				For Each field As String in fields
					table.Columns.Add(field)
				Next
				
			Else

				Dim row as DataRow = table.NewRow()
				For i As Integer = 0 To fields.Length - 1
					If i < fields.Length Then
						row(i) = fields(i)
					Else
						row(i) = ""
					End If
				Next I
				table.Rows.Add(row)
				
			End If
				
		End If
		
	Next
	worksheetcollection = table]]></code></stage><stage stageid="8f50a819-e470-4c0e-97d5-08bd0f705682" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="15" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>a755a822-d485-45ea-8d7d-426646b4aec0</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="f82cf955-6669-494b-b6a1-866974c7cc74" name="worksheetname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b329ff1-b62a-41eb-9503-6673f300eb68" name="worksheetcollection" type="Collection"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="225" y="0" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3f4b3c3e-515f-4ee7-9e70-5c76c0fb3044" name="Set Events Enabled" type="SubSheetInfo"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><narrative>Enables or disables the events on the specified excel instance.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cb955f7e-320d-42d1-8dad-26b8f55d083b" name="Start" type="Start"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." stage="handle" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" stage="Enable Events" /></inputs><onsuccess>68483479-6865-4fd5-9a77-f4392c4ade9e</onsuccess></stage><stage stageid="3969dd45-fdea-4671-879e-461a56f312be" name="End" type="End"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="68483479-6865-4fd5-9a77-f4392c4ade9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>21682417-b503-44b4-92f2-a3c80b4fad14</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="45553fd7-b75b-4fee-8961-aff490d121b3" name="Enable Events" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="21682417-b503-44b4-92f2-a3c80b4fad14" name="Enable Events" type="Code"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="enable" expr="[Enable Events]" /></inputs><onsuccess>3969dd45-fdea-4671-879e-461a56f312be</onsuccess><code><![CDATA[
GetInstance(handle).EnableEvents = enable]]></code></stage><stage stageid="3fd7c1fd-f40f-451d-885e-3f5e34c62b77" name="handle" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb99ca56-7dc9-4a0d-860e-651747237d8f" name="Enable Events" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="7fb1ba2f-64f1-417b-9b97-479efb954a9d" name="anchor8" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess></stage><stage stageid="108c176a-92d1-4f50-b460-ac6a3f0dac25" name="Enable/Disable Events" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>754832af-1144-48ff-8ab0-bb6c86d3f78e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="17b0edcc-4892-4e42-93c9-9438a160ed66" name="Enable Events" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e24f71a3-1760-49ce-bbcb-4750671f20ad" name="Enable Events" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="9773e311-bcc9-4426-999e-7c586da425c5" name="Enable Events" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="a13edde2-3883-4007-9719-92f0e1009ddd" name="Set Events Enabled" type="SubSheet"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>d337a2cf-1121-4619-a1b1-f7f19bea974e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="7c3abf99-a3ae-44c2-b834-ad050b20a0eb" name="Enable Events" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="6c2fa22d-1876-46b7-92eb-cf8343d0911f" name="Set Events Enabled" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>18a306bf-d323-4c4e-83b5-4b226773161c</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="e13408b2-c348-4d32-9ca3-e878db7cd165" name="Start Cell" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="614b5c49-3b88-427a-9513-c3048d8b716d" name="Get Worksheet Names" type="SubSheetInfo"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ef85b34d-5145-4f90-96a4-0f1abc4c4889" name="End" type="End"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs></stage><stage stageid="7e4ae954-86d5-4183-88b2-d307fecfc6a9" name="Start" type="Start"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /></inputs><onsuccess>9bc4bc33-6a3a-43e0-86e0-7b209978508a</onsuccess></stage><stage stageid="9bc4bc33-6a3a-43e0-86e0-7b209978508a" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>bbd37070-c589-4f9c-8d03-11f2982c59f4</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="bbd37070-c589-4f9c-8d03-11f2982c59f4" name="Get Worksheets" type="Code"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" stage="Worksheet Names" /></outputs><onsuccess>ef85b34d-5145-4f90-96a4-0f1abc4c4889</onsuccess><code><![CDATA[Dim wb As Object = GetWorkbook(Handle, WorkbookName)
Dim sheets as Object = wb.Sheets

Worksheet_Names = New DataTable()
Worksheet_Names.Columns.Add("Name", GetType(String))

If sheets IsNot Nothing Then
	For Each sheet as Object in sheets
		Worksheet_Names.Rows.Add(New Object() {sheet.Name})
	Next
End If]]></code></stage><stage stageid="cff86abf-c0f2-493d-942f-759ce2830ff8" name="handle" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e5d53720-b610-4e5c-bf49-94cbcaf29e20" name="workbookname" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd45f86-2f78-4a96-8e74-62414e4094e7" name="Worksheet Names" type="Collection"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="255" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9d637f02-8e13-4c65-a606-5756018a9e8c" name="Worksheet Exists" type="SubSheetInfo"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="54725352-a686-4ebc-88d8-80fa81af39bc" name="End" type="End"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs></stage><stage stageid="4cd78f5f-29a7-4f71-ab51-5c93e2e50ba3" name="Start" type="Start"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" stage="Worksheet Name" /></inputs><onsuccess>b4bad8df-ac04-4c0f-88cf-21bd3dc6707a</onsuccess></stage><stage stageid="4126c650-c062-413d-b6b3-501c8743b400" name="handle" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a19213a7-dbb4-4a78-b929-7c0ec2f48fa7" name="workbookname" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4bad8df-ac04-4c0f-88cf-21bd3dc6707a" name="Get Worksheet Names" type="SubSheet"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs><onsuccess>3124d4f1-6d19-450e-8d71-01e6c2cac8d9</onsuccess><processid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</processid></stage><stage stageid="920cf97d-74a9-441c-9e2b-2c47c023ac33" name="Worksheet Names" type="Collection"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="255" y="-45" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3124d4f1-6d19-450e-8d71-01e6c2cac8d9" name="For Each Name" type="LoopStart"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0e40b339-b952-445b-a957-6d2d0a1bdbac</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid><looptype>ForEach</looptype><loopdata>Worksheet Names</loopdata></stage><stage stageid="27d57e09-d2fa-496d-a5c6-d382be881ad1" name="Next" type="LoopEnd"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>aea2b1ba-e24b-4929-a0be-bc2ad811f277</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid></stage><stage stageid="4198f8b9-1418-4bbc-a984-4049f1b78df6" name="Worksheet Name" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="180" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e40b339-b952-445b-a957-6d2d0a1bdbac" name="Matches?" type="Decision"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Worksheet Name] = [Worksheet Names.Name]" /><ontrue>f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1</ontrue><onfalse>27d57e09-d2fa-496d-a5c6-d382be881ad1</onfalse></stage><stage stageid="f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1" name="Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="True" stage="Worksheet Exists" /></stage><stage stageid="f5a7d39b-3edc-4984-89dc-f88f02b5f747" name="Worksheet Exists" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-60" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aea2b1ba-e24b-4929-a0be-bc2ad811f277" name="Not Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="False" stage="Worksheet Exists" /></stage><stage stageid="a1d81278-4fd7-4ee6-a878-8ec4dcde4793" name="Get Worksheet Range As Collection" type="SubSheetInfo"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6f2ee451-c914-4c38-8e19-4d3e3a519dfd" name="End" type="End"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The spreadsheet data from the specified range, as a collection" stage="worksheetcollection" /></outputs></stage><stage stageid="fa5759e6-b7e3-42d1-8297-90953ec4a343" name="handle" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="832f8dbf-c88e-4488-89ec-d0782439fc34" name="workbookname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7a36655-443b-482f-809b-eb738682ee98" name="Start" type="Start"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><display x="135" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" narrative="The starting cell of the range of interest" stage="Start Cell" /><input type="text" name="EndCell" narrative="The end cell of the range of interest" stage="End Cell" /></inputs><onsuccess>c5ca2712-c200-4900-8f8e-70a9fffb3c2e</onsuccess></stage><stage stageid="680eac96-2bd0-4d02-a62b-ac7bf684dae9" name="GetWorksheetRangeAsCollection" type="Code"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="text" name="End Cell" expr="[End Cell]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>6f2ee451-c914-4c38-8e19-4d3e3a519dfd</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname)
	Dim r as Object
	r = ws.Range(Start_Cell & ":" & End_Cell)
	r.Select()
	r.Copy()

	Dim data As String = Clipboard.GetDataObject().GetData(DataFormats.Text, True)
	
	' The data split into rows
	Dim asRows() As String = Split(data, vbCrLf)
	
	Dim table As New DataTable()
	' Set a flag indicating the header row
	Dim isHeaderRow As Boolean = True
	
	For Each strRow As String In asRows
		If Not String.IsNullOrEmpty(strRow) Then
		
			Dim fields() As String = Split(strRow, vbTab)
			If isHeaderRow Then
			
				isHeaderRow = False
				For Each field As String in fields
					table.Columns.Add(field)
				Next
				
			Else

				Dim row as DataRow = table.NewRow()
				For i As Integer = 0 To fields.Length - 1
					If i < fields.Length Then
						row(i) = fields(i)
					Else
						row(i) = ""
					End If
				Next I
				table.Rows.Add(row)
				
			End If
				
		End If
		
	Next
	worksheetcollection = table]]></code></stage><stage stageid="c5ca2712-c200-4900-8f8e-70a9fffb3c2e" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="-60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" expr="[handle]" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" expr="[workbookname]" /></inputs><onsuccess>680eac96-2bd0-4d02-a62b-ac7bf684dae9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="706da482-84a4-4e78-a1ba-002f80123e3f" name="worksheetname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1ec36df-f335-48a9-a0f4-e3f39d6c987d" name="worksheetcollection" type="Collection"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="345" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8054b9c8-5245-4a77-a058-949faeec00a7" name="Start Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="210" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9f43b65-bd92-44fa-b0fe-cf798aaf49be" name="End Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="270" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="40717bdb-980d-46a2-8ed8-4c3c283a98ff" name="Use Header" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="165" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a437a6b-8cfe-4bc1-a7d3-ca5a2e026477" name="Remove Blank Rows" type="SubSheetInfo"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><narrative>Removes blank rows in the active excel workbook. The entire row must consist of blank cells.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c883a67c-5093-45d2-82c8-680cf35c2c0e" name="Start" type="Start"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1e0e5735-5bc9-43dc-85c9-4e8735def67f</onsuccess></stage><stage stageid="7023c112-819d-4c9c-82f3-84ab84c9f560" name="End" type="End"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1e0e5735-5bc9-43dc-85c9-4e8735def67f" name="Activate Workbook" type="SubSheet"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Name" expr="&quot;&quot;" /><input type="text" name="Sheet name" expr="&quot;&quot;" /></inputs><onsuccess>4fa6c603-9d6a-4077-ba95-9d213394ee06</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="890b79a0-986e-4982-a010-99e17a8f7173" name="handle" type="Data"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><display x="225" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="4fa6c603-9d6a-4077-ba95-9d213394ee06" name="Delete blank rows" type="Code"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7023c112-819d-4c9c-82f3-84ab84c9f560</onsuccess><code><![CDATA[Dim worksheet As Object
worksheet = GetWorkbook(handle,Nothing).ActiveSheet

Const xlCellTypeLastCell As Integer = 11 
Dim FirstRow As Integer = 1
Dim LastRow As Integer = worksheet.Cells.SpecialCells(xlCellTypeLastCell).Row

For i As Integer = LastRow To FirstRow Step -1
	If worksheet.Application.CountA(worksheet.Rows(i)) = 0 Then
		worksheet.Rows(i).Delete
	End If
Next]]></code></stage><stage stageid="7ea085b3-60ed-4690-9b58-044e3adac69b" name="Move Worksheet" type="SubSheetInfo"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="48fad533-06e9-41b7-b213-bfea2423c61c" name="Start" type="Start"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Source Workbook" stage="Source Workbook" /><input type="text" name="Source Worksheet" stage="Source Worksheet" /><input type="text" name="Destination Workbook" stage="Destination Workbook" /><input type="number" name="Destination Position" stage="Destination Position" /><input type="flag" name="Copy" stage="Copy" /></inputs><onsuccess>b950e637-fb25-4932-b970-65e4ee21dd1d</onsuccess></stage><stage stageid="51274535-b09a-4b0b-a9bc-fff82557aa0a" name="Handle" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6336e057-ac6a-4b57-b789-906100be58cc" name="Source Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="51bf5410-80ae-4517-8ee8-1ccf54a61e2f" name="Source Worksheet" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="467b75ec-f03c-460e-a57d-d6852ab35293" name="Destination Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ad740a0-b0e5-483c-9247-2b766533c852" name="Source Worksheet Exists" type="SubSheet"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[Source Workbook]" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" expr="[Source Worksheet]" /></inputs><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs><onsuccess>efca1a70-2f20-4dda-b071-825a986958a6</onsuccess><processid>eacc4634-9985-4a1d-9773-8f79928708ee</processid></stage><stage stageid="4702c382-1a44-441c-9cd1-83281efd10ff" name="Worksheet Exists" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="efca1a70-2f20-4dda-b071-825a986958a6" name="Worksheet Exists?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Worksheet Exists]" /><ontrue>e804939a-8a40-4803-89cd-b10e57a97583</ontrue><onfalse>5d46a63f-e90b-4432-8c62-52d2e2380065</onfalse></stage><stage stageid="e804939a-8a40-4803-89cd-b10e57a97583" name="Move Named Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="text" name="SourceWorksheet" expr="[Source Worksheet]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess><code><![CDATA[Dim dBook, sSheet As Object
Dim p As Integer

Try

dBook = GetWorkbook(Handle, DestinationWorkbook)
sSheet = GetWorksheet(Handle, SourceWorkbook, SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(dBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="38d819d9-2dec-4ae8-afe3-76da44096935" name="End2" type="End"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cb823085-c462-43b7-81d0-3ad7f1e026dd" name="Success" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="81e05f5d-ac29-4885-b6cd-fd5a308fcc44" name="Message" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="270" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="764ea205-800b-4ab5-adc1-273a46ad93b6" name="Success?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="195" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>38d819d9-2dec-4ae8-afe3-76da44096935</ontrue><onfalse>65eda7a6-ce00-4372-9fc9-26931328aba4</onfalse></stage><stage stageid="7b25db9b-d103-4ba0-a8a5-468a16e50dd7" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="345" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="87c0d87a-ef13-4eb7-8e10-085ab67dc0a0" name="Destination Position" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3e46008f-172e-42b3-b4b3-e7221f0ef6d8" name="Copy and Paste Worksheet Range" type="SubSheetInfo"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="979c420e-1748-448e-9334-e238c47503a1" name="Copy" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5d46a63f-e90b-4432-8c62-52d2e2380065" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Source worksheet not found&quot;" /></stage><stage stageid="b470a541-1a6d-4c08-936a-94d2c6c99aa8" name="Start" type="Start"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Source Workbook" stage="Source Workbook" /><input type="text" name="Source Worksheet" stage="Source Worksheet" /><input type="text" name="Source Range" stage="Source Range" /><input type="text" name="Destination Workbook" stage="Destination Workbook" /><input type="text" name="Destination Worksheet" stage="Destination Worksheet" /><input type="text" name="Destination Range" stage="Destination Range" /></inputs><onsuccess>11afaed8-560c-4915-b3eb-04f45158a941</onsuccess></stage><stage stageid="b4598457-7e50-432e-ae29-7d081367e298" name="Source Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc6e0465-0f54-401c-964f-974f43802264" name="Source Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18b0fe7d-0b86-4fd0-bcd9-6c80841ae464" name="Destination Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0366fbb1-1c68-4466-87cb-760d499b4cdd" name="Worksheet Exists" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11afaed8-560c-4915-b3eb-04f45158a941" name="Paste Worksheet" type="Code"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Source Range" expr="[Source Range]" /><input type="text" name="Destination Workbook" expr="[Destination Workbook]" /><input type="text" name="Destination Worksheet" expr="[Destination Worksheet]" /><input type="text" name="Destination Range" expr="[Destination Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>8136ae2b-8fb0-4945-8016-b5b9eae4c2d2</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, destination, cells, cell As Object

Try

sw = GetWorkbook(Handle, Source_Workbook)
dw = GetWorkbook(Handle, Destination_Workbook)

ss = GetWorksheet(Handle, Source_Workbook, Source_Worksheet)
ds = GetWorksheet(Handle, Destination_Workbook, Destination_Worksheet)

sw.Activate()
ss.Activate()
excel = ss.Application
sheet = excel.ActiveSheet
cell = excel.ActiveCell

If Source_Range="" Then
	cells = sheet.Cells
	Destination_Range = "A1"
Else
	cells = sheet.Range(Source_Range)
End If

cells.Select()
source = excel.Selection
source.Copy()
cell.Select()

dw.Activate()
ds.Activate()
sheet = excel.ActiveSheet
cell = excel.ActiveCell
destination = sheet.Range(Destination_Range)
destination.Select()
sheet.Paste()
cell.Select()

My.Computer.Clipboard.Clear()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	destination = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="70304b7a-b551-4a52-b52d-924f11d328a7" name="End2" type="End"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="61bc4bd1-c8ab-4fe3-993e-a7e30fcaf9ef" name="Success" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2e558b45-ad3b-459a-978c-048e7f555c4a" name="Message" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="270" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8136ae2b-8fb0-4945-8016-b5b9eae4c2d2" name="Success?" type="Decision"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>70304b7a-b551-4a52-b52d-924f11d328a7</ontrue><onfalse>470e1a49-496c-497e-b59a-537f730059cb</onfalse></stage><stage stageid="470e1a49-496c-497e-b59a-537f730059cb" name="Exception" type="Exception"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="2a17d158-14b5-4cec-aa84-2b6789585973" name="Destination Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="124d4f6c-b7b5-4935-8d7a-71a253571261" name="Handle" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b950e637-fb25-4932-b970-65e4ee21dd1d" name="Source Worksheet Number?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="IsNumber([Source Worksheet])" /><ontrue>eba296d1-0f89-4c61-892c-b25b40f3f618</ontrue><onfalse>9ad740a0-b0e5-483c-9247-2b766533c852</onfalse></stage><stage stageid="8b56215b-b4e5-4a95-a49d-179871dd1d2b" name="Move Numbered Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="number" name="SourceWorksheet" expr="[Source Worksheet Number]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e9db38cf-4c64-49fa-a46b-f2dfa31dfe18</onsuccess><code><![CDATA[Dim sBook, dBook As Object
Dim sSheet As Object
Dim p As Integer

Try

sBook = GetWorkbook(Handle, SourceWorkbook)
dBook = GetWorkbook(Handle, DestinationWorkbook)

sSheet = sBook.Worksheets(SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(sBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sBook = Nothing
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="e9db38cf-4c64-49fa-a46b-f2dfa31dfe18" name="anchor7" type="Anchor"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="195" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess></stage><stage stageid="65eda7a6-ce00-4372-9fc9-26931328aba4" name="Copy?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="240" y="195" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Copy]" /><ontrue>7b25db9b-d103-4ba0-a8a5-468a16e50dd7</ontrue><onfalse>32d3772b-fe03-4a13-a415-62b4fdd5fa8f</onfalse></stage><stage stageid="32d3772b-fe03-4a13-a415-62b4fdd5fa8f" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to move worksheet: &quot; &amp; [Message]" /></stage><stage stageid="eba296d1-0f89-4c61-892c-b25b40f3f618" name="Source Workbook Number" type="Calculation"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8b56215b-b4e5-4a95-a49d-179871dd1d2b</onsuccess><calculation expression="[Source Worksheet]" stage="Source Worksheet Number" /></stage><stage stageid="2cc989f3-1c41-4289-98fb-383b0c88ed74" name="Source Worksheet Number" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09bbef8a-09b2-4a43-925d-b1a0b88e692b" name="Get Worksheet Position" type="SubSheetInfo"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4235fac3-2295-4511-828e-090e9c888d38" name="End" type="End"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Position" stage="Position" /></outputs></stage><stage stageid="46d026ab-934f-4e60-8d1f-68344ac1b103" name="Handle" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3d97151-6742-41e9-9b9a-08ce6b9700d1" name="Workbook" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7ec78a25-f322-4161-8872-54815ffbc0f0" name="Worksheet" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ccd25c1-379e-41cf-92fd-2d02ac1fc7ac" name="Start" type="Start"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>244c946c-e677-4da7-8d5a-de244ec07eea</onsuccess></stage><stage stageid="244c946c-e677-4da7-8d5a-de244ec07eea" name="Get Worksheet Position" type="Code"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Position" stage="Position" /></outputs><onsuccess>27d60ef1-833c-44f5-b5ab-0aefb2c0581c</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets
Position = ws(Worksheet).Index

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="f13a2dde-4da4-4811-a0dd-f3f0bb009354" name="Position" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32b13d14-acc8-406c-8d15-9ffdc7355c5d" name="Source Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fa73a8e-f525-4d57-a0ff-9df54a1d2d63" name="Destination Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f1da6ce-caa1-4a5c-b622-70602b8ad49e" name="Select" type="SubSheetInfo"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30e9f460-bd3e-4273-bb7c-77fedbfe445f" name="End" type="End"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a24031db-2c21-4624-9a0b-6643f3e75247" name="Handle" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa9504d1-c2d1-49a6-a6f2-cf95da7eeb12" name="Workbook" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcba2fd7-c2e3-4661-a6c4-be512624d70c" name="Worksheet" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f78616ed-e974-46dd-ace5-c44a1b800c11" name="Start" type="Start"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Cell Reference" stage="Cell Reference" /></inputs><onsuccess>34677bae-38d3-4518-917f-c883f9c1677d</onsuccess></stage><stage stageid="92300230-c4b8-4530-9378-f98dfd556895" name="Cell Reference" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34677bae-38d3-4518-917f-c883f9c1677d" name="Select Cells" type="Code"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Reference" expr="[Cell Reference]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>2cb73eba-be13-4568-a11a-02f3a20b9dfe</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
range = sheet.Range(Reference)
range.Select()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
	excel = Nothing
	sheet = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="2cb73eba-be13-4568-a11a-02f3a20b9dfe" name="Success?" type="Decision"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>30e9f460-bd3e-4273-bb7c-77fedbfe445f</ontrue><onfalse>7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4</onfalse></stage><stage stageid="7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4" name="Exception" type="Exception"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to select row: &quot; &amp; [Message]" /></stage><stage stageid="3e5f45b4-d1b1-4dc1-8be0-29a9b4a55c53" name="Success" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34efe5b1-fcdd-4221-a651-006b1110ebbd" name="Message" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8189dfa8-421a-45da-9d7c-26ac377bc514" name="Delete" type="SubSheetInfo"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a3f17004-6131-48f2-b0a8-e602f24b599e" name="End" type="End"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6d0b1914-39fd-4e17-b7b4-55faafd45af7" name="Handle" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="75588f1d-b4d2-4c8c-a51f-61c822a68abb" name="Workbook" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad8ce293-a3a3-43ca-9b8f-1d680fbdc03e" name="Start" type="Start"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Shift (Left or Up)" stage="Shift" /></inputs><onsuccess>97daebd3-2794-4944-af67-9698bbaa77b3</onsuccess></stage><stage stageid="57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd" name="Delete Selection" type="Code"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>6f1da154-330d-490b-b615-df266c6767fa</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Delete(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="6f1da154-330d-490b-b615-df266c6767fa" name="Success?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>a3f17004-6131-48f2-b0a8-e602f24b599e</ontrue><onfalse>bb18bdc9-f544-4157-a6ba-e289c8f33c43</onfalse></stage><stage stageid="bb18bdc9-f544-4157-a6ba-e289c8f33c43" name="Exception" type="Exception"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="d0c4907b-2b85-424d-a6ef-8bcfb43d3f72" name="Success" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9dbebe22-4f86-499f-8f29-155baf2cc42d" name="Message" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2110b138-01f6-47af-befd-7a71637b5844" name="Shift" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97daebd3-2794-4944-af67-9698bbaa77b3" name="Shift Left?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim(Upper([Shift]))=&quot;LEFT&quot;" /><ontrue>6e608312-7a91-4039-8f0a-90ccaac7d3cc</ontrue><onfalse>8a8e9a33-5eca-485a-adeb-e5a43592d6d4</onfalse></stage><stage stageid="6e608312-7a91-4039-8f0a-90ccaac7d3cc" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4159" stage="Shift Type" /></stage><stage stageid="4095b231-4d4f-4c98-b74d-6134fb63b9af" name="Shift Type" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8e9a33-5eca-485a-adeb-e5a43592d6d4" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4162" stage="Shift Type" /></stage><stage stageid="27122991-d4c6-4811-a366-7fd47a11da5c" name="Copy" type="SubSheetInfo"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bba0e0d4-6894-469c-a9b8-1f07855dadc9" name="End" type="End"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="364a6306-d747-4c70-84ae-4128d8938fbc" name="Handle" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f0139001-74d1-4ab8-a517-4329434df1e5" name="Workbook" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58d750a5-2e0e-4aaa-951a-76aaf6b973da" name="Start" type="Start"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /></inputs><onsuccess>d8005fde-9fe5-47f9-a980-e4beae15815a</onsuccess></stage><stage stageid="a8acd5cc-0955-4896-b87a-80091b060926" name="Success?" type="Decision"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>bba0e0d4-6894-469c-a9b8-1f07855dadc9</ontrue><onfalse>6ceb186e-fea0-48a8-a72d-f104f83699c6</onfalse></stage><stage stageid="6ceb186e-fea0-48a8-a72d-f104f83699c6" name="Exception" type="Exception"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy selection: &quot; &amp; [Message]" /></stage><stage stageid="4f25dc7f-bd6f-495d-90e7-0d561dba2662" name="Success" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8da6c3-ceed-4a32-8e4d-473b53a57602" name="Message" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8005fde-9fe5-47f9-a980-e4beae15815a" name="Copy Selection" type="Code"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>a8acd5cc-0955-4896-b87a-80091b060926</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Copy

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="044c591e-e63e-4f13-80b8-de4217a78b3b" name="Paste" type="SubSheetInfo"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1ebf6405-9e3a-45f8-be9c-fdd70f254b34" name="End" type="End"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3f23548e-a9f9-48c6-93c3-fbd8fa4f8d8d" name="Handle" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0acf7ad6-162d-4e2d-9a03-a6ebc54eb526" name="Workbook" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d4b5681-cffa-432d-be94-08d4ddf16986" name="Start" type="Start"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="flag" name="Values Only" stage="Values Only" /></inputs><onsuccess>0d27a545-71b3-4a27-843b-8ed69b1648ce</onsuccess></stage><stage stageid="360c1bdb-1960-4486-ad05-8ec4485ef0ec" name="Success?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>1ebf6405-9e3a-45f8-be9c-fdd70f254b34</ontrue><onfalse>4830e942-edaf-4bd2-8922-9cffafc084ad</onfalse></stage><stage stageid="4830e942-edaf-4bd2-8922-9cffafc084ad" name="Exception" type="Exception"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to paste from clipboard: &quot; &amp; [Message]" /></stage><stage stageid="77b051c2-e570-49a3-8708-b42785a2517f" name="Success" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da93fc46-495b-4511-a724-a1cc7d70cffa" name="Message" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="195" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="24bf06a1-fd8f-4cd3-bab6-e05552f8bdba" name="Paste Values" type="Code"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Paste Option" expr="[Paste Option]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>360c1bdb-1960-4486-ad05-8ec4485ef0ec</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.PasteSpecial(Paste:=Paste_Option, Operation:=-4142, SkipBlanks:=False, Transpose:=False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
   range = Nothing
End Try]]></code></stage><stage stageid="ba04d5a5-b0f7-4979-af44-2f0fee5237f9" name="Write To Clipboard" type="SubSheetInfo"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1587c068-8225-4476-b636-9403f8acd84a" name="Start" type="Start"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Value" stage="Value" /></inputs><onsuccess>2279ba0c-3963-48f8-b813-4b0f53f47471</onsuccess></stage><stage stageid="a82e0657-86e9-4273-bd0f-2065d5f70254" name="End" type="End"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="eda7181f-a720-4b63-9d69-86221881d965" name="Value" type="Data"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2279ba0c-3963-48f8-b813-4b0f53f47471" name="Write To Clipboard" type="Code"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Value" expr="[Value]" /></inputs><onsuccess>a82e0657-86e9-4273-bd0f-2065d5f70254</onsuccess><code><![CDATA[
My.Computer.Clipboard.Clear()
My.Computer.Clipboard.SetText(Value)]]></code></stage><stage stageid="79b62074-ec0d-49c6-a258-61823cc8a849" name="Values Only" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0d27a545-71b3-4a27-843b-8ed69b1648ce" name="Values Only?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Values Only]" /><ontrue>5bd5a242-a414-4d49-b093-0eb8d3978f8a</ontrue><onfalse>f98e8dcf-bff1-418a-9963-4878022c7391</onfalse></stage><stage stageid="f98e8dcf-bff1-418a-9963-4878022c7391" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4104" stage="Paste Option" /></stage><stage stageid="8e80a8c9-867f-46fa-ace9-d251af38eeed" name="Paste Option" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd5a242-a414-4d49-b093-0eb8d3978f8a" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4163" stage="Paste Option" /></stage><stage stageid="7f2dfa02-938c-4179-9e22-216057d33f43" name="Cut" type="SubSheetInfo"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f2f20301-ebd9-4fbd-9b94-ca2074e69294" name="End" type="End"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d29233ea-0e94-44a4-864c-f32568e42c4b" name="Handle" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59232dab-20a4-4e84-8a43-e2016ef6a74c" name="Workbook" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d6c212b-fd48-44cf-a931-8c99060d29cc" name="Start" type="Start"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /></inputs><onsuccess>3dcf0167-85d1-4170-b214-86784cbcab65</onsuccess></stage><stage stageid="581ece97-ebdc-4855-8fdf-45290b4e587d" name="Success?" type="Decision"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>f2f20301-ebd9-4fbd-9b94-ca2074e69294</ontrue><onfalse>797b7b44-cd61-4d3c-8874-82e44868ea1b</onfalse></stage><stage stageid="797b7b44-cd61-4d3c-8874-82e44868ea1b" name="Exception" type="Exception"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to cut selection: &quot; &amp; [Message]" /></stage><stage stageid="3556655c-d270-4054-a989-b2f44854a7ba" name="Success" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9e9b9ba3-e800-4df7-bc87-db6b36f846c9" name="Message" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dcf0167-85d1-4170-b214-86784cbcab65" name="Cut Selection" type="Code"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>581ece97-ebdc-4855-8fdf-45290b4e587d</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Cut

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="fc13a15a-74aa-47dc-af68-38bea19af981" name="Protect Workbook" type="SubSheetInfo"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0e32102b-7c0a-4f3e-9fe7-cc267fede407" name="Handle" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03b0377d-35e5-4a7d-b16c-756d690843ee" name="Workbook" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1610a1c-3532-4a88-8732-39cbfb4495f4" name="Start" type="Start"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="password" name="Password" stage="Password" /></inputs><onsuccess>e47e5f86-b7d0-409e-bf2a-6673cf28bac7</onsuccess></stage><stage stageid="de93c65e-11ae-4507-b8bf-da3f09910f82" name="Password" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="e47e5f86-b7d0-409e-bf2a-6673cf28bac7" name="Protect Workbook" type="Code"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="password" name="Password" expr="[Password]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)
wb.Protect(Password, True, True)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="6a177cf9-5ec0-481d-84e9-c5d72177038d" name="Hide Worksheet" type="SubSheetInfo"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0cc70266-582a-410c-9c3a-29ff9dfb795e" name="Handle" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cf25a3a-b4dd-4b80-8339-06b9d63e56e6" name="Workbook" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8889824-2e30-472c-bb9a-4daad82560f3" name="Worksheet" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2d9d6921-9f68-4152-be57-8b0df6472eda" name="Start" type="Start"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>298fe33e-bd86-4109-8540-f1abe8d02eb8</onsuccess></stage><stage stageid="4a51d886-d307-4904-8ce4-98191c734a17" name="End" type="End"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0" name="Success?" type="Decision"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>4a51d886-d307-4904-8ce4-98191c734a17</ontrue><onfalse>fbeb4a74-fc5f-431f-b150-15549afc2a22</onfalse></stage><stage stageid="fbeb4a74-fc5f-431f-b150-15549afc2a22" name="Exception" type="Exception"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to protect workbook: &quot; &amp; [Message]" /></stage><stage stageid="298fe33e-bd86-4109-8540-f1abe8d02eb8" name="Hide Worksheet" type="Code"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>66ad2075-9b87-44be-9c6d-0a702d752f57</onsuccess><code><![CDATA[Dim ws As Object

Try

ws = GetWorkSheet(Handle, Workbook, Worksheet)
ws.Visible = False

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	ws = Nothing
End Try]]></code></stage><stage stageid="c2e5c7e9-93a1-489e-a870-523042f050f1" name="End" type="End"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="66ad2075-9b87-44be-9c6d-0a702d752f57" name="Success?" type="Decision"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>c2e5c7e9-93a1-489e-a870-523042f050f1</ontrue><onfalse>7dca362f-2e45-443b-adc7-9075f02fc717</onfalse></stage><stage stageid="7dca362f-2e45-443b-adc7-9075f02fc717" name="Exception" type="Exception"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to protehide worksheet: &quot; &amp; [Message]" /></stage><stage stageid="c3b30035-3883-4740-9cf0-49e967ad6306" name="Success" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff6900f6-3524-4b24-be71-4d12c2d4c77e" name="Message" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cea8af9d-95ea-4c09-9932-adc8cc633db6" name="Success" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7888130-7082-4f05-8864-3f0709675831" name="Message" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b9509a6-dfc6-4f25-9474-dba6e8b7ed20" name="Hide Other Worksheets" type="SubSheetInfo"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a81bb6df-46b8-4641-8531-802be8934741" name="Handle" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f349c5cb-454b-448c-b225-5c474ae4e52d" name="Workbook" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="999117c1-6fa6-4172-9512-78106c277a38" name="Worksheet" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6444d8d9-7f26-4eb5-ab31-c98706e6209a" name="Start" type="Start"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>c5ca2626-02e2-4413-9476-9958c1b7b717</onsuccess></stage><stage stageid="c5ca2626-02e2-4413-9476-9958c1b7b717" name="Hide Other Worksheets" type="Code"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>36529e74-e353-4cbd-b6ff-3591c0390efd</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)

For Each ws As Object In wb.Worksheets
	ws.Visible = (ws.Name = Worksheet)
Next

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="52e20387-128e-4f5c-b182-7d28a9005a71" name="End" type="End"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36529e74-e353-4cbd-b6ff-3591c0390efd" name="Success?" type="Decision"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>52e20387-128e-4f5c-b182-7d28a9005a71</ontrue><onfalse>c5840684-3348-4ee6-a024-dda79500a851</onfalse></stage><stage stageid="c5840684-3348-4ee6-a024-dda79500a851" name="Exception" type="Exception"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to hide worksheets: &quot; &amp; [Message]" /></stage><stage stageid="089eef49-c020-4aea-929e-4d1ae4282215" name="Success" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="370e2ccf-3010-44ea-9155-06babd5e856c" name="Message" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4996af5e-0cc1-4e24-aedf-20320350469e" name="Import CSV" type="SubSheetInfo"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4b14657-a0f4-4c85-9466-5146878dfbe7" name="Handle" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bbfe7495-0fef-4c22-a251-88166b8485d4" name="Workbook" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3c0e661b-9b74-4d25-9a8b-1da52f957ed2" name="Worksheet" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8df3e95e-4a03-4e0a-a649-37fb1d17ff41" name="Start" type="Start"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Destination Handle" stage="Handle" /><input type="text" name="Destination Workbook" stage="Workbook" /><input type="text" name="Destination Worksheet" stage="Worksheet" /><input type="text" name="Destination Range" stage="Range" /><input type="text" name="Source File Path" stage="Path" /><input type="text" name="Source Text Qualifier" stage="Qualifier" /></inputs><onsuccess>a09cfa98-b04d-472f-ad84-87e6a0bdb011</onsuccess></stage><stage stageid="7803cce6-3095-4d46-9cd2-793181eb080d" name="Import CSV" type="Code"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /><input type="text" name="Path" expr="[Path]" /><input type="number" name="Qualifier" expr="[Qualifier Code]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>91f84fae-ca36-4b8b-8221-bc3e95cd2ef3</onsuccess><code><![CDATA[Dim dw, ds, dr, qt As Object

Try

dw = GetWorkbook(Handle, Workbook)
ds = GetWorksheet(Handle, Workbook, Worksheet)
dr = ds.Range(Range)
qt = ds.QueryTables.Add(Connection:="TEXT;" & Path, Destination:=dr)

With qt
	.FieldNames = True
	.RowNumbers = False
	.FillAdjacentFormulas = False
	.PreserveFormatting = True
	.RefreshOnFileOpen = False
	.RefreshStyle = 1 'xlInsertDeleteCells
	.SavePassword = False
	.SaveData = True
	.AdjustColumnWidth = True
	.RefreshPeriod = 0
	.TextFilePromptOnRefresh = False
	.TextFilePlatform = 437
	.TextFileStartRow = 1
	.TextFileParseType = 1 'xlDelimited
	.TextFileTextQualifier = Qualifier
	.TextFileConsecutiveDelimiter = False
	.TextFileTabDelimiter = False
	.TextFileSemicolonDelimiter = False
	.TextFileCommaDelimiter = True
	.TextFileSpaceDelimiter = False
	.TextFileTrailingMinusNumbers = True
End With
qt.Refresh(False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dw = Nothing
	ds = Nothing
	dr = Nothing
	qt = Nothing
End Try]]></code></stage><stage stageid="bfe990bf-be29-4c21-ac04-96a798ab1827" name="End" type="End"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="91f84fae-ca36-4b8b-8221-bc3e95cd2ef3" name="Success?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="210" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>bfe990bf-be29-4c21-ac04-96a798ab1827</ontrue><onfalse>6aaf6a41-be76-442d-9c2b-06905c4e0355</onfalse></stage><stage stageid="6aaf6a41-be76-442d-9c2b-06905c4e0355" name="Exception" type="Exception"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="225" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to import CSV: &quot; &amp; [Message]" /></stage><stage stageid="af967b8b-4ec8-4202-ac07-6acbf9d12d46" name="Success" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5335f808-6164-4249-9a2c-682294b9834c" name="Message" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="955e0188-d711-476b-b15b-1362ba3b0ea4" name="Path" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cef84711-b0a0-4f04-a09d-a6e9637ea2cb" name="Qualifier" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a09cfa98-b04d-472f-ad84-87e6a0bdb011" name="Double Quote Qualifier?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Qualifier]=&quot;&quot;&quot;&quot;" /><ontrue>b0e18e5b-791a-492a-b6c6-112ed2cdf10f</ontrue><onfalse>6e036392-ff83-4dfa-94fe-ff1ed03cd9bc</onfalse></stage><stage stageid="b0e18e5b-791a-492a-b6c6-112ed2cdf10f" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="1" stage="Qualifier Code" /></stage><stage stageid="f9eb7145-ee8c-41cc-8ea2-2417adbcd435" name="Qualifier Code" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc2b8ffb-c597-4ede-8134-1cc80a2c3293" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="-4142" stage="Qualifier Code" /></stage><stage stageid="6e036392-ff83-4dfa-94fe-ff1ed03cd9bc" name="Note2" type="Note"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><narrative>Assume no text qualifier</narrative><display x="15" y="60" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fc2b8ffb-c597-4ede-8134-1cc80a2c3293</onsuccess></stage><stage stageid="70744683-2ca9-4e9a-89b9-194945f98e32" name="Range" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c8e00b5-ec48-479b-8abf-6a6658752cb5" name="Get Worksheet Name" type="SubSheetInfo"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2af2843d-00f3-464f-ab67-305ae6ccf858" name="End" type="End"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Worksheet" stage="Worksheet" /></outputs></stage><stage stageid="26c465a5-f001-4ff8-ac21-28437489e85f" name="Handle" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2de7e6b6-6118-4b3f-ba2b-179ba64d95d8" name="Workbook" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee8f628-7829-42f7-ac8c-672d78be654f" name="Worksheet" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c752debc-3eea-4935-a460-f8eb77039d5d" name="Start" type="Start"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="number" name="Worksheet Position" stage="Position" /></inputs><onsuccess>ba712112-b784-4f87-a7ff-5a8721aca35d</onsuccess></stage><stage stageid="ba712112-b784-4f87-a7ff-5a8721aca35d" name="Get Worksheet" type="Code"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Position" expr="[Position]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="Worksheet" stage="Worksheet" /></outputs><onsuccess>39f8ebfd-a1e8-4517-add5-653f475fe8eb</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets(Position)
Worksheet = ws.Name

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="2cbe9309-244f-45ae-8716-0d02bf738530" name="Position" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27d60ef1-833c-44f5-b5ab-0aefb2c0581c" name="Success?" type="Decision"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>4235fac3-2295-4511-828e-090e9c888d38</ontrue><onfalse>8edc5ff8-0139-409d-ba63-7f23bf726964</onfalse></stage><stage stageid="8edc5ff8-0139-409d-ba63-7f23bf726964" name="Exception" type="Exception"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to get worksheet position: &quot; &amp; [Message]" /></stage><stage stageid="39f8ebfd-a1e8-4517-add5-653f475fe8eb" name="Success?" type="Decision"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>2af2843d-00f3-464f-ab67-305ae6ccf858</ontrue><onfalse>636399b4-ec2b-41a7-ac41-27e98637df4c</onfalse></stage><stage stageid="636399b4-ec2b-41a7-ac41-27e98637df4c" name="Exception" type="Exception"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to get worksheet name: &quot; &amp; [Message]" /></stage><stage stageid="69b153d1-9bd9-4c51-8b96-d45c1112bbfb" name="Success" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="464ca930-cf54-4147-8041-1007cc2416b6" name="Message" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="def46f81-3f9f-421d-91cf-f12583e956d3" name="Success" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1195aa37-1cbe-4f02-9d00-c39f3e304cfc" name="Message" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5222003b-5cb9-4669-bc35-96d41b028249" name="Insert" type="SubSheetInfo"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7c868cff-a594-49f6-bde7-fc3ba2cd17c6" name="End" type="End"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6c34b4fa-4824-48bf-ae2a-b709a25cec17" name="Handle" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dc53e03-3a4f-4ca9-ba70-17573564d976" name="Workbook" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89909450-cca0-4546-bbbc-32cbd4c609bc" name="Start" type="Start"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Shift (Left or Up)" stage="Shift" /></inputs><onsuccess>1f31ede9-3b32-4aaf-9b55-573cb227a850</onsuccess></stage><stage stageid="dc1f9d40-b099-44c3-a2c1-e782413b0914" name="Insert" type="Code"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>be039ecb-6427-4a80-8a91-9b69561fc2de</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Insert(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="be039ecb-6427-4a80-8a91-9b69561fc2de" name="Success?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>7c868cff-a594-49f6-bde7-fc3ba2cd17c6</ontrue><onfalse>741cc1d1-3936-4201-ad74-e95993e64b92</onfalse></stage><stage stageid="741cc1d1-3936-4201-ad74-e95993e64b92" name="Exception" type="Exception"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="aac1165a-4574-4834-a68e-18db8cdd0216" name="Success" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52ea365d-8434-45cb-97ba-cd7c741b7c7c" name="Message" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd2ee59b-4044-4f2c-8439-05e1a9b23c7d" name="Shift" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f31ede9-3b32-4aaf-9b55-573cb227a850" name="Shift Left?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim(Upper([Shift]))=&quot;LEFT&quot;" /><ontrue>594ef012-6d63-4256-a43c-dd84c172ad15</ontrue><onfalse>21ff25a4-b431-43fb-af46-02fff92627e7</onfalse></stage><stage stageid="594ef012-6d63-4256-a43c-dd84c172ad15" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4159" stage="Shift Type" /></stage><stage stageid="c07375e4-4e0d-4a0d-b7b2-d1bab9884769" name="Shift Type" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="21ff25a4-b431-43fb-af46-02fff92627e7" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4162" stage="Shift Type" /></stage></process></object>
        <object id="e559fb86-9b63-4e0b-9399-972227189995" name="MS Word VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="MS Word VBO" version="7.1.0.62280" bpversion="7.3.0.9110" narrative="The VBO replacement for the Common Automation Word business object" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>5ec304cd-35d9-4d36-a1e8-9ee22ab08798</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="e283bce6-2b3d-4a05-8d79-05e52588fccd" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="349117e1-607c-4bb6-a911-5074cb58aca0" type="Normal" published="True"><name>Add Table Row</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8ddb9b98-da89-468a-b5a4-5eedf5a204ee" type="Normal" published="True"><name>Set Table Cell Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="63dcd298-f559-4625-834f-f728c3391345" type="Normal" published="True"><name>Get Table Cell Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ab5706df-5945-47c6-ad85-98b64e6966f8" type="Normal" published="True"><name>Get Highlighted Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8e6deaaf-17ce-4784-b335-a9405da05140" type="Normal" published="True"><name>Replace Highlighted Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e945fdd1-12ee-49a3-828b-f210f597b9ea" type="Normal" published="True"><name>Select All</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0ad7469f-a55c-48de-9ec9-7b3b429c91b1" type="Normal" published="True"><name>Copy to Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e3194549-4702-4196-8e84-02c9414289f2" type="Normal" published="True"><name>Paste from Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="479d48e5-45be-4252-99e6-7685eacb95f0" type="Normal" published="True"><name>Clear Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a46a3a18-37e6-4658-bf90-5612c2db5da4" type="Normal" published="True"><name>Find Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="014a9077-47d7-46c4-949a-9dd622e2aa55" type="Normal" published="True"><name>Select Next Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5c26c59-2398-4789-8c68-a82d3e675364" type="Normal" published="True"><name>Set Selected Cell Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="25894c29-7a40-4c69-8562-7b0ec251e307" type="Normal" published="True"><name>Select Next Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0982104d-2763-42e8-a690-69c44d9a4046" type="Normal" published="True"><name>Set Selected Checkbox</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc779662-1e7e-4438-b1c5-1106c851c3a3" type="Normal" published="True"><name>Get Footer Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b5d196b4-36af-4e29-991f-b6985b43dce2" type="Normal" published="False"><name>CheckFileExists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="293ea206-e215-4639-a1d8-85d6fad4c062" type="Normal" published="False"><name>CheckInstanceHandle</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="31f689ac-b51a-4af0-bc24-9a36bedf0b07" type="Normal" published="True"><name>Create Instance</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fab67da7-2774-4aba-b65c-e3cc6c20dac5" type="Normal" published="True"><name>Attach Instance</name><view><camerax>15</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae" type="Normal" published="True"><name>Detach Instance</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="89550223-4597-48e5-a1c2-c61c726899cf" type="Normal" published="True"><name>Set Current Instance</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9ba034bb-3325-48c1-8185-8a95ba3aa7b2" type="Normal" published="True"><name>Open</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a12d6007-5275-4a01-a53e-1fe566ccb6eb" type="Normal" published="True"><name>Close</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e56148e-8eb8-411a-94ac-081b722cf098" type="Normal" published="True"><name>Show</name><view><camerax>0</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2a382c59-0507-47f8-82d5-1ca1ae93d305" type="Normal" published="True"><name>Hide</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d064a183-869e-4269-af78-e8278fcf2a75" type="Normal" published="True"><name>Exit</name><view><camerax>46</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="df9a2d09-7817-4c60-9dfd-db0023481f74" type="Normal" published="True"><name>Create Document</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0034274b-9238-49f1-9208-489c5c1f0440" type="Normal" published="True"><name>Save As</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a54f1cbc-a023-4c2d-bf17-23169a3e685d" type="Normal" published="True"><name>ExportPDF</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="84295aaa-378f-41c0-892b-81b1fa1e43c7" type="Normal" published="True"><name>Get Body</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ec22d5e7-f140-425a-bbaa-7c1da03813c4" type="Normal" published="True"><name>Type Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="658b8a32-bfce-4df2-bfdc-a9525bc2979e" type="Normal" published="True"><name>Update Bookmark</name><view><camerax>-142</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="60cba9c8-4c53-48b7-b25a-56d6603faf04" name="Start" type="Start"><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3fa025dc-32a8-4ab7-b052-cc5cd447a2cf</onsuccess></stage><stage stageid="3fa025dc-32a8-4ab7-b052-cc5cd447a2cf" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7d99e0f7-64a5-47c3-820f-a9c87bcbe9c5" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Collections.Generic</import><import>Microsoft.VisualBasic</import><import>System.IO</import><import>System.Runtime.InteropServices</import></imports><language>visualbasic</language><globalcode><![CDATA[
]]></globalcode><code><![CDATA[' The 'selected' instance of word.
' This is updated on any access of an instance (either adding a new
' instance or getting one)
'
Private CurrentInstance As Object

' Map of instances keyed against the handles which represent them.
'
Private HandleMap As Dictionary(Of Integer, Object)

' Map of handles keyed against the instances they represent.
' Here to ensure we don't assign multiple handles to a single
' instance and bring about a memory leak
'
Private InstanceMap As Dictionary(Of Object, Integer)

' Constructor - this just initialises the collections which map
' the word instances to handles and vice versa.
Public Sub New()

	Me.HandleMap = New Dictionary(Of Integer, Object)()
	Me.InstanceMap = New Dictionary(Of Object, Integer)()

End Sub

' Gets the handle for a given instance
'
' If the instance is not yet held, then it is added to the 
' 	map and a handle is assigned to it. It is also set as the
' 	'current' instance, accessed with a handle of zero in the
' 	below methods.
'
' Either way, the handle which identifies the instance is returned
'
' @param Instance The instance for which a handle is required
'
' @return The handle of the instance
Protected Function GetHandle(Instance As Object) As Integer

	If Instance Is Nothing Then
		Throw New ArgumentNullException("Tried to add an empty instance")
	End If

	' Check if we already have this instance - if so, return it.
	If InstanceMap.ContainsKey(Instance) Then
		CurrentInstance = Instance
		Return InstanceMap(Instance)
	End If

	Dim key as Integer
	For key = 1 to Integer.MaxValue
		If Not HandleMap.ContainsKey(key)
			HandleMap.Add(key, Instance)
			InstanceMap.Add(Instance, key)
			Me.CurrentInstance = Instance
			Return key
		End If
	Next key

	Return 0

End Function

' Gets the instance corresponding to the given handle, setting
' 	the instance as the 'current' instance for future calls
'
' A value of 0 will provide the 'current' instance, which
' 	is set each time an instance is added or accessed.
'
' This will return Nothing if the given handle does not
' correspond to a registered instance, or if the current
' instance was closed and the reference has not been updated.
'
' @param Handle The handle representing the instance required,
' 		or zero to get the 'current' instance.
Protected Function GetInstance(Handle As Integer) As Object

	Dim Instance As Object = Nothing
	
	If Handle = 0 Then
		If CurrentInstance Is Nothing Then
			' Special case - getting the current instance when the
			' instance is not set, try and get a current open instance.
			' If none there, create a new one and assign a handle as if
			' CreateInstance() had been called
		'	Try
		'		Instance = GetObject(,"Word.Application")
		'	Catch ex as Exception ' Not running
		'		Instance = Nothing
		'	End Try
		'	If Instance Is Nothing Then
				Create_Instance(Handle)
				' Instance = CreateObject("Word.Application")
				' Force the instance into the maps.
				' GetHandle(Instance)
				' CurrentInstance should now be set.
				' If it's not, we have far bigger problems
		'	End If
		End If
		Return CurrentInstance
	End If
	
	If Not HandleMap.ContainsKey(Handle)
            Throw New ArgumentException("A valid attachment to the application cannot been detected. Please check that Blue Prism is attached to an instance of the application.")
	End If

	Instance = HandleMap(Handle)
	If Not Instance Is Nothing Then
		CurrentInstance = Instance
	End If
	Return Instance

End Function

' Gets the document in the given instance with the given name.
'
' @param Handle The handle representing the instance which holds the document
'
' @param Name The name of the document on the instance
'
' @return The object representing the document defined
Protected Function GetDocument(Handle As Integer, Name as String) As Object

	Dim doc as Object = Nothing
	If String.IsNullOrEmpty(Name) Then
		doc = GetInstance(Handle).ActiveDocument
		If doc Is Nothing ' We need to create a deafult workbook
			'doc = NewDocument(Handle)
		End If
		Return doc
	Else
		Return GetInstance(Handle).Documents(Name)
	End If

End Function]]></code></stage><stage stageid="3db4823c-cb33-410c-a5b4-0457287ea928" name="Clean Up" type="SubSheetInfo"><subsheetid>e283bce6-2b3d-4a05-8d79-05e52588fccd</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ffe1c4e5-db7e-48da-b754-89d06195c6f3" name="Start" type="Start"><subsheetid>e283bce6-2b3d-4a05-8d79-05e52588fccd</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>923ee3cf-37bc-426e-829d-e591ad107565</onsuccess></stage><stage stageid="923ee3cf-37bc-426e-829d-e591ad107565" name="End" type="End"><subsheetid>e283bce6-2b3d-4a05-8d79-05e52588fccd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="87572a90-cbe5-4b41-931c-b4083da0a1bf" name="new" type="Note"><subsheetid>e283bce6-2b3d-4a05-8d79-05e52588fccd</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="339dd02a-a643-42ed-befd-3faa7d5a2759" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1bbb1c14-4990-47fd-8b73-630da57d702f" name="Create Instance" type="SubSheetInfo"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="12dfbbd0-3245-4078-ac90-1f65f7f3bb95" name="Start" type="Start"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>62dc3626-984b-4c4f-af3c-ade0a9242ff7</onsuccess></stage><stage stageid="699a02c3-30f3-4bdd-aa7d-2afc1110af20" name="End" type="End"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" stage="handle" /></outputs></stage><stage stageid="62dc3626-984b-4c4f-af3c-ade0a9242ff7" name="Create Instance" type="Code"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>699a02c3-30f3-4bdd-aa7d-2afc1110af20</onsuccess><code><![CDATA[
Dim word as Object = CreateObject("Word.Application")

' Create a GUID with which we can kill the instance later
' if we have to play hardball to get rid of it.
word.Caption = System.Guid.NewGuid().ToString().ToUpper()

handle = GetHandle(word)]]></code></stage><stage stageid="edda7cc0-1a94-49d6-a153-8fc888542e8c" name="handle" type="Data"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><display x="-180" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4b4d7331-72da-406d-82b7-23a7ed9ed828" name="Show" type="SubSheetInfo"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a23d8915-ce49-49b8-9796-859046f81b10" name="Start" type="Start"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>079aa539-1785-4099-82ef-7f679226a6ea</onsuccess></stage><stage stageid="e652822b-b3f6-4d8e-b67b-09f5a3fa03aa" name="End" type="End"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="079aa539-1785-4099-82ef-7f679226a6ea" name="CheckInstanceHandle" type="SubSheet"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>ae5c5f27-8330-46a8-a3dd-42c521b4acc9</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="ae5c5f27-8330-46a8-a3dd-42c521b4acc9" name="ShowInstance" type="Code"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>e652822b-b3f6-4d8e-b67b-09f5a3fa03aa</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = True]]></code></stage><stage stageid="ba182804-017d-4701-bee5-6ce4825d6a92" name="handle" type="Data"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="06f9c8b0-d782-4519-91eb-ef08a4ff69f4" name="CheckInstanceHandle" type="SubSheetInfo"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="55ae55da-a84e-4e04-89de-dd88ff6265f3" name="Start" type="Start"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>8380be40-583e-4e38-8bd2-f0d2ca89009c</onsuccess></stage><stage stageid="2b3b42b8-d366-4656-9b94-ab1b48254b80" name="End" type="End"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8380be40-583e-4e38-8bd2-f0d2ca89009c" name="Check Handle" type="Code"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="flag" name="HandleMissing" stage="HandleMissing" /></outputs><onsuccess>f28ac6b7-15d9-45f6-ab3a-54a0da21bbb3</onsuccess><code><![CDATA[
' Just ensure that the handle references a valid instance
HandleMissing = (GetInstance(handle) is Nothing)]]></code></stage><stage stageid="0e84f827-315e-40eb-b54b-12caa5d9fd69" name="handle" type="Data"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><display x="-150" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9f261599-10ff-401e-9119-62c9ac77151b" name="HandleMissing" type="Data"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><display x="-150" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f28ac6b7-15d9-45f6-ab3a-54a0da21bbb3" name="Is Handle Missing?" type="Decision"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[HandleMissing]" /><ontrue>6defa143-8947-48ef-935f-d36833614ef5</ontrue><onfalse>2b3b42b8-d366-4656-9b94-ab1b48254b80</onfalse></stage><stage stageid="6defa143-8947-48ef-935f-d36833614ef5" name="Bad Instance Handle" type="Exception"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><display x="180" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Bad Handle" detail="&quot;Handle: &quot; &amp; [handle] &amp; &quot; does not correspond to an Word Instance&quot;" /></stage><stage stageid="1d87bd3a-132a-464c-b2d6-1a4df635cd61" name="Hide" type="SubSheetInfo"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1e1ba28f-613b-4a07-95bb-ade2a24a01b8" name="Start" type="Start"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>39fb3f6f-2d7b-4840-991b-65f9fd1867a7</onsuccess></stage><stage stageid="b7e598b6-b68b-45da-b57a-2118e5a066ad" name="End" type="End"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="39fb3f6f-2d7b-4840-991b-65f9fd1867a7" name="CheckInstanceHandle" type="SubSheet"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>afd1178a-dd11-4a73-8833-2b92063173ef</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="afd1178a-dd11-4a73-8833-2b92063173ef" name="HideInstance" type="Code"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>b7e598b6-b68b-45da-b57a-2118e5a066ad</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = False]]></code></stage><stage stageid="315416bc-f192-4090-8a30-0fcec83584e2" name="handle" type="Data"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ddb83909-8dc6-44dc-af21-d21979561fb9" name="Get Body" type="SubSheetInfo"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><narrative>Gets the body text from the word document</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="150cb5f0-7bfe-4c3c-a660-2d6b49f4684f" name="Start" type="Start"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><loginhibit /><preconditions><condition narrative="The Word VBO is initialised and a Word instance has been created/attached to" /></preconditions><postconditions><condition narrative="The body text required is returned" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="start" narrative="The start of the text range within the body for which the text is required" stage="start" /><input type="number" name="finish" narrative="The finish of the text range within the body for which the text is required" stage="finish" /><input type="text" name="documentname" narrative="The name of the document for which the body text is required" stage="documentname" /><input type="number" name="handle" narrative="The handle to the Word instance in which the document is open" stage="handle" /></inputs><onsuccess>59561e94-639a-4c08-9a9f-8577d49b3064</onsuccess></stage><stage stageid="6fcd9de3-9aa2-4a55-8909-4c9b3c3b5095" name="End" type="End"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Body" narrative="The text of the main body of the word document" stage="result" /></outputs></stage><stage stageid="59561e94-639a-4c08-9a9f-8577d49b3064" name="CheckInstanceHandle" type="SubSheet"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>50ad6a4d-1b58-4aa1-9a88-0febc63521a1</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="50ad6a4d-1b58-4aa1-9a88-0febc63521a1" name="GetBody" type="Code"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="start" expr="[start]" /><input type="number" name="finish" expr="[finish]" /></inputs><outputs><output type="text" name="result" stage="result" /></outputs><onsuccess>6fcd9de3-9aa2-4a55-8909-4c9b3c3b5095</onsuccess><code><![CDATA[
	Dim doc as Object = GetDocument(handle,documentname)
	Dim range As Object
	range = doc.Range(start, finish)
   
	result = range.text()]]></code></stage><stage stageid="e6c5db5f-2ee8-4369-9025-e3f9241bc8d4" name="handle" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ad4dcca7-8cd7-47c7-82fb-b83871f144f8" name="Open" type="SubSheetInfo"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0b87086b-2216-4e74-974e-093cdf2d9e09" name="Start" type="Start"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" stage="filename" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>5fa65cf5-75fe-43d0-92fe-923c8f137803</onsuccess></stage><stage stageid="69723646-ad31-4957-9cc0-43fad959ba95" name="End" type="End"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="15" y="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Document Name" stage="documentname" /></outputs></stage><stage stageid="995ac807-707a-4f97-8b15-971f1f0405ac" name="Open Document" type="Code"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="15" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="documentname" /></outputs><onsuccess>69723646-ad31-4957-9cc0-43fad959ba95</onsuccess><code><![CDATA[
Dim doc as Object = GetInstance(handle).Documents.Open(filename)
name = doc.Name
doc.Activate()]]></code></stage><stage stageid="e6ecf65f-7aed-47de-a567-abf35f57babc" name="handle" type="Data"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><display x="-210" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="fde6d90a-3cf6-477b-a18b-dc38b1fc1cdd" name="filename" type="Data"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><display x="-210" y="135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fa65cf5-75fe-43d0-92fe-923c8f137803" name="CheckInstanceHandle" type="SubSheet"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="15" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>335a3eeb-4d99-496c-a3cd-3fdcb42bc742</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="335a3eeb-4d99-496c-a3cd-3fdcb42bc742" name="CheckFileExists" type="SubSheet"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="15" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>995ac807-707a-4f97-8b15-971f1f0405ac</onsuccess><processid>b5d196b4-36af-4e29-991f-b6985b43dce2</processid></stage><stage stageid="4cbcba43-cf87-49df-bd28-19033d4f390a" name="documentname" type="Data"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="-210" y="180" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fddb571a-d8ae-4d27-9b6c-0975f653eb71" name="CheckFileExists" type="SubSheetInfo"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ea423d51-6b2d-4452-88ad-7a8a645cbae8" name="Start" type="Start"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" stage="filename" /></inputs><onsuccess>8b0d6478-c375-442d-94bb-f7ce884ade8b</onsuccess></stage><stage stageid="8c76538f-0d1d-4285-aab0-5290485b46e3" name="End" type="End"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bf64d828-0cb5-42c2-89ea-1a3b319f4cc4" name="filename" type="Data"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><display x="-165" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3880fc08-9be7-4aff-a074-430ccdd3a128" name="fileexists" type="Data"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="-165" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8b0d6478-c375-442d-94bb-f7ce884ade8b" name="File Exists?" type="Code"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="flag" name="fileexists" stage="fileexists" /></outputs><onsuccess>ffe7ae9a-2f99-4074-8efa-307dbb5aeaf3</onsuccess><code><![CDATA[
fileexists = File.Exists(filename)]]></code></stage><stage stageid="ffe7ae9a-2f99-4074-8efa-307dbb5aeaf3" name="Does File Exist?" type="Decision"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[fileexists]" /><ontrue>8c76538f-0d1d-4285-aab0-5290485b46e3</ontrue><onfalse>29baa624-0519-491a-9b7f-e9cd67715da0</onfalse></stage><stage stageid="29baa624-0519-491a-9b7f-e9cd67715da0" name="File Not Found" type="Exception"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><display x="165" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="File Not Found" detail="&quot;File: &quot; &amp; [filename] &amp; &quot; does not exist or is not a file&quot;" /></stage><stage stageid="e1e7b560-c537-488d-8391-c097150f5969" name="documentname" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-210" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8466ca5-e4a8-4941-aa52-bb84a5bf4d87" name="result" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-180" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a9b30de-289c-4da8-9fbf-324b8bb8cdf8" name="start" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-90" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec2b207a-8af7-4a31-9483-bb3fcd6b8750" name="finish" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-105" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14b05ea9-71ec-46bf-bf16-0cb2c048a492" name="Save As" type="SubSheetInfo"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="49f07090-6e20-4208-9fb6-76a00bc71a63" name="Start" type="Start"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" stage="filename" /><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>4c19c96c-ff67-480d-bcdf-d9d18c62d3e2</onsuccess></stage><stage stageid="56c8c79f-0dda-4bc5-a9fe-eb7dc59e9940" name="End" type="End"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="documentname" stage="documentname" /></outputs></stage><stage stageid="4c19c96c-ff67-480d-bcdf-d9d18c62d3e2" name="CheckInstanceHandle" type="SubSheet"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>873547be-bfa6-4aee-b49e-b03ee4b10659</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="873547be-bfa6-4aee-b49e-b03ee4b10659" name="SaveAs" type="Code"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="text" name="newname" stage="documentname" /></outputs><onsuccess>56c8c79f-0dda-4bc5-a9fe-eb7dc59e9940</onsuccess><code><![CDATA[
	Dim doc as Object = GetDocument(handle,documentname)
	doc.SaveAs(filename)
	newname = doc.name]]></code></stage><stage stageid="b6243343-4d38-40b3-ac81-6044b590e61f" name="handle" type="Data"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d128fa5a-052f-49e3-b3d3-b2a10b0a555d" name="documentname" type="Data"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><display x="-210" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9664dacd-968c-462f-b852-1099ff8b3f6a" name="filename" type="Data"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><display x="-210" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb8df20e-d7cb-452c-acd2-3f04d8a9a78e" name="Exit" type="SubSheetInfo"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="110d847b-787a-4ad3-86f1-3a1a1ff5687c" name="Start" type="Start"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>f834329d-2a8f-4a5e-b021-bb8d752866a5</onsuccess></stage><stage stageid="20d7732d-8c92-4c00-a602-e650d104a383" name="End" type="End"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f834329d-2a8f-4a5e-b021-bb8d752866a5" name="CheckInstanceHandle" type="SubSheet"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>ad2c07f9-3459-4ef3-8c18-627591869d46</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="ad2c07f9-3459-4ef3-8c18-627591869d46" name="Exit" type="Code"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>20d7732d-8c92-4c00-a602-e650d104a383</onsuccess><code><![CDATA[
	Dim app As Object = GetInstance(handle)
	app.NormalTemplate.Saved = True
	app.Quit()

	Me.HandleMap.Remove(handle)
	Me.InstanceMap.Remove(app)]]></code></stage><stage stageid="5aee7da4-09aa-4a84-8b38-0c219d10a84c" name="handle" type="Data"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="76d84196-a3f8-438d-87ca-8bbb5a150385" name="Close" type="SubSheetInfo"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ca2a96a4-4be4-46a3-bf43-ad0b1fd688d1" name="Start" type="Start"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>925e7711-a825-4be7-8a2b-13cc2b3f6458</onsuccess></stage><stage stageid="bd446e30-85c5-4bd8-baec-09874a164871" name="End" type="End"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="925e7711-a825-4be7-8a2b-13cc2b3f6458" name="CheckInstanceHandle" type="SubSheet"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>98b463cd-ae0f-4752-917d-0846f7f9d1d2</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="98b463cd-ae0f-4752-917d-0846f7f9d1d2" name="Close" type="Code"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /></inputs><onsuccess>bd446e30-85c5-4bd8-baec-09874a164871</onsuccess><code><![CDATA[	
	Dim doc As Object = GetDocument(handle,documentname)
	doc.Saved = True
	doc.Close()]]></code></stage><stage stageid="79711364-a2bd-434e-a183-7cbc2f61e54e" name="handle" type="Data"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="b32ff547-580d-4801-b3f1-a474b288e66a" name="documentname" type="Data"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><display x="-210" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f44241e2-c1fa-41ec-94d2-ce04c3004b8c" name="Type Text" type="SubSheetInfo"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="829e6b71-8bac-474c-affb-8854abe5b326" name="Start" type="Start"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="text" stage="text" /><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>e1086e24-ae1f-4ce6-81c2-4422ef6fa002</onsuccess></stage><stage stageid="5b094fdf-6ef3-4846-b25c-0ee209e038de" name="End" type="End"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e1086e24-ae1f-4ce6-81c2-4422ef6fa002" name="CheckInstanceHandle" type="SubSheet"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>fcf56391-2a51-4e70-9930-2f19ac9223c3</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="fcf56391-2a51-4e70-9930-2f19ac9223c3" name="TypeText" type="Code"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="text" name="text" expr="[text]" /></inputs><onsuccess>5b094fdf-6ef3-4846-b25c-0ee209e038de</onsuccess><code><![CDATA[
	GetInstance(handle).Selection.TypeText(text)]]></code></stage><stage stageid="4473d616-1d96-4946-8abf-c0c68033e5c1" name="handle" type="Data"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="94b0135e-de95-421b-a5db-07f6fc22b5d8" name="documentname" type="Data"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><display x="-210" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30c13569-5e52-4d2b-9d3f-30764a391f99" name="text" type="Data"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><display x="-210" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54d32e12-69ab-45d3-adc4-74cb220667a1" name="Create Document" type="SubSheetInfo"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9e417d18-2b1b-442c-9c74-e1e8cbc9684d" name="Start" type="Start"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>8d4245f6-0d86-4a8d-b932-65500682f43d</onsuccess></stage><stage stageid="668ccf5c-2a61-4b7c-b9b7-f60c6d1a8dfb" name="End" type="End"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="documentname" stage="documentname" /></outputs></stage><stage stageid="8d4245f6-0d86-4a8d-b932-65500682f43d" name="CheckInstanceHandle" type="SubSheet"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>cdeffd66-9688-46dc-91b2-6ddf3d8476c7</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="cdeffd66-9688-46dc-91b2-6ddf3d8476c7" name="CreateDocument" type="Code"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="documentname" stage="documentname" /></outputs><onsuccess>668ccf5c-2a61-4b7c-b9b7-f60c6d1a8dfb</onsuccess><code><![CDATA[
	Dim doc as Object = GetInstance(handle).Documents.Add()
	documentname = doc.Name
	doc.Activate()
]]></code></stage><stage stageid="55507265-dccf-498b-b457-9fa3230c8ad8" name="handle" type="Data"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="96a1c94c-4176-4965-aeec-43ccd66ca797" name="documentname" type="Data"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><display x="-210" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa7025db-88e7-4128-912e-878929e649bf" name="Update Bookmark" type="SubSheetInfo"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="06b932ee-3310-4628-823f-265d0ef63d38" name="Start" type="Start"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Bookmark name" stage="name" /><input type="text" name="Text" stage="value" /><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>e87e8a9b-c20a-469f-a077-2b6ae1cd52a4</onsuccess></stage><stage stageid="4568f576-e587-46d1-9613-8455000361ee" name="End" type="End"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e87e8a9b-c20a-469f-a077-2b6ae1cd52a4" name="CheckInstanceHandle" type="SubSheet"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>41afaa16-ddea-4385-9530-07f94ee95532</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="41afaa16-ddea-4385-9530-07f94ee95532" name="UpdateBookmark" type="Code"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="text" name="name" expr="[name]" /><input type="text" name="value" expr="[value]" /></inputs><onsuccess>4568f576-e587-46d1-9613-8455000361ee</onsuccess><code><![CDATA[
	Dim doc as Object = GetDocument(handle,documentname)
	If doc.Bookmarks.Exists(name) Then
		doc.Bookmarks.Item(name).Range.Text = value
	End If]]></code></stage><stage stageid="ad290b27-e3a5-4ad5-b352-eff94acc7de8" name="handle" type="Data"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="5b28714a-4da4-4baf-8116-a19d736d56c4" name="value" type="Data"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="165" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="294bedbf-1386-4233-b599-e8e5d50121bc" name="name" type="Data"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="422f53fe-cfb8-44ab-8628-5e7192d8a14b" name="documentname" type="Data"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f3f2cc6-4bd9-456e-9857-dc71ccafdcb9" name="Set Current Instance" type="SubSheetInfo"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ef5caa1c-ba0b-4e25-ba69-081e9386a4f3" name="Start" type="Start"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><loginhibit /><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The handle for the instance which should become the current instance" stage="handle" /></inputs><onsuccess>215a6e49-5725-401b-9f3f-d1fd9261dac7</onsuccess></stage><stage stageid="c0b115d4-6eff-4088-9356-8abf9d79ccc1" name="End" type="End"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="215a6e49-5725-401b-9f3f-d1fd9261dac7" name="CheckInstanceHandle" type="SubSheet"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>c0b115d4-6eff-4088-9356-8abf9d79ccc1</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="4df855d7-0ceb-42e9-9fe3-c4a6de4b72e8" name="Note1" type="Note"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><loginhibit /><narrative>Don't need to anything - a side-effect of the check is to set the current instance... makes it simple.</narrative><display x="165" y="-60" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d355c6b1-7c4f-4842-99d8-2e2ba88a3934" name="Attach Instance" type="SubSheetInfo"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2a0baf69-393d-4338-91c2-599bb8f9dd88" name="Start" type="Start"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path and filename of the document that the instance should attach to, empty indicates that the topmost Word instance be attached to" stage="Filename" /></inputs><onsuccess>cf413a56-3b39-4024-9358-e45c4cb1270f</onsuccess></stage><stage stageid="080da51f-78bc-4c03-a069-fba8ce7216c3" name="End" type="End"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The handle to the newly created instance, attached to either an existing Word window or a new one." stage="handle" /></outputs></stage><stage stageid="2d9ef69e-28d3-4c3d-8c66-ad48abf1c9bd" name="Filename" type="Data"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7538631d-fe66-4fa5-9087-9757b9baa750" name="handle" type="Data"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cf413a56-3b39-4024-9358-e45c4cb1270f" name="AttachInstance" type="Code"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[Filename]" /></inputs><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>080da51f-78bc-4c03-a069-fba8ce7216c3</onsuccess><code><![CDATA[
If filename = "" Then
	handle = GetHandle(GetObject(, "Word.Application"))
Else
	handle = GetHandle(GetObject(filename).Application)
End If]]></code></stage><stage stageid="bb83c823-90bc-4da3-9b03-b1bfae7ffe16" name="Detach Instance" type="SubSheetInfo"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><narrative>Detaches from the Word instance with the given handle, removing all references within this business object.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3086e1fc-ae22-4963-93f2-743021835c1d" name="Start" type="Start"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The handle to the instance to be detached from" stage="handle" /></inputs><onsuccess>10611a26-c805-4e33-b3ba-4be3ffb5ae66</onsuccess></stage><stage stageid="936fb37c-767b-4c3b-9b5e-57b36515bba6" name="End" type="End"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><loginhibit /><display x="-15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cfdae8d9-4e29-4353-a17b-4c5a724fa96e" name="handle" type="Data"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><display x="-210" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="10611a26-c805-4e33-b3ba-4be3ffb5ae66" name="DetachInstance" type="Code"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>936fb37c-767b-4c3b-9b5e-57b36515bba6</onsuccess><code><![CDATA[Dim app As Object = GetInstance(handle)
HandleMap.Remove(CInt(handle))
InstanceMap.Remove(app)
If app Is CurrentInstance Then CurrentInstance = Nothing
Marshal.ReleaseComObject(app)]]></code></stage><stage stageid="f1a76547-26a8-4bbb-876c-12108d44f5f5" name="handle" type="Data"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="744e462f-ed5d-4004-afe9-a69ae3cddf27" name="Get Highlighted Text" type="SubSheetInfo"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><narrative>Returns the documents highlighted text as a collection</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3fa2a732-65ad-412e-8dfc-797a10a1dd38" name="End" type="End"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="highlighted text" stage="highlighted text" /></outputs></stage><stage stageid="d60af1f9-c084-491f-b44f-99c1c5fe61b4" name="Get Highlighted Text" type="Code"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /></inputs><outputs><output type="collection" name="highlighted text" stage="highlighted text" /></outputs><onsuccess>3fa2a732-65ad-412e-8dfc-797a10a1dd38</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim r As Object = d.Range
Dim i As Integer

Dim dt As New System.Data.DataTable()
Dim dr As System.Data.DataRow

dt.Columns.Add("text", GetType(String))
dt.Columns.Add("highlight index", GetType(Integer))

r.Find.Highlight = true
r.Find.Forward = True

Do While r.Find.Execute
	If r.HighlightColorIndex <> 0 Then
		dr = dt.NewRow()
		dr("text") = r.Text
		dr("highlight index") = r.HighlightColorIndex
		dt.Rows.Add(dr)
	End If
	i = r.End
	r.Start = i
Loop
highlighted_text = dt]]></code></stage><stage stageid="efa512ec-3a71-4ae2-8fea-10c01497d1ad" name="handle" type="Data"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9014f0b7-d7ec-4f10-9fe4-9294d5c469ac" name="Start" type="Start"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /></inputs><onsuccess>d60af1f9-c084-491f-b44f-99c1c5fe61b4</onsuccess></stage><stage stageid="19a7cc99-e574-4f93-a220-3f94df6dcb00" name="document name" type="Data"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41cca25a-0352-483f-bd0d-210348dddccf" name="highlighted text" type="Collection"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><display x="-195" y="90" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="text" type="text" /><field name="highlight index" type="number" description="A value from from the wdColor enumeration" /></collectioninfo></stage><stage stageid="faba3574-835f-426f-babd-7741f20c08ef" name="Replace Highlighted Text" type="SubSheetInfo"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><narrative>Searches for and replaces highlighted text</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="10f02379-dc0a-4fb5-8107-75333fd04af6" name="End" type="End"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1750861c-714e-4fd9-a7ad-babb2bc8735b" name="handle" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1c605ebc-3335-451b-a024-96310e159f3d" name="Start" type="Start"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="text" name="current text" stage="current text" /><input type="number" name="current highlight" stage="current highlight" /><input type="text" name="new text" stage="new text" /><input type="number" name="new highlight" stage="new highlight" /><input type="flag" name="new bold" stage="new bold" /></inputs><onsuccess>86ff3b1e-b8e7-41aa-81c8-c6b731c9783d</onsuccess></stage><stage stageid="478dfc3b-afab-4b3d-b893-d63b17652148" name="document name" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2480b35b-c034-4e1f-8fee-05f04f234f8c" name="current text" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4cb5e60-a090-41e5-945a-64a46b4fc815" name="current highlight" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="60806e60-b1df-4318-9475-7a638c227a47" name="new text" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a40255d1-e872-4311-b2d8-2e2dfda8bdde" name="new highlight" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86ff3b1e-b8e7-41aa-81c8-c6b731c9783d" name="Replace Highlighted Text" type="Code"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="text" name="current text" expr="[current text]" /><input type="number" name="current highlight" expr="[current highlight]" /><input type="text" name="new text" expr="[new text]" /><input type="number" name="new highlight" expr="[new highlight]" /><input type="flag" name="new bold" expr="[new bold]" /></inputs><onsuccess>10f02379-dc0a-4fb5-8107-75333fd04af6</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim r As Object = d.Range
Dim i As Integer

r.Find.Highlight = true
r.Find.Forward = True

Do While r.Find.Execute(current_text)
	If r.HighlightColorIndex = current_highlight Then
		r.Text = new_text
		r.HighlightColorIndex = CInt(new_highlight)
		r.Bold=new_bold
	End If
	i = r.End
	r.Start = i
Loop]]></code></stage><stage stageid="234fee0c-5b96-4829-be83-f34ff671c61e" name="new bold" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="9a6342b6-1b6c-467f-970c-ae638d0dc946" name="Select All" type="SubSheetInfo"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><narrative>Selects the entire document</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="32c7e893-ade6-4c28-8878-b0b6c201c420" name="End" type="End"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f292c519-969f-48ca-a11a-b32031d9015b" name="handle" type="Data"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c3d29d4-83e1-4c5c-9d14-e4b698c6a498" name="Start" type="Start"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /></inputs><onsuccess>71b6f8f9-6acb-4a3e-a7a5-5938100e9139</onsuccess></stage><stage stageid="7e4a9137-bdd0-49c3-a19f-a8bae90a3bd3" name="document name" type="Data"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="71b6f8f9-6acb-4a3e-a7a5-5938100e9139" name="Select All" type="Code"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /></inputs><onsuccess>32c7e893-ade6-4c28-8878-b0b6c201c420</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)

d.Select

d = Nothing]]></code></stage><stage stageid="fc588eee-d842-46c9-b230-634378015cc6" name="Copy to Clipboard" type="SubSheetInfo"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><narrative>Copies the current selection on to the clipboard</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ef78d8f3-3153-45b1-8714-b95142c7d2b9" name="End" type="End"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3c1ca358-cb83-4f00-9bf5-ddf03a34149a" name="handle" type="Data"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f4eb6834-0cbe-4f99-8bb0-6c25173f85aa" name="Start" type="Start"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /></inputs><onsuccess>094bc875-98bf-40d7-930d-c118bff53af6</onsuccess></stage><stage stageid="8f073f68-b07c-4837-91ce-37c063f71401" name="document name" type="Data"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="094bc875-98bf-40d7-930d-c118bff53af6" name="Copy to Clipboard" type="Code"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /></inputs><onsuccess>ef78d8f3-3153-45b1-8714-b95142c7d2b9</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = w.Selection

If s IsNot Nothing Then s.Copy

d = Nothing
w = Nothing
s = Nothing]]></code></stage><stage stageid="c2e0189a-f373-4e16-8ac9-b3f50c3928ef" name="Paste from Clipboard" type="SubSheetInfo"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><narrative>Pastes the contents of the clipboard into the document</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cc3026b3-8726-4034-9304-aa303f869095" name="End" type="End"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c102344a-5e52-4389-acd8-9d3df3011a36" name="handle" type="Data"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f225a8a7-74c0-4baf-abd1-e4619d1cd9dc" name="Start" type="Start"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /></inputs><onsuccess>32689787-cfad-4f85-98db-9101ef103d8b</onsuccess></stage><stage stageid="414b8866-2d52-4971-aab5-a48d66411bf0" name="document name" type="Data"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32689787-cfad-4f85-98db-9101ef103d8b" name="Paste from Clipboard" type="Code"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /></inputs><onsuccess>cc3026b3-8726-4034-9304-aa303f869095</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application

w.Selection.Paste

d = Nothing
w = Nothing]]></code></stage><stage stageid="c9f4e132-f333-46bd-9f33-bd08364ca098" name="Clear Clipboard" type="SubSheetInfo"><subsheetid>479d48e5-45be-4252-99e6-7685eacb95f0</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c63bcd84-f4b9-4db7-a9ca-2d27ed62ea2c" name="Start" type="Start"><subsheetid>479d48e5-45be-4252-99e6-7685eacb95f0</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d6bc499e-db0e-4204-94f7-060f8b728596</onsuccess></stage><stage stageid="cae61485-5711-4b5a-b35a-cc2cc49dcecd" name="End" type="End"><subsheetid>479d48e5-45be-4252-99e6-7685eacb95f0</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d6bc499e-db0e-4204-94f7-060f8b728596" name="Clear" type="Code"><subsheetid>479d48e5-45be-4252-99e6-7685eacb95f0</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>cae61485-5711-4b5a-b35a-cc2cc49dcecd</onsuccess><code><![CDATA[
My.Computer.Clipboard.Clear]]></code></stage><stage stageid="5b918aa9-d185-4273-8d17-322bfcb06ab4" name="Find Text" type="SubSheetInfo"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><narrative>Searches the document for the given text</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9fa6746a-2e54-4364-987a-1c82aca0bfdc" name="End" type="End"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="found" stage="found" /></outputs></stage><stage stageid="44e131e3-1dd8-4ae7-ac12-119b805fb8d0" name="handle" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5322d24f-f105-4817-b328-580613831a00" name="Start" type="Start"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="text" name="text" stage="text" /><input type="flag" name="match case" stage="match case" /><input type="flag" name="match whole word" stage="match whole word" /></inputs><onsuccess>1f2d6c14-b8c0-4895-8791-15dc1c4b8cd3</onsuccess></stage><stage stageid="b294a47f-4ad7-4cf9-a898-13aefa7c9f0f" name="document name" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f2d6c14-b8c0-4895-8791-15dc1c4b8cd3" name="Find Text" type="Code"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="text" name="text" expr="[text]" /><input type="flag" name="match case" expr="[match case]" /><input type="flag" name="match whole word" expr="[match whole word]" /></inputs><outputs><output type="flag" name="found" stage="found" /></outputs><onsuccess>9fa6746a-2e54-4364-987a-1c82aca0bfdc</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = w.Selection
Dim f As Object = s.Find

Try

f.ClearFormatting
With f
	.Text = Text
	.Replacement.Text = ""
	.Forward = True
	.Wrap = 1 'wdFindContinue
	.Format = False
	.MatchCase = match_case
	.MatchWholeWord = match_whole_word
	.MatchWildcards = False
	.MatchSoundsLike = False
	.MatchAllWordForms = False
End With
found = f.Execute

Catch ex As Exception

found = False

Finally

d = Nothing
w = Nothing
s = Nothing
f = Nothing

End try]]></code></stage><stage stageid="169d67d4-b8ae-48c2-a693-6a4cb4ef2cf4" name="text" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="934d6430-60d8-4676-b570-e3be9639641c" name="found" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c53ac88a-5097-4cd0-8962-e04e6ba421bf" name="match case" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="18a5ce24-7703-42c9-9c67-36c7f5acc805" name="match whole word" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="cc529358-b060-4eec-b382-563e4dd595cb" name="Select Next Cell" type="SubSheetInfo"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><narrative>Moves the cursor to the table cell n steps away from the current cell. A positive number of steps moves forward and a negative number moves backwards.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="12001300-6faa-4829-99f6-61df86a10e66" name="End" type="End"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="selected" stage="selected" /></outputs></stage><stage stageid="3beae3c8-e083-4bcd-996b-733ab9676289" name="handle" type="Data"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="75895ee8-9f3a-4bbc-993e-783fd8679de6" name="Start" type="Start"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="number" name="steps" narrative="Optional, positive number to move forward, negative to move back, default 1." stage="steps" /></inputs><onsuccess>42ed0356-4769-4b34-a449-4fbe0a21922b</onsuccess></stage><stage stageid="9c875518-2eef-4c5b-8040-004573505f3e" name="document name" type="Data"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4b10f2e8-1f7b-44ae-9d88-ac58bd3f2a22" name="selected" type="Data"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="42ed0356-4769-4b34-a449-4fbe0a21922b" name="Select Next Cell" type="Code"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="number" name="steps" expr="[steps]" /></inputs><outputs><output type="flag" name="selected" stage="selected" /></outputs><onsuccess>12001300-6faa-4829-99f6-61df86a10e66</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = Nothing
Dim c As Object = Nothing
Dim c1 As Object = Nothing
Dim i As Integer

Try
If steps < 0 Then
	For i = steps To -1
		s = w.Selection
		c = s.Cells
		If c.Count = 0 Then
			selected = False
			Exit Sub
		ElseIf c(1).Previous Is Nothing Then
			selected = False
			Exit Sub
		Else
			c(1).Previous.Select
			If c1 Is Nothing Then c1 = c(1)
		End If
	Next
Else
	For i = 1 To steps
		s = w.Selection
		c = s.Cells
		If c.Count = 0 Then
			selected = False
			Exit Sub
		ElseIf c(1).Next Is Nothing Then
			selected = False
			Exit Sub
		Else
			c(1).Next.Select
			If c1 Is Nothing Then c1 = c(1)
		End If
	Next
End If

c1 = Nothing
selected = True

Catch ex As Exception
	selected = False
Finally
	If c1 IsNot Nothing Then
		c1.Select
	End If
	d = Nothing
	w = Nothing
	s = Nothing
	c = Nothing
	c1 = Nothing
End try]]></code></stage><stage stageid="96975d1f-c613-48e6-b917-47041ee8da2c" name="steps" type="Data"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="da8e46d1-b4b9-40b8-96d3-d5f50d7f4c89" name="Set Selected Cell Text" type="SubSheetInfo"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d93f9a85-6397-463f-a7cc-793c62f0afce" name="End" type="End"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e765aafd-6194-4dde-8353-5dca090372ef" name="handle" type="Data"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e200c448-4a17-47ce-a208-ba02c896eb8a" name="Start" type="Start"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="text" name="text" stage="text" /><input type="flag" name="append" narrative="Optional, default False will overwrite." stage="append" /></inputs><onsuccess>5032655f-d60c-4fd4-8247-b167d88f2bda</onsuccess></stage><stage stageid="5b309234-72f0-479a-871b-51dda5f6075c" name="document name" type="Data"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5032655f-d60c-4fd4-8247-b167d88f2bda" name="Set Cell" type="Code"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="text" name="text" expr="[text]" /><input type="flag" name="append" expr="[append]" /></inputs><onsuccess>d93f9a85-6397-463f-a7cc-793c62f0afce</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = Nothing
Dim cs As Object = Nothing
Dim c As Object = Nothing
Dim r As Object = Nothing

Try

s = w.Selection
cs = s.Cells
If cs.Count = 1 Then
	c = cs(1)
	r = c.Range
	If append Then
		r.Text = r.Text.Substring(0, r.Text.Length - 2) & text & r.Text.Substring(r.Text.Length - 2)
	Else
		r.Text = text
	End If
End If

Catch ex As Exception
	Throw ex
Finally
	d = Nothing
	w = Nothing
	s = Nothing
	cs = Nothing
	c = Nothing
	r = Nothing
End try]]></code></stage><stage stageid="213b47ae-d5b2-4c58-a0bb-967f877da779" name="text" type="Data"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fea1f6e-b9fd-48a4-975b-95eb357812ec" name="append" type="Data"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="264c4c7c-6251-4383-9f3a-28559469d1e2" name="Select Next Field" type="SubSheetInfo"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><narrative>Selects the next field in the document</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="058b4f33-fd12-422b-b45f-9604400b893e" name="End" type="End"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="selected" stage="selected" /></outputs></stage><stage stageid="85c127b5-cf48-4914-a129-d36cc585c1ff" name="handle" type="Data"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><display x="-195" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f94d5f5d-2027-44e7-8122-ed018c4bcaa0" name="Start" type="Start"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><loginhibit /><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="number" name="steps" narrative="Optional, positive number to move forward, negative to move back, default 1." stage="steps" /></inputs><onsuccess>2dc430f1-a3ee-4adb-a992-c153fbb04bca</onsuccess></stage><stage stageid="49b6201c-934e-4e16-98a3-3333ed61e186" name="document name" type="Data"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5639856e-1937-434a-bfee-927110122a21" name="selected" type="Data"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="93b18a8f-6970-47eb-9c5f-ced62e36f10b" name="steps" type="Data"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="2dc430f1-a3ee-4adb-a992-c153fbb04bca" name="Select Next Field" type="Code"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><loginhibit /><display x="15" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="number" name="steps" expr="[steps]" /></inputs><outputs><output type="flag" name="selected" stage="selected" /></outputs><onsuccess>058b4f33-fd12-422b-b45f-9604400b893e</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = w.Selection
Dim f As Object = s.Find
Dim wrap, count, which As Integer
Dim forward as Boolean

If steps < 0 Then
	count = -1 * steps
	wrap = 2
	forward = False
	which = 3
Else
	count = steps
	wrap = 1
	forward = True
	which = 2
End If

Try

s.GoTo(What:=7, Which:=which, Count:=count, Name:="")
f.ClearFormatting
With f
	.Text = ""
	.Replacement.Text = ""
	.Forward = forward
	.Wrap = wrap
	.Format = False
	.MatchCase = False
	.MatchWholeWord = False
	.MatchWildcards = False
	.MatchSoundsLike = False
	.MatchAllWordForms = False
End With

s.MoveRight(Unit:=1, Count:=1, Extend:=1)
selected = True

Catch ex As Exception

selected = False

Finally

d = Nothing
w = Nothing
s = Nothing
f = Nothing

End try]]></code></stage><stage stageid="62da7c33-64e2-4cb4-b8f7-50742893de4a" name="Set Selected Checkbox" type="SubSheetInfo"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><narrative>Ticks or unticks the selected checkbox</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="510c9852-b8ac-4ff8-8e0c-7c8d13ed79c3" name="End" type="End"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c24730d4-72ba-45f3-a565-5a2cdde3e197" name="handle" type="Data"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7894538-d76b-4e8f-9eba-4fdc810eb94a" name="Start" type="Start"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="flag" name="checked" stage="checked" /></inputs><onsuccess>2208ee1b-e132-49b8-8567-2c69be9f4e2b</onsuccess></stage><stage stageid="a9d8cd15-d588-429e-82f7-bede62d5d650" name="document name" type="Data"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2208ee1b-e132-49b8-8567-2c69be9f4e2b" name="Set Checkbox" type="Code"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="flag" name="Checked" expr="[checked]" /></inputs><onsuccess>510c9852-b8ac-4ff8-8e0c-7c8d13ed79c3</onsuccess><code><![CDATA[Dim doc = GetDocument(handle,document_name)

Dim sel = doc.Application.Selection
Dim fields = sel.FormFields
If fields.Count > 0 Then
    Dim field = fields(1)
	If field IsNot Nothing AndAlso field.Type = 71 Then 'wdFieldFormCheckBox
		Dim cb = field.CheckBox
		cb.Value = checked
	End If
End If

Dim control = sel.ParentContentControl
If control IsNot Nothing Then
  control.Checked = checked
End If]]></code></stage><stage stageid="df9e9413-eefd-4eae-8129-9314da3eff69" name="checked" type="Data"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="581ce51a-db6c-4a6c-9455-7047b2e58bdb" name="Get Footer Text" type="SubSheetInfo"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><narrative>Gets the text from the specified footer</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f07e9727-845e-4d3e-b035-79dd9c1a9e02" name="End" type="End"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="footer text" stage="footer text" /></outputs></stage><stage stageid="e7505af8-12a1-48a0-9b29-5d53359af376" name="section" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="2ed14a06-174f-4565-be98-fea2aabfb137" name="footer" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="d2735c81-3c82-4c05-804d-dc66ad1d7a0f" name="handle" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d20473de-325e-4790-8adc-d4afa4a49f54" name="document name" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89da9cc4-334f-4e99-9348-64fea39e45ad" name="Get Footer text" type="Code"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="number" name="section" expr="[section]" /><input type="number" name="footer" expr="[footer]" /></inputs><outputs><output type="text" name="footer text" stage="footer text" /></outputs><onsuccess>f07e9727-845e-4d3e-b035-79dd9c1a9e02</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim s As Object = Nothing
Dim f As Object = Nothing
Dim r As Object = Nothing

Try

s = d.Sections(section)
f = s.Footers(footer)
r = f.Range
r.End = r.End - 1
footer_text = r.text

Catch ex As Exception
	Throw ex
Finally
	d = Nothing
	s = Nothing
	f = Nothing
	r = Nothing
End try]]></code></stage><stage stageid="c9d0bd4e-e9b7-4677-b57b-025580e8a62a" name="Start" type="Start"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="number" name="section" narrative="Default 1" stage="section" /><input type="number" name="footer" narrative="Default 1" stage="footer" /></inputs><onsuccess>89da9cc4-334f-4e99-9348-64fea39e45ad</onsuccess></stage><stage stageid="21cad55b-4aa5-44d6-8d55-8668a8e01267" name="footer text" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcb6879c-aec3-4f7e-b0c0-c7a05541c8ce" name="Add Table Row" type="SubSheetInfo"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="87ab81a0-0173-4bb1-a341-070e1a8672d4" name="Start" type="Start"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="-15" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /><input type="number" name="Table Number" narrative="The number of the table within the word document" stage="Table Number" /></inputs><onsuccess>8bf740f2-5429-4adb-ba49-4345536358a7</onsuccess></stage><stage stageid="11ef2aff-c240-4089-a3dc-133c850260fe" name="End" type="End"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><display x="-15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8bf740f2-5429-4adb-ba49-4345536358a7" name="CheckInstanceHandle" type="SubSheet"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><display x="-15" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>e352f349-79ec-4303-9fa0-d6b6329b9b3d</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="e352f349-79ec-4303-9fa0-d6b6329b9b3d" name="AddRow" type="Code"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><display x="-15" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="TableNumber" expr="[Table Number]" /></inputs><onsuccess>11ef2aff-c240-4089-a3dc-133c850260fe</onsuccess><code><![CDATA[
Dim doc as Object = GetDocument(handle,documentname)
doc.Tables.Item(TableNumber).Rows.Add()]]></code></stage><stage stageid="3146c42a-ee16-4654-8f47-cad56ba1c4a3" name="handle" type="Data"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0fa28223-5cbc-4b56-994f-735cb7ecf068" name="documentname" type="Data"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a9191e3-0b09-44ee-9fd3-96a452ae22de" name="Table Number" type="Data"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="71eeff42-400a-4827-9003-61399bbd4ec0" name="Set Table Cell Value" type="SubSheetInfo"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="144acb7e-c0ea-4870-9588-1e1d12935a8e" name="End" type="End"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="0" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="75792fd8-d387-4be8-96b9-05b6a240d922" name="CheckInstanceHandle" type="SubSheet"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="0" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7bcad06a-9e42-4c2b-941c-fb66a76fde60</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="7bcad06a-9e42-4c2b-941c-fb66a76fde60" name="SetCell" type="Code"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="0" y="75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="TableNumber" expr="[Table Number]" /><input type="number" name="cellx" expr="[Cell x Number]" /><input type="number" name="celly" expr="[Cell y Number]" /><input type="text" name="CellValue" expr="[Value]" /></inputs><onsuccess>144acb7e-c0ea-4870-9588-1e1d12935a8e</onsuccess><code><![CDATA[
Dim doc as Object = GetDocument(handle,documentname)
doc.Tables.Item(TableNumber).Cell(celly,cellx).Range.Text = CellValue]]></code></stage><stage stageid="35ed0ea5-a2a7-4a92-a3a7-c9c817bc77cb" name="handle" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0baad10b-f2e3-4d40-8a3b-0fc6b52c05c9" name="documentname" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="536f5aa3-617c-440e-9b06-997207b34dc9" name="Table Number" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80acb91a-397b-48c7-bf67-f3a861b626e4" name="Cell x Number" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="62ad7203-c6fb-4198-b33e-b9c3734eef55" name="Cell y Number" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c9c145f5-9d12-4e84-b025-08cc8532ed87" name="Value" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="90489fc7-f75a-4870-9b72-b146515b522f" name="Start" type="Start"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="0" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /><input type="number" name="Table Number" narrative="The number of the table within the document" stage="Table Number" /><input type="number" name="Cell x Number" narrative="The x location number of the cell within the table (starts at 1)" stage="Cell x Number" /><input type="number" name="Cell y Number" narrative="The y location number of the cell within the table (starts at 1)" stage="Cell y Number" /><input type="text" name="Value" narrative="The value to set the cell to" stage="Value" /></inputs><onsuccess>75792fd8-d387-4be8-96b9-05b6a240d922</onsuccess></stage><stage stageid="98bd4479-501c-4af6-87b3-0e44102b30f1" name="Get Table Cell Value" type="SubSheetInfo"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="20a32c47-0bd7-438f-8bc9-cd34a9258f92" name="Start" type="Start"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="0" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /><input type="number" name="Table Number" narrative="The number of the table within the document" stage="Table Number" /><input type="number" name="Cell x Number" narrative="The x location number of the cell within the table (starts at 1)" stage="Cell x Number" /><input type="number" name="Cell y Number" narrative="The y location number of the cell within the table (starts at 1)" stage="Cell y Number" /></inputs><onsuccess>c02323b7-9f42-4a22-8729-fa65114b1a7b</onsuccess></stage><stage stageid="02dfaa1a-2b89-40d1-a9d8-ce53515dcc8a" name="End" type="End"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="0" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="the cell contents" stage="result" /></outputs></stage><stage stageid="c02323b7-9f42-4a22-8729-fa65114b1a7b" name="CheckInstanceHandle" type="SubSheet"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="0" y="75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>10df1c8e-f6b2-4f55-a8e0-a14ac4a94d02</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="10df1c8e-f6b2-4f55-a8e0-a14ac4a94d02" name="GetCell" type="Code"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="0" y="120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="TableNumber" expr="[Table Number]" /><input type="number" name="cellx" expr="[Cell x Number]" /><input type="number" name="celly" expr="[Cell y Number]" /></inputs><outputs><output type="text" name="result" stage="result" /></outputs><onsuccess>02dfaa1a-2b89-40d1-a9d8-ce53515dcc8a</onsuccess><code><![CDATA[Dim doc = GetDocument(handle,documentname)
Dim rg = doc.Tables(TableNumber).Cell(celly,cellx).Range
'The character at the end is used to mark end of cells in Word
rg.End = rg.End - 1
result = rg.Text]]></code></stage><stage stageid="876bd8c3-5bc4-4ce4-a349-8a07eea11a38" name="handle" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="b16e011f-0e1b-45a0-8152-71f30d0a2bcc" name="documentname" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ded21bd0-41c4-412f-b40f-b9c7946eea0e" name="result" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff923bf0-e2c8-49bf-a547-9c4624ceebc4" name="Table Number" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6752801f-8544-44e4-9eed-6159fe32331d" name="Cell x Number" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="815b9e66-4c61-42fb-9b19-d3d7f86aeac4" name="Cell y Number" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e945f84a-1ffc-461e-a613-eafef2869044" name="Note2" type="Note"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="000000" /></stage><stage stageid="fa36ded4-4caa-4238-8abc-6350ee0c945e" name="Note2" type="Note"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="000000" /></stage><stage stageid="ae82d62f-d1b2-4af1-977a-db5619d47797" name="ExportPDF" type="SubSheetInfo"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b5725bdb-4fb0-4666-9975-83186b793e2e" name="Start" type="Start"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" stage="filename" /><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>c4b70afa-f912-4ea4-91af-d05e2f73da34</onsuccess></stage><stage stageid="7df78cd1-d4d4-4f7f-b232-44da138f17fb" name="End" type="End"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c4b70afa-f912-4ea4-91af-d05e2f73da34" name="CheckInstanceHandle" type="SubSheet"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>5f267c84-0795-4a87-900f-b5028d73ec8a</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="5f267c84-0795-4a87-900f-b5028d73ec8a" name="ExportPDF" type="Code"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>7df78cd1-d4d4-4f7f-b232-44da138f17fb</onsuccess><code><![CDATA[Const wdExportFormatPDF As Integer = 17

Dim doc as Object = GetDocument(handle,documentname)
doc.ExportAsFixedFormat( _
  OutputFileName:=filename, _
  ExportFormat:=wdExportFormatPDF)
]]></code></stage><stage stageid="3bddbd67-c3d7-46ef-a6e9-3f2c78c00fe3" name="filename" type="Data"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="540adde5-d599-4f0d-819b-1e875fcebcc7" name="documentname" type="Data"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><display x="165" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="177dcef4-e724-431f-8af4-1eee1deecc09" name="handle" type="Data"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><display x="225" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <work-queue id="6" name="S1 General Ledger" xmlns="http://www.blueprism.co.uk/product/work-queue" />
        <process-group id="16f49748-2dd6-4fe7-b5ff-846c7b15130c" name="Banking" isDefaultGroup="False" xmlns="http://www.blueprism.co.uk/product/process-group">
            <members>
                <process id="0687e2fd-0b26-4a1f-9758-345bb6ccadcb" />
            </members>
        </process-group>
        <object-group id="6051c14b-99e6-4e7f-bb74-eab6b96ae15c" name="Utilities" isDefaultGroup="False" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="66085a0f-6bf6-45e2-b5ed-6345f014f05b" />
                <object id="e559fb86-9b63-4e0b-9399-972227189995" />
            </members>
        </object-group>
    </bpr:contents>
</bpr:release>